{"version":3,"file":"283.bundle.c8639b207102c45dece9.js","mappings":"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,CACT,EACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,oBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,GACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,WACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,GACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,GACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,GACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,GACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,EACA,YACA,YACA,cAGJ,CACEF,WAAY,MACZC,KAAM,UACNC,UAAW,CACT,EACA,EACA,EACA,EACA,mBACA,EACA,EACA,EACA,mBACA,EACA,EACA,EACA,oBACA,EACA,EACA,EACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,oBACA,YACA,EACA,EACA,oBACA,YACA,EACA,EACA,oBACA,WACA,EACA,EACA,oBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,mBACA,WACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,GACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,WACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,mBACA,WACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,WACA,EACA,EACA,mBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,kBACA,WACA,EACA,EACA,mBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,WACA,EACA,EACA,kBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,kBACA,WACA,EACA,EACA,mBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,mBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,WACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,WACA,EACA,mBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,iBACA,EACA,YACA,EACA,GACA,EACA,YACA,EACA,iBACA,EACA,GACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,WACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,WACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,WACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,iBACA,EACA,YACA,EACA,iBACA,EACA,YACA,EACA,GACA,EACA,WACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,iBACA,EACA,YACA,EACA,iBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,WACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,WACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,GACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,WACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,WACA,iBACA,EACA,EACA,YACA,iBACA,EACA,EACA,YACA,iBACA,EACA,EACA,YACA,GACA,EACA,EACA,YACA,iBACA,EACA,EACA,YACA,iBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,WACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,WACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,WACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,WACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,iBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,iBACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGJ,CACEF,WAAY,MACZC,KAAM,QACNC,UAAW,CACT,EACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,oBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,oBACA,WACA,YACA,YACA,oBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,GACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,WACA,mBACA,WACA,YACA,YACA,mBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,WACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,WACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,mBACA,WACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,WACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,WACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,GACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,kBACA,YACA,GACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,GACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,GACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,GACA,YACA,YACA,mBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,GACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,GACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,GACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,GACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,EACA,YACA,YACA,cAGJ,CACEF,WAAY,MACZC,KAAM,YACNC,UAAW,CACT,EACA,EACA,EACA,EACA,mBACA,YACA,YACA,YACA,mBACA,YACA,WACA,YACA,oBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,WACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,GACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,GACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,GACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,GACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,iBACA,YACA,YACA,YACA,GACA,YACA,WACA,YACA,iBACA,YACA,WACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,mBACA,YACA,WACA,YACA,mBACA,YACA,WACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,EACA,kBACA,WACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,iBACA,YACA,YACA,EACA,iBACA,YACA,YACA,EACA,GACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,iBACA,YACA,YACA,EACA,iBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,WACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,WACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,GACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,WACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,WACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,WACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,WACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,GACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,iBACA,YACA,WACA,EACA,iBACA,YACA,YACA,EACA,iBACA,YACA,YACA,EACA,GACA,YACA,WACA,EACA,iBACA,WACA,YACA,EACA,iBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,WACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,WACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,WACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,GACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,WACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,YACA,EACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,EACA,YACA,YACA,cAGJ,CACEF,WAAY,MACZC,KAAM,YACNC,UAAW,CACT,EACA,EACA,EACA,EACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,oBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,kBACA,YACA,EACA,YACA,oBACA,YACA,EACA,YACA,oBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,kBACA,YACA,EACA,WACA,oBACA,YACA,EACA,YACA,oBACA,YACA,EACA,YACA,oBACA,YACA,EACA,WACA,oBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,WACA,kBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,WACA,mBACA,WACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,WACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,WACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,kBACA,YACA,EACA,YACA,kBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,kBACA,YACA,EACA,YACA,kBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,GACA,kBACA,YACA,EACA,YACA,kBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,GACA,YACA,EACA,YACA,mBACA,WACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,mBACA,YACA,EACA,YACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,mBACA,WACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,YACA,EACA,EACA,mBACA,EACA,EACA,EACA,mBACA,EACA,YACA,EACA,mBACA,EACA,WACA,EACA,mBACA,EACA,WACA,EACA,kBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,GACA,EACA,kBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,WACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,WACA,EACA,kBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,WACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,iBACA,EACA,YACA,EACA,GACA,EACA,YACA,EACA,iBACA,EACA,WACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,mBACA,EACA,YACA,EACA,mBACA,EACA,EACA,EACA,mBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,mBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,mBACA,EACA,EACA,YACA,kBACA,EACA,EACA,WACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,WACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,mBACA,EACA,EACA,YACA,mBACA,EACA,EACA,YACA,mBACA,EACA,EACA,YACA,mBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,WACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,GACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,WACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,WACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,iBACA,EACA,EACA,YACA,iBACA,EACA,EACA,YACA,GACA,EACA,EACA,YACA,kBACA,EACA,EACA,YACA,kBACA,EACA,EACA,WACA,iBACA,EACA,EACA,YACA,iBACA,EACA,EACA,WACA,kBACA,EACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,WACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,GACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,WACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,WACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,GACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,WACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,WACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,YACA,EACA,EACA,kBACA,WACA,EACA,EACA,kBACA,YACA,EACA,EACA,iBACA,YACA,EACA,EACA,iBACA,YACA,EACA,EACA,iBACA,YACA,EACA,EACA,GACA,YACA,EACA,EACA,iBACA,YACA,EACA,EACA,iBACA,YACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,WACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,WACA,EACA,kBACA,EACA,GACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,WACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,GACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,WACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,GACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,iBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,iBACA,EACA,WACA,EACA,EACA,EACA,EACA,IAGJ,CACEF,WAAY,MACZC,KAAM,MACNC,UAAW,CACT,EACA,EACA,EACA,EACA,mBACA,EACA,EACA,EACA,mBACA,EACA,EACA,EACA,oBACA,EACA,EACA,EACA,mBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,oBACA,EACA,EACA,EACA,oBACA,EACA,EACA,EACA,mBACA,EACA,EACA,EACA,mBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,oBACA,EACA,EACA,EACA,oBACA,EACA,EACA,EACA,oBACA,EACA,EACA,EACA,oBACA,EACA,EACA,EACA,mBACA,EACA,EACA,EACA,mBACA,EACA,EACA,EACA,mBACA,EACA,EACA,EACA,mBACA,EACA,EACA,EACA,mBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,mBACA,EACA,EACA,EACA,mBACA,EACA,EACA,EACA,mBACA,EACA,EACA,EACA,mBACA,EACA,EACA,EACA,mBACA,EACA,EACA,EACA,mBACA,WACA,WACA,WACA,mBACA,WACA,WACA,WACA,mBACA,WACA,WACA,WACA,mBACA,WACA,WACA,WACA,mBACA,WACA,WACA,WACA,mBACA,WACA,WACA,WACA,mBACA,WACA,WACA,WACA,mBACA,WACA,WACA,WACA,mBACA,WACA,WACA,WACA,mBACA,WACA,WACA,WACA,kBACA,WACA,WACA,WACA,kBACA,WACA,WACA,WACA,mBACA,WACA,WACA,WACA,mBACA,WACA,WACA,WACA,kBACA,WACA,WACA,WACA,kBACA,WACA,WACA,WACA,mBACA,WACA,WACA,WACA,mBACA,WACA,WACA,WACA,mBACA,WACA,WACA,WACA,mBACA,WACA,WACA,WACA,kBACA,WACA,WACA,WACA,kBACA,WACA,WACA,WACA,mBACA,WACA,WACA,WACA,mBACA,WACA,WACA,WACA,mBACA,WACA,WACA,WACA,GACA,WACA,WACA,WACA,mBACA,WACA,EACA,WACA,mBACA,WACA,EACA,WACA,mBACA,WACA,EACA,WACA,mBACA,WACA,EACA,WACA,kBACA,WACA,EACA,WACA,kBACA,WACA,EACA,WACA,mBACA,WACA,EACA,WACA,mBACA,WACA,EACA,WACA,mBACA,WACA,EACA,WACA,mBACA,WACA,EACA,WACA,mBACA,WACA,EACA,WACA,mBACA,WACA,EACA,WACA,mBACA,WACA,EACA,WACA,kBACA,WACA,EACA,WACA,mBACA,WACA,EACA,WACA,kBACA,WACA,EACA,WACA,mBACA,WACA,EACA,WACA,mBACA,WACA,EACA,WACA,mBACA,WACA,EACA,WACA,kBACA,WACA,EACA,WACA,kBACA,WACA,EACA,WACA,mBACA,WACA,EACA,WACA,kBACA,WACA,EACA,WACA,mBACA,WACA,EACA,WACA,kBACA,WACA,EACA,WACA,mBACA,WACA,EACA,WACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,GACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,mBACA,EACA,GACA,EACA,kBACA,EACA,GACA,EACA,mBACA,EACA,GACA,EACA,kBACA,EACA,GACA,EACA,kBACA,EACA,GACA,EACA,mBACA,EACA,GACA,EACA,mBACA,EACA,GACA,EACA,mBACA,EACA,GACA,EACA,kBACA,EACA,GACA,EACA,mBACA,EACA,GACA,EACA,kBACA,EACA,GACA,EACA,mBACA,EACA,GACA,EACA,kBACA,EACA,GACA,EACA,kBACA,EACA,GACA,EACA,kBACA,EACA,GACA,EACA,kBACA,EACA,GACA,EACA,kBACA,EACA,GACA,EACA,kBACA,EACA,GACA,EACA,kBACA,EACA,GACA,EACA,mBACA,EACA,GACA,EACA,mBACA,EACA,GACA,EACA,mBACA,EACA,GACA,EACA,mBACA,EACA,GACA,EACA,kBACA,EACA,GACA,EACA,kBACA,EACA,GACA,EACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,iBACA,EACA,YACA,YACA,iBACA,EACA,YACA,YACA,GACA,EACA,YACA,YACA,kBACA,EACA,YACA,YACA,kBACA,GACA,EACA,GACA,iBACA,GACA,EACA,GACA,iBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,GACA,EACA,GACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,kBACA,EACA,YACA,EACA,iBACA,EACA,YACA,EACA,iBACA,EACA,YACA,EACA,iBACA,EACA,YACA,EACA,GACA,EACA,YACA,EACA,iBACA,EACA,YACA,EACA,iBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,iBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,kBACA,EACA,EACA,EACA,iBACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGJ,CACEF,WAAY,MACZC,KAAM,SACNC,UAAW,CACT,EACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,WACA,YACA,oBACA,YACA,WACA,YACA,mBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,WACA,YACA,mBACA,YACA,WACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,GACA,GACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,mBACA,WACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,WACA,WACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,GACA,YACA,YACA,GACA,iBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,WACA,YACA,kBACA,YACA,WACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,WACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,GACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,GACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,kBACA,YACA,GACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,GACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,WACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,GACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,GACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,GACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,EACA,YACA,YACA,cAGJ,CACEF,WAAY,MACZC,KAAM,KACNC,UAAW,CACT,EACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,WACA,WACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,WACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,WACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,GACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,WACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,GACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,WACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,WACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,GACA,GACA,kBACA,YACA,YACA,YACA,mBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,WACA,WACA,kBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,WACA,WACA,mBACA,YACA,YACA,YACA,iBACA,GACA,YACA,YACA,GACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,WACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,GACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,WACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,WACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,GACA,YACA,YACA,YACA,kBACA,GACA,YACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,WACA,YACA,iBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,GACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,GACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,GACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,GACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,EACA,YACA,YACA,cAGJ,CACEF,WAAY,MACZC,KAAM,UACNC,UAAW,CACT,EACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,oBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,GACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,WACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,GACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,GACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,kBACA,WACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,WACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,WACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,WACA,YACA,mBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,GACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,mBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,mBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,WACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,WACA,YACA,YACA,kBACA,WACA,WACA,YACA,kBACA,WACA,YACA,YACA,kBACA,WACA,YACA,YACA,iBACA,WACA,YACA,YACA,iBACA,WACA,YACA,YACA,GACA,WACA,GACA,YACA,kBACA,WACA,YACA,YACA,kBACA,WACA,YACA,YACA,iBACA,WACA,YACA,WACA,iBACA,YACA,WACA,WACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,WACA,kBACA,YACA,WACA,WACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,WACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,GACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,iBACA,YACA,WACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,GACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,WACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,GACA,kBACA,YACA,YACA,WACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,kBACA,YACA,YACA,YACA,iBACA,YACA,YACA,YACA,EACA,YACA,YACA,gBC3iSA,iBAAEC,GAAqBC,EAAAA,UAAAA,S,eCP7B,SAASC,EAAYC,EAAkBC,GAErC,MAAM,UAAEC,GAAcF,EAChBG,EAASD,EACZE,eACAC,aACAC,WAGG,GAAEC,EAAE,UAAEC,GAkDd,SACEC,GAEA,MAAMD,GAAaE,IACbH,EAAKA,CAACI,EAAQC,KACdD,EAASC,IACXA,EAAWD,GAENC,GAET,MAAO,CAAEL,KAAIC,YACf,CA7D4BK,GAC1B,IAAIjS,EAAQ4R,EAEZ,MAAMM,EAAYC,EAAAA,UAAAA,iBAAAA,qCAChBd,EACAD,KAGMgB,EAAMC,IAAQC,EAAMC,IAAQC,EAAMC,IAASP,EAEnD,IAAK,IAAIQ,EAAIN,EAAMM,GAAKL,EAAMK,IAC5B,IAAK,IAAIC,EAAIL,EAAMK,GAAKJ,EAAMI,IAC5B,IAAK,IAAIC,EAAIJ,EAAMI,GAAKH,EAAMG,IAAK,CAEjC5S,EAAQ2R,EAAGJ,EADID,EAAUuB,mBAAmB,CAACH,EAAGC,EAAGC,KACxB5S,EA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","sources":["webpack:///../../../extensions/tmtv/src/id.js","webpack:///../../../extensions/tmtv/src/utils/hpViewports.ts","webpack:///../../../extensions/tmtv/src/getHangingProtocolModule.js","webpack:///../../../extensions/tmtv/src/Panels/PanelPetSUV.tsx","webpack:///../../../extensions/tmtv/src/Panels/PanelROIThresholdSegmentation/segmentationEditHandler.tsx","webpack:///../../../extensions/tmtv/src/Panels/PanelROIThresholdSegmentation/ExportReports.tsx","webpack:///../../../extensions/tmtv/src/Panels/PanelROIThresholdSegmentation/ROIThresholdConfiguration.tsx","webpack:///../../../extensions/tmtv/src/Panels/PanelROIThresholdSegmentation/PanelROIThresholdSegmentation.tsx","webpack:///../../../extensions/tmtv/src/Panels/PanelROIThresholdSegmentation/index.ts","webpack:///../../../extensions/tmtv/src/getPanelModule.tsx","webpack:///../../../extensions/tmtv/src/utils/measurementServiceMappings/constants/supportedTools.js","webpack:///../../../extensions/tmtv/src/utils/measurementServiceMappings/utils/getSOPInstanceAttributes.js","webpack:///../../../extensions/tmtv/src/utils/measurementServiceMappings/RectangleROIStartEndThreshold.js","webpack:///../../../extensions/tmtv/src/utils/measurementServiceMappings/measurementServiceMappingsFactory.js","webpack:///../../../extensions/tmtv/src/utils/colormaps/index.js","webpack:///../../../extensions/tmtv/src/init.js","webpack:///../../../extensions/tmtv/src/utils/getThresholdValue.ts","webpack:///../../../extensions/tmtv/src/utils/calculateSUVPeak.ts","webpack:///../../../extensions/tmtv/src/utils/calculateTMTV.ts","webpack:///../../../extensions/tmtv/src/utils/dicomRTAnnotationExport/RTStructureSet/measurements/RectangleROIStartEndThreshold.js","webpack:///../../../extensions/tmtv/src/utils/dicomRTAnnotationExport/RTStructureSet/measurements/AnnotationToPointData.js","webpack:///../../../extensions/tmtv/src/utils/dicomRTAnnotationExport/RTStructureSet/RTSSReport.js","webpack:///../../../extensions/tmtv/src/utils/dicomRTAnnotationExport/RTStructureSet/dicomRTAnnotationExport.js","webpack:///../../../extensions/tmtv/src/utils/dicomRTAnnotationExport/RTStructureSet/index.js","webpack:///../../../extensions/tmtv/src/commandsModule.js","webpack:///../../../extensions/tmtv/src/utils/createAndDownloadTMTVReport.js","webpack:///../../../extensions/tmtv/src/index.tsx"],"sourcesContent":["import packageJson from '../package.json';\n\nconst id = packageJson.name;\n\nexport { id };\n","const ctAXIAL = {\n  viewportOptions: {\n    viewportId: 'ctAXIAL',\n    viewportType: 'volume',\n    orientation: 'axial',\n    toolGroupId: 'ctToolGroup',\n    initialImageOptions: {\n      // index: 5,\n      preset: 'first', // 'first', 'last', 'middle'\n    },\n    syncGroups: [\n      {\n        type: 'cameraPosition',\n        id: 'axialSync',\n        source: true,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'ctWLSync',\n        source: true,\n        target: true,\n      },\n    ],\n  },\n  displaySets: [\n    {\n      id: 'ctDisplaySet',\n    },\n  ],\n};\n\nconst ctSAGITTAL = {\n  viewportOptions: {\n    viewportId: 'ctSAGITTAL',\n    viewportType: 'volume',\n    orientation: 'sagittal',\n    toolGroupId: 'ctToolGroup',\n    syncGroups: [\n      {\n        type: 'cameraPosition',\n        id: 'sagittalSync',\n        source: true,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'ctWLSync',\n        source: true,\n        target: true,\n      },\n    ],\n  },\n  displaySets: [\n    {\n      id: 'ctDisplaySet',\n    },\n  ],\n};\nconst ctCORONAL = {\n  viewportOptions: {\n    viewportId: 'ctCORONAL',\n    viewportType: 'volume',\n    orientation: 'coronal',\n    toolGroupId: 'ctToolGroup',\n    syncGroups: [\n      {\n        type: 'cameraPosition',\n        id: 'coronalSync',\n        source: true,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'ctWLSync',\n        source: true,\n        target: true,\n      },\n    ],\n  },\n  displaySets: [\n    {\n      id: 'ctDisplaySet',\n    },\n  ],\n};\n\nconst ptAXIAL = {\n  viewportOptions: {\n    viewportId: 'ptAXIAL',\n    viewportType: 'volume',\n    background: [1, 1, 1],\n    orientation: 'axial',\n    toolGroupId: 'ptToolGroup',\n    initialImageOptions: {\n      // index: 5,\n      preset: 'first', // 'first', 'last', 'middle'\n    },\n    syncGroups: [\n      {\n        type: 'cameraPosition',\n        id: 'axialSync',\n        source: true,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'ptWLSync',\n        source: true,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'ptFusionWLSync',\n        source: true,\n        target: false,\n      },\n    ],\n  },\n  displaySets: [\n    {\n      options: {\n        voi: {\n          custom: 'getPTVOIRange',\n        },\n        voiInverted: true,\n      },\n      id: 'ptDisplaySet',\n    },\n  ],\n};\n\nconst ptSAGITTAL = {\n  viewportOptions: {\n    viewportId: 'ptSAGITTAL',\n    viewportType: 'volume',\n    orientation: 'sagittal',\n    background: [1, 1, 1],\n    toolGroupId: 'ptToolGroup',\n    syncGroups: [\n      {\n        type: 'cameraPosition',\n        id: 'sagittalSync',\n        source: true,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'ptWLSync',\n        source: true,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'ptFusionWLSync',\n        source: true,\n        target: false,\n      },\n    ],\n  },\n  displaySets: [\n    {\n      options: {\n        voi: {\n          custom: 'getPTVOIRange',\n        },\n        voiInverted: true,\n      },\n      id: 'ptDisplaySet',\n    },\n  ],\n};\n\nconst ptCORONAL = {\n  viewportOptions: {\n    viewportId: 'ptCORONAL',\n    viewportType: 'volume',\n    orientation: 'coronal',\n    background: [1, 1, 1],\n    toolGroupId: 'ptToolGroup',\n    syncGroups: [\n      {\n        type: 'cameraPosition',\n        id: 'coronalSync',\n        source: true,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'ptWLSync',\n        source: true,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'ptFusionWLSync',\n        source: true,\n        target: false,\n      },\n    ],\n  },\n  displaySets: [\n    {\n      options: {\n        voi: {\n          custom: 'getPTVOIRange',\n        },\n        voiInverted: true,\n      },\n      id: 'ptDisplaySet',\n    },\n  ],\n};\n\nconst fusionAXIAL = {\n  viewportOptions: {\n    viewportId: 'fusionAXIAL',\n    viewportType: 'volume',\n    orientation: 'axial',\n    toolGroupId: 'fusionToolGroup',\n    initialImageOptions: {\n      // index: 5,\n      preset: 'first', // 'first', 'last', 'middle'\n    },\n    syncGroups: [\n      {\n        type: 'cameraPosition',\n        id: 'axialSync',\n        source: true,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'ctWLSync',\n        source: false,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'fusionWLSync',\n        source: true,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'ptFusionWLSync',\n        source: false,\n        target: true,\n      },\n    ],\n  },\n  displaySets: [\n    {\n      id: 'ctDisplaySet',\n    },\n    {\n      id: 'ptDisplaySet',\n      options: {\n        colormap: {\n          name: 'hsv',\n          opacity: [\n            { value: 0, opacity: 0 },\n            { value: 0.1, opacity: 0.9 },\n            { value: 1, opacity: 0.95 },\n          ],\n        },\n        voi: {\n          custom: 'getPTVOIRange',\n        },\n      },\n    },\n  ],\n};\n\nconst fusionSAGITTAL = {\n  viewportOptions: {\n    viewportId: 'fusionSAGITTAL',\n    viewportType: 'volume',\n    orientation: 'sagittal',\n    toolGroupId: 'fusionToolGroup',\n    // initialImageOptions: {\n    //   index: 180,\n    //   preset: 'middle', // 'first', 'last', 'middle'\n    // },\n    syncGroups: [\n      {\n        type: 'cameraPosition',\n        id: 'sagittalSync',\n        source: true,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'ctWLSync',\n        source: false,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'fusionWLSync',\n        source: true,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'ptFusionWLSync',\n        source: false,\n        target: true,\n      },\n    ],\n  },\n  displaySets: [\n    {\n      id: 'ctDisplaySet',\n    },\n    {\n      id: 'ptDisplaySet',\n      options: {\n        colormap: {\n          name: 'hsv',\n          opacity: [\n            { value: 0, opacity: 0 },\n            { value: 0.1, opacity: 0.9 },\n            { value: 1, opacity: 0.95 },\n          ],\n        },\n        voi: {\n          custom: 'getPTVOIRange',\n        },\n      },\n    },\n  ],\n};\n\nconst fusionCORONAL = {\n  viewportOptions: {\n    viewportId: 'fusionCoronal',\n    viewportType: 'volume',\n    orientation: 'coronal',\n    toolGroupId: 'fusionToolGroup',\n    // initialImageOptions: {\n    //   index: 180,\n    //   preset: 'middle', // 'first', 'last', 'middle'\n    // },\n    syncGroups: [\n      {\n        type: 'cameraPosition',\n        id: 'coronalSync',\n        source: true,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'ctWLSync',\n        source: false,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'fusionWLSync',\n        source: true,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'ptFusionWLSync',\n        source: false,\n        target: true,\n      },\n    ],\n  },\n  displaySets: [\n    {\n      id: 'ctDisplaySet',\n    },\n    {\n      id: 'ptDisplaySet',\n      options: {\n        colormap: {\n          name: 'hsv',\n          opacity: [\n            { value: 0, opacity: 0 },\n            { value: 0.1, opacity: 0.9 },\n            { value: 1, opacity: 0.95 },\n          ],\n        },\n        voi: {\n          custom: 'getPTVOIRange',\n        },\n      },\n    },\n  ],\n};\n\nconst mipSAGITTAL = {\n  viewportOptions: {\n    viewportId: 'mipSagittal',\n    viewportType: 'volume',\n    orientation: 'sagittal',\n    background: [1, 1, 1],\n    toolGroupId: 'mipToolGroup',\n    syncGroups: [\n      {\n        type: 'voi',\n        id: 'ptWLSync',\n        source: true,\n        target: true,\n      },\n      {\n        type: 'voi',\n        id: 'ptFusionWLSync',\n        source: true,\n        target: false,\n      },\n    ],\n\n    // Custom props can be used to set custom properties which extensions\n    // can react on.\n    customViewportProps: {\n      // We use viewportDisplay to filter the viewports which are displayed\n      // in mip and we set the scrollbar according to their rotation index\n      // in the cornerstone extension.\n      hideOverlays: true,\n    },\n  },\n  displaySets: [\n    {\n      options: {\n        blendMode: 'MIP',\n        slabThickness: 'fullVolume',\n        voi: {\n          custom: 'getPTVOIRange',\n        },\n        voiInverted: true,\n      },\n      id: 'ptDisplaySet',\n    },\n  ],\n};\n\nexport {\n  ctAXIAL,\n  ctSAGITTAL,\n  ctCORONAL,\n  ptAXIAL,\n  ptSAGITTAL,\n  ptCORONAL,\n  fusionAXIAL,\n  fusionSAGITTAL,\n  fusionCORONAL,\n  mipSAGITTAL,\n};\n","import {\n  ctAXIAL,\n  ctCORONAL,\n  ctSAGITTAL,\n  fusionAXIAL,\n  fusionCORONAL,\n  fusionSAGITTAL,\n  mipSAGITTAL,\n  ptAXIAL,\n  ptCORONAL,\n  ptSAGITTAL,\n} from './utils/hpViewports';\n\n/**\n * represents a 3x4 viewport layout configuration. The layout displays CT axial, sagittal, and coronal\n * images in the first row, PT axial, sagittal, and coronal images in the second row, and fusion axial,\n * sagittal, and coronal images in the third row. The fourth column is fully spanned by a MIP sagittal\n * image, covering all three rows. It has synchronizers for windowLevel for all CT and PT images, and\n * also camera synchronizer for each orientation\n */\nconst stage1 = {\n  name: 'default',\n  viewportStructure: {\n    layoutType: 'grid',\n    properties: {\n      rows: 3,\n      columns: 4,\n      layoutOptions: [\n        {\n          x: 0,\n          y: 0,\n          width: 1 / 4,\n          height: 1 / 3,\n        },\n        {\n          x: 1 / 4,\n          y: 0,\n          width: 1 / 4,\n          height: 1 / 3,\n        },\n        {\n          x: 2 / 4,\n          y: 0,\n          width: 1 / 4,\n          height: 1 / 3,\n        },\n        {\n          x: 0,\n          y: 1 / 3,\n          width: 1 / 4,\n          height: 1 / 3,\n        },\n        {\n          x: 1 / 4,\n          y: 1 / 3,\n          width: 1 / 4,\n          height: 1 / 3,\n        },\n        {\n          x: 2 / 4,\n          y: 1 / 3,\n          width: 1 / 4,\n          height: 1 / 3,\n        },\n        {\n          x: 0,\n          y: 2 / 3,\n          width: 1 / 4,\n          height: 1 / 3,\n        },\n        {\n          x: 1 / 4,\n          y: 2 / 3,\n          width: 1 / 4,\n          height: 1 / 3,\n        },\n        {\n          x: 2 / 4,\n          y: 2 / 3,\n          width: 1 / 4,\n          height: 1 / 3,\n        },\n        {\n          x: 3 / 4,\n          y: 0,\n          width: 1 / 4,\n          height: 1,\n        },\n      ],\n    },\n  },\n  viewports: [\n    ctAXIAL,\n    ctSAGITTAL,\n    ctCORONAL,\n    ptAXIAL,\n    ptSAGITTAL,\n    ptCORONAL,\n    fusionAXIAL,\n    fusionSAGITTAL,\n    fusionCORONAL,\n    mipSAGITTAL,\n  ],\n  createdDate: '2021-02-23T18:32:42.850Z',\n};\n\n/**\n * The layout displays CT axial image in the top-left viewport, fusion axial image\n * in the top-right viewport, PT axial image in the bottom-left viewport, and MIP\n * sagittal image in the bottom-right viewport. The layout follows a simple grid\n * pattern with 2 rows and 2 columns. It includes synchronizers as well.\n */\nconst stage2 = {\n  name: 'Fusion 2x2',\n  viewportStructure: {\n    layoutType: 'grid',\n    properties: {\n      rows: 2,\n      columns: 2,\n    },\n  },\n  viewports: [ctAXIAL, fusionAXIAL, ptAXIAL, mipSAGITTAL],\n};\n\n/**\n * The top row displays CT images in axial, sagittal, and coronal orientations from\n * left to right, respectively. The bottom row displays PT images in axial, sagittal,\n * and coronal orientations from left to right, respectively.\n * The layout follows a simple grid pattern with 2 rows and 3 columns.\n * It includes synchronizers as well.\n */\nconst stage3 = {\n  name: '2x3-layout',\n  viewportStructure: {\n    layoutType: 'grid',\n    properties: {\n      rows: 2,\n      columns: 3,\n    },\n  },\n  viewports: [ctAXIAL, ctSAGITTAL, ctCORONAL, ptAXIAL, ptSAGITTAL, ptCORONAL],\n};\n\n/**\n * In this layout, the top row displays PT images in coronal, sagittal, and axial\n * orientations from left to right, respectively, followed by a MIP sagittal image\n * that spans both rows on the rightmost side. The bottom row displays fusion images\n * in coronal, sagittal, and axial orientations from left to right, respectively.\n * There is no viewport in the bottom row's rightmost position, as the MIP sagittal viewport\n * from the top row spans the full height of both rows.\n * It includes synchronizers as well.\n */\nconst stage4 = {\n  name: '2x4-layout',\n  viewportStructure: {\n    layoutType: 'grid',\n    properties: {\n      rows: 2,\n      columns: 4,\n      layoutOptions: [\n        {\n          x: 0,\n          y: 0,\n          width: 1 / 4,\n          height: 1 / 2,\n        },\n        {\n          x: 1 / 4,\n          y: 0,\n          width: 1 / 4,\n          height: 1 / 2,\n        },\n        {\n          x: 2 / 4,\n          y: 0,\n          width: 1 / 4,\n          height: 1 / 2,\n        },\n        {\n          x: 3 / 4,\n          y: 0,\n          width: 1 / 4,\n          height: 1,\n        },\n        {\n          x: 0,\n          y: 1 / 2,\n          width: 1 / 4,\n          height: 1 / 2,\n        },\n        {\n          x: 1 / 4,\n          y: 1 / 2,\n          width: 1 / 4,\n          height: 1 / 2,\n        },\n        {\n          x: 2 / 4,\n          y: 1 / 2,\n          width: 1 / 4,\n          height: 1 / 2,\n        },\n      ],\n    },\n  },\n  viewports: [\n    ptCORONAL,\n    ptSAGITTAL,\n    ptAXIAL,\n    mipSAGITTAL,\n    fusionCORONAL,\n    fusionSAGITTAL,\n    fusionAXIAL,\n  ],\n};\n\nconst ptCT = {\n  id: '@ohif/extension-tmtv.hangingProtocolModule.ptCT',\n  locked: true,\n  hasUpdatedPriorsInformation: false,\n  name: 'Default',\n  createdDate: '2021-02-23T19:22:08.894Z',\n  modifiedDate: '2022-10-04T19:22:08.894Z',\n  availableTo: {},\n  editableBy: {},\n  imageLoadStrategy: 'interleaveTopToBottom', // \"default\" , \"interleaveTopToBottom\",  \"interleaveCenter\"\n  protocolMatchingRules: [\n    {\n      attribute: 'ModalitiesInStudy',\n      constraint: {\n        contains: ['CT', 'PT'],\n      },\n    },\n    {\n      attribute: 'StudyDescription',\n      constraint: {\n        contains: 'PETCT',\n      },\n    },\n    {\n      attribute: 'StudyDescription',\n      constraint: {\n        contains: 'PET/CT',\n      },\n    },\n  ],\n  displaySetSelectors: {\n    ctDisplaySet: {\n      seriesMatchingRules: [\n        {\n          attribute: 'Modality',\n          constraint: {\n            equals: {\n              value: 'CT',\n            },\n          },\n          required: true,\n        },\n        {\n          attribute: 'isReconstructable',\n          constraint: {\n            equals: {\n              value: true,\n            },\n          },\n          required: true,\n        },\n        {\n          attribute: 'SeriesDescription',\n          constraint: {\n            contains: 'CT',\n          },\n        },\n        {\n          attribute: 'SeriesDescription',\n          constraint: {\n            contains: 'CT WB',\n          },\n        },\n      ],\n    },\n    ptDisplaySet: {\n      seriesMatchingRules: [\n        {\n          attribute: 'Modality',\n          constraint: {\n            equals: 'PT',\n          },\n          required: true,\n        },\n        {\n          attribute: 'isReconstructable',\n          constraint: {\n            equals: {\n              value: true,\n            },\n          },\n          required: true,\n        },\n        {\n          attribute: 'SeriesDescription',\n          constraint: {\n            contains: 'Corrected',\n          },\n        },\n        {\n          weight: 2,\n          attribute: 'SeriesDescription',\n          constraint: {\n            doesNotContain: {\n              value: 'Uncorrected',\n            },\n          },\n        },\n      ],\n    },\n  },\n\n  stages: [stage1, stage2, stage3, stage4],\n  numberOfPriorsReferenced: -1,\n};\n\nfunction getHangingProtocolModule() {\n  return [\n    {\n      name: ptCT.id,\n      protocol: ptCT,\n    },\n  ];\n}\n\nexport default getHangingProtocolModule;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input, Button } from '@ohif/ui';\nimport { DicomMetadataStore, ServicesManager } from '@ohif/core';\nimport { useTranslation } from 'react-i18next';\n\nconst DEFAULT_MEATADATA = {\n  PatientWeight: null,\n  PatientSex: null,\n  SeriesTime: null,\n  RadiopharmaceuticalInformationSequence: {\n    RadionuclideTotalDose: null,\n    RadionuclideHalfLife: null,\n    RadiopharmaceuticalStartTime: null,\n  },\n};\n\n/*\n * PETSUV panel enables the user to modify the patient related information, such as\n * patient sex, patientWeight. This is allowed since\n * sometimes these metadata are missing or wrong. By changing them\n * @param param0\n * @returns\n */\nexport default function PanelPetSUV({ servicesManager, commandsManager }) {\n  const { t } = useTranslation('PanelSUV');\n  const {\n    displaySetService,\n    toolGroupService,\n    toolbarService,\n    hangingProtocolService,\n  } = (servicesManager as ServicesManager).services;\n  const [metadata, setMetadata] = useState(DEFAULT_MEATADATA);\n  const [ptDisplaySet, setPtDisplaySet] = useState(null);\n\n  const handleMetadataChange = metadata => {\n    setMetadata(prevState => {\n      const newState = { ...prevState };\n      Object.keys(metadata).forEach(key => {\n        if (typeof metadata[key] === 'object') {\n          newState[key] = {\n            ...prevState[key],\n            ...metadata[key],\n          };\n        } else {\n          newState[key] = metadata[key];\n        }\n      });\n      return newState;\n    });\n  };\n\n  const getMatchingPTDisplaySet = viewportMatchDetails => {\n    const ptDisplaySet = commandsManager.runCommand('getMatchingPTDisplaySet', {\n      viewportMatchDetails,\n    });\n\n    if (!ptDisplaySet) {\n      return;\n    }\n\n    const metadata = commandsManager.runCommand('getPTMetadata', {\n      ptDisplaySet,\n    });\n\n    return {\n      ptDisplaySet,\n      metadata,\n    };\n  };\n\n  useEffect(() => {\n    const displaySets = displaySetService.getActiveDisplaySets();\n    const { viewportMatchDetails } = hangingProtocolService.getMatchDetails();\n    if (!displaySets.length) {\n      return;\n    }\n\n    const displaySetInfo = getMatchingPTDisplaySet(viewportMatchDetails);\n\n    if (!displaySetInfo) {\n      return;\n    }\n\n    const { ptDisplaySet, metadata } = displaySetInfo;\n    setPtDisplaySet(ptDisplaySet);\n    setMetadata(metadata);\n  }, []);\n\n  // get the patientMetadata from the StudyInstanceUIDs and update the state\n  useEffect(() => {\n    const { unsubscribe } = hangingProtocolService.subscribe(\n      hangingProtocolService.EVENTS.PROTOCOL_CHANGED,\n      ({ viewportMatchDetails }) => {\n        const displaySetInfo = getMatchingPTDisplaySet(viewportMatchDetails);\n\n        if (!displaySetInfo) {\n          return;\n        }\n        const { ptDisplaySet, metadata } = displaySetInfo;\n        setPtDisplaySet(ptDisplaySet);\n        setMetadata(metadata);\n      }\n    );\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  function updateMetadata() {\n    if (!ptDisplaySet) {\n      throw new Error('No ptDisplaySet found');\n    }\n\n    const toolGroupIds = toolGroupService.getToolGroupIds();\n\n    // Todo: we don't have a proper way to perform a toggle command and update the\n    // state for the toolbar, so here, we manually toggle the toolbar\n\n    // Todo: Crosshairs have bugs for the camera reset currently, so we need to\n    // force turn it off before we update the metadata\n    toolGroupIds.forEach(toolGroupId => {\n      commandsManager.runCommand('toggleCrosshairs', {\n        toolGroupId,\n        toggledState: false,\n      });\n    });\n\n    toolbarService.state.toggles['Crosshairs'] = false;\n    toolbarService._broadcastEvent(\n      toolbarService.EVENTS.TOOL_BAR_STATE_MODIFIED\n    );\n\n    // metadata should be dcmjs naturalized\n    DicomMetadataStore.updateMetadataForSeries(\n      ptDisplaySet.StudyInstanceUID,\n      ptDisplaySet.SeriesInstanceUID,\n      metadata\n    );\n\n    // update the displaySets\n    displaySetService.setDisplaySetMetadataInvalidated(\n      ptDisplaySet.displaySetInstanceUID\n    );\n  }\n  return (\n    <div className=\"overflow-x-hidden overflow-y-auto invisible-scrollbar\">\n      {\n        <div className=\"flex flex-col\">\n          <div className=\"flex flex-col p-4 space-y-4 bg-primary-dark\">\n            <Input\n              label={t('Patient Sex')}\n              labelClassName=\"text-white mb-2\"\n              className=\"mt-1\"\n              value={metadata.PatientSex || ''}\n              onChange={e => {\n                handleMetadataChange({\n                  PatientSex: e.target.value,\n                });\n              }}\n            />\n            <Input\n              label={t('Patient Weight (kg)')}\n              labelClassName=\"text-white mb-2\"\n              className=\"mt-1\"\n              value={metadata.PatientWeight || ''}\n              onChange={e => {\n                handleMetadataChange({\n                  PatientWeight: e.target.value,\n                });\n              }}\n            />\n            <Input\n              label={t('Total Dose (bq)')}\n              labelClassName=\"text-white mb-2\"\n              className=\"mt-1\"\n              value={\n                metadata.RadiopharmaceuticalInformationSequence\n                  .RadionuclideTotalDose || ''\n              }\n              onChange={e => {\n                handleMetadataChange({\n                  RadiopharmaceuticalInformationSequence: {\n                    RadionuclideTotalDose: e.target.value,\n                  },\n                });\n              }}\n            />\n            <Input\n              label={t('Half Life (s)')}\n              labelClassName=\"text-white mb-2\"\n              className=\"mt-1\"\n              value={\n                metadata.RadiopharmaceuticalInformationSequence\n                  .RadionuclideHalfLife || ''\n              }\n              onChange={e => {\n                handleMetadataChange({\n                  RadiopharmaceuticalInformationSequence: {\n                    RadionuclideHalfLife: e.target.value,\n                  },\n                });\n              }}\n            />\n            <Input\n              label={t('Injection Time (s)')}\n              labelClassName=\"text-white mb-2\"\n              className=\"mt-1\"\n              value={\n                metadata.RadiopharmaceuticalInformationSequence\n                  .RadiopharmaceuticalStartTime || ''\n              }\n              onChange={e => {\n                handleMetadataChange({\n                  RadiopharmaceuticalInformationSequence: {\n                    RadiopharmaceuticalStartTime: e.target.value,\n                  },\n                });\n              }}\n            />\n            <Input\n              label={t('Acquisition Time (s)')}\n              labelClassName=\"text-white mb-2\"\n              className=\"mt-1 mb-2\"\n              value={metadata.SeriesTime || ''}\n              onChange={() => {}}\n            />\n            <Button onClick={updateMetadata}>Reload Data</Button>\n          </div>\n        </div>\n      }\n    </div>\n  );\n}\n\nPanelPetSUV.propTypes = {\n  servicesManager: PropTypes.shape({\n    services: PropTypes.shape({\n      measurementService: PropTypes.shape({\n        getMeasurements: PropTypes.func.isRequired,\n        subscribe: PropTypes.func.isRequired,\n        EVENTS: PropTypes.object.isRequired,\n        VALUE_TYPES: PropTypes.object.isRequired,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport { Input, Dialog, ButtonEnums } from '@ohif/ui';\n\nfunction segmentationItemEditHandler({ id, servicesManager }) {\n  const { segmentationService, uiDialogService } = servicesManager.services;\n\n  const segmentation = segmentationService.getSegmentation(id);\n\n  const onSubmitHandler = ({ action, value }) => {\n    switch (action.id) {\n      case 'save': {\n        segmentationService.addOrUpdateSegmentation(\n          {\n            ...segmentation,\n            ...value,\n          },\n          false, // don't suppress event\n          true // it should update cornerstone\n        );\n      }\n    }\n    uiDialogService.dismiss({ id: 'enter-annotation' });\n  };\n\n  uiDialogService.create({\n    id: 'enter-annotation',\n    centralize: true,\n    isDraggable: false,\n    showOverlay: true,\n    content: Dialog,\n    contentProps: {\n      title: 'Enter your Segmentation',\n      noCloseButton: true,\n      value: { label: segmentation.label || '' },\n      body: ({ value, setValue }) => {\n        const onChangeHandler = event => {\n          event.persist();\n          setValue(value => ({ ...value, label: event.target.value }));\n        };\n\n        const onKeyPressHandler = event => {\n          if (event.key === 'Enter') {\n            onSubmitHandler({ value, action: { id: 'save' } });\n          }\n        };\n        return (\n          <Input\n            autoFocus\n            className=\"bg-black border-primary-main\"\n            type=\"text\"\n            containerClassName=\"mr-2\"\n            value={value.label}\n            onChange={onChangeHandler}\n            onKeyPress={onKeyPressHandler}\n          />\n        );\n      },\n      actions: [\n        { id: 'cancel', text: 'Cancel', type: ButtonEnums.type.secondary },\n        { id: 'save', text: 'Save', type: ButtonEnums.type.primary },\n      ],\n      onSubmit: onSubmitHandler,\n    },\n  });\n}\n\nexport default segmentationItemEditHandler;\n","import React from 'react';\nimport { LegacyButton, ButtonGroup } from '@ohif/ui';\nimport { useTranslation } from 'react-i18next';\n\nfunction ExportReports({ segmentations, tmtvValue, config, commandsManager }) {\n  const { t } = useTranslation('PanelSUVExport');\n\n  return (\n    <>\n      {segmentations?.length ? (\n        <div className=\"flex justify-center mt-4 space-x-2\">\n          {/* TODO Revisit design of ButtonGroup later - for now use LegacyButton for its children.*/}\n          <ButtonGroup color=\"black\" size=\"inherit\">\n            <LegacyButton\n              className=\"px-2 py-2 text-base\"\n              disabled={tmtvValue === null}\n              onClick={() => {\n                commandsManager.runCommand('exportTMTVReportCSV', {\n                  segmentations,\n                  tmtv: tmtvValue,\n                  config,\n                });\n              }}\n            >\n              {t('Export CSV')}\n            </LegacyButton>\n          </ButtonGroup>\n          <ButtonGroup color=\"black\" size=\"inherit\">\n            <LegacyButton\n              className=\"px-2 py-2 text-base\"\n              onClick={() => {\n                commandsManager.runCommand('createTMTVRTReport');\n              }}\n              disabled={tmtvValue === null}\n            >\n              {t('Create RT Report')}\n            </LegacyButton>\n          </ButtonGroup>\n        </div>\n      ) : null}\n    </>\n  );\n}\n\nexport default ExportReports;\n","import React from 'react';\nimport { Input, Label, Select, LegacyButton, ButtonGroup } from '@ohif/ui';\nimport { useTranslation } from 'react-i18next';\n\nexport const ROI_STAT = 'roi_stat';\nconst RANGE = 'range';\n\nconst options = [\n  { value: ROI_STAT, label: 'Max', placeHolder: 'Max' },\n  { value: RANGE, label: 'Range', placeHolder: 'Range' },\n];\n\nfunction ROIThresholdConfiguration({ config, dispatch, runCommand }) {\n  const { t } = useTranslation('ROIThresholdConfiguration');\n\n  return (\n    <div className=\"flex flex-col px-4 space-y-4 bg-primary-dark py-2\">\n      <div className=\"flex items-end space-x-2\">\n        <div className=\"flex flex-col w-1/2\">\n          <Select\n            label={t('Strategy')}\n            closeMenuOnSelect={true}\n            className=\"mr-2 bg-black border-primary-main text-white \"\n            options={options}\n            placeholder={\n              options.find(option => option.value === config.strategy)\n                .placeHolder\n            }\n            value={config.strategy}\n            onChange={({ value }) => {\n              dispatch({\n                type: 'setStrategy',\n                payload: {\n                  strategy: value,\n                },\n              });\n            }}\n          />\n        </div>\n        <div className=\"w-1/2\">\n          {/* TODO Revisit design of ButtonGroup later - for now use LegacyButton for its children.*/}\n          <ButtonGroup>\n            <LegacyButton\n              size=\"initial\"\n              className=\"px-2 py-2 text-base text-white\"\n              color=\"primaryLight\"\n              variant=\"outlined\"\n              onClick={() => runCommand('setStartSliceForROIThresholdTool')}\n            >\n              {t('Start')}\n            </LegacyButton>\n            <LegacyButton\n              size=\"initial\"\n              color=\"primaryLight\"\n              variant=\"outlined\"\n              className=\"px-2 py-2 text-base text-white\"\n              onClick={() => runCommand('setEndSliceForROIThresholdTool')}\n            >\n              {t('End')}\n            </LegacyButton>\n          </ButtonGroup>\n        </div>\n      </div>\n\n      {config.strategy === ROI_STAT && (\n        <Input\n          label={t('Percentage of Max SUV')}\n          labelClassName=\"text-white\"\n          className=\"mt-2 bg-black border-primary-main\"\n          type=\"text\"\n          containerClassName=\"mr-2\"\n          value={config.weight}\n          onChange={e => {\n            dispatch({\n              type: 'setWeight',\n              payload: {\n                weight: e.target.value,\n              },\n            });\n          }}\n        />\n      )}\n      {config.strategy !== ROI_STAT && (\n        <div className=\"text-sm mr-2\">\n          <table>\n            <tbody>\n              <tr className=\"mt-2\">\n                <td className=\"pr-4 pt-2\" colSpan=\"3\">\n                  <Label\n                    className=\"text-white\"\n                    text=\"Lower & Upper Ranges\"\n                  ></Label>\n                </td>\n              </tr>\n              <tr className=\"mt-2\">\n                <td className=\"text-center pr-4 pt-2\">\n                  <Label className=\"text-white\" text=\"CT\"></Label>\n                </td>\n                <td>\n                  <div className=\"flex justify-between\">\n                    <Input\n                      label={t('')}\n                      labelClassName=\"text-white\"\n                      className=\"mt-2 bg-black border-primary-main\"\n                      type=\"text\"\n                      containerClassName=\"mr-2\"\n                      value={config.ctLower}\n                      onChange={e => {\n                        dispatch({\n                          type: 'setThreshold',\n                          payload: {\n                            ctLower: e.target.value,\n                          },\n                        });\n                      }}\n                    />\n                    <Input\n                      label={t('')}\n                      labelClassName=\"text-white\"\n                      className=\"mt-2 bg-black border-primary-main\"\n                      type=\"text\"\n                      containerClassName=\"mr-2\"\n                      value={config.ctUpper}\n                      onChange={e => {\n                        dispatch({\n                          type: 'setThreshold',\n                          payload: {\n                            ctUpper: e.target.value,\n                          },\n                        });\n                      }}\n                    />\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"text-center pr-4 pt-2\">\n                  <Label className=\"text-white\" text=\"PT\"></Label>\n                </td>\n                <td>\n                  <div className=\"flex justify-between\">\n                    <Input\n                      label={t('')}\n                      labelClassName=\"text-white\"\n                      className=\"mt-2 bg-black border-primary-main\"\n                      type=\"text\"\n                      containerClassName=\"mr-2\"\n                      value={config.ptLower}\n                      onChange={e => {\n                        dispatch({\n                          type: 'setThreshold',\n                          payload: {\n                            ptLower: e.target.value,\n                          },\n                        });\n                      }}\n                    />\n                    <Input\n                      label={t('')}\n                      labelClassName=\"text-white\"\n                      className=\"mt-2 bg-black border-primary-main\"\n                      type=\"text\"\n                      containerClassName=\"mr-2\"\n                      value={config.ptUpper}\n                      onChange={e => {\n                        dispatch({\n                          type: 'setThreshold',\n                          payload: {\n                            ptUpper: e.target.value,\n                          },\n                        });\n                      }}\n                    />\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ROIThresholdConfiguration;\n","import React, { useEffect, useState, useCallback, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { SegmentationTable, Button, Icon } from '@ohif/ui';\n\nimport { useTranslation } from 'react-i18next';\nimport segmentationEditHandler from './segmentationEditHandler';\nimport ExportReports from './ExportReports';\nimport ROIThresholdConfiguration, {\n  ROI_STAT,\n} from './ROIThresholdConfiguration';\n\nconst LOWER_CT_THRESHOLD_DEFAULT = -1024;\nconst UPPER_CT_THRESHOLD_DEFAULT = 1024;\nconst LOWER_PT_THRESHOLD_DEFAULT = 2.5;\nconst UPPER_PT_THRESHOLD_DEFAULT = 100;\nconst WEIGHT_DEFAULT = 0.41; // a default weight for suv max often used in the literature\nconst DEFAULT_STRATEGY = ROI_STAT;\n\nfunction reducer(state, action) {\n  const { payload } = action;\n  const { strategy, ctLower, ctUpper, ptLower, ptUpper, weight } = payload;\n\n  switch (action.type) {\n    case 'setStrategy':\n      return {\n        ...state,\n        strategy,\n      };\n    case 'setThreshold':\n      return {\n        ...state,\n        ctLower: ctLower ? ctLower : state.ctLower,\n        ctUpper: ctUpper ? ctUpper : state.ctUpper,\n        ptLower: ptLower ? ptLower : state.ptLower,\n        ptUpper: ptUpper ? ptUpper : state.ptUpper,\n      };\n    case 'setWeight':\n      return {\n        ...state,\n        weight,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default function PanelRoiThresholdSegmentation({\n  servicesManager,\n  commandsManager,\n}) {\n  const { segmentationService } = servicesManager.services;\n\n  const { t } = useTranslation('PanelSUV');\n  const [showConfig, setShowConfig] = useState(false);\n  const [labelmapLoading, setLabelmapLoading] = useState(false);\n  const [selectedSegmentationId, setSelectedSegmentationId] = useState(null);\n  const [segmentations, setSegmentations] = useState(() =>\n    segmentationService.getSegmentations()\n  );\n\n  const [config, dispatch] = useReducer(reducer, {\n    strategy: DEFAULT_STRATEGY,\n    ctLower: LOWER_CT_THRESHOLD_DEFAULT,\n    ctUpper: UPPER_CT_THRESHOLD_DEFAULT,\n    ptLower: LOWER_PT_THRESHOLD_DEFAULT,\n    ptUpper: UPPER_PT_THRESHOLD_DEFAULT,\n    weight: WEIGHT_DEFAULT,\n  });\n\n  const [tmtvValue, setTmtvValue] = useState(null);\n\n  const runCommand = useCallback(\n    (commandName, commandOptions = {}) => {\n      return commandsManager.runCommand(commandName, commandOptions);\n    },\n    [commandsManager]\n  );\n\n  const handleTMTVCalculation = useCallback(() => {\n    const tmtv = runCommand('calculateTMTV', { segmentations });\n\n    if (tmtv !== undefined) {\n      setTmtvValue(tmtv.toFixed(2));\n    }\n  }, [segmentations, runCommand]);\n\n  const handleROIThresholding = useCallback(() => {\n    const labelmap = runCommand('thresholdSegmentationByRectangleROITool', {\n      segmentationId: selectedSegmentationId,\n      config,\n    });\n\n    const lesionStats = runCommand('getLesionStats', { labelmap });\n    const suvPeak = runCommand('calculateSuvPeak', { labelmap });\n    const lesionGlyoclysisStats = lesionStats.volume * lesionStats.meanValue;\n\n    // update segDetails with the suv peak for the active segmentation\n    const segmentation = segmentationService.getSegmentation(\n      selectedSegmentationId\n    );\n\n    const cachedStats = {\n      lesionStats,\n      suvPeak,\n      lesionGlyoclysisStats,\n    };\n\n    const notYetUpdatedAtSource = true;\n    segmentationService.addOrUpdateSegmentation(\n      {\n        ...segmentation,\n        ...Object.assign(segmentation.cachedStats, cachedStats),\n        displayText: [`SUV Peak: ${suvPeak.suvPeak.toFixed(2)}`],\n      },\n      notYetUpdatedAtSource\n    );\n\n    handleTMTVCalculation();\n  }, [selectedSegmentationId, config]);\n\n  /**\n   * Update UI based on segmentation changes (added, removed, updated)\n   */\n  useEffect(() => {\n    // ~~ Subscription\n    const added = segmentationService.EVENTS.SEGMENTATION_ADDED;\n    const updated = segmentationService.EVENTS.SEGMENTATION_UPDATED;\n    const subscriptions = [];\n\n    [added, updated].forEach(evt => {\n      const { unsubscribe } = segmentationService.subscribe(evt, () => {\n        const segmentations = segmentationService.getSegmentations();\n        setSegmentations(segmentations);\n      });\n      subscriptions.push(unsubscribe);\n    });\n\n    return () => {\n      subscriptions.forEach(unsub => {\n        unsub();\n      });\n    };\n  }, []);\n\n  useEffect(() => {\n    const { unsubscribe } = segmentationService.subscribe(\n      segmentationService.EVENTS.SEGMENTATION_REMOVED,\n      () => {\n        const segmentations = segmentationService.getSegmentations();\n        setSegmentations(segmentations);\n\n        if (segmentations.length > 0) {\n          setSelectedSegmentationId(segmentations[0].id);\n          handleTMTVCalculation();\n        } else {\n          setSelectedSegmentationId(null);\n          setTmtvValue(null);\n        }\n      }\n    );\n\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  /**\n   * Whenever the segmentations change, update the TMTV calculations\n   */\n  useEffect(() => {\n    if (!selectedSegmentationId && segmentations.length > 0) {\n      setSelectedSegmentationId(segmentations[0].id);\n    }\n\n    handleTMTVCalculation();\n  }, [segmentations, selectedSegmentationId]);\n\n  return (\n    <>\n      <div className=\"flex flex-col\">\n        <div className=\"overflow-x-hidden overflow-y-auto invisible-scrollbar\">\n          <div className=\"flex mx-4 my-4 mb-4 space-x-4\">\n            <Button\n              onClick={() => {\n                setLabelmapLoading(true);\n                setTimeout(() => {\n                  runCommand('createNewLabelmapFromPT').then(segmentationId => {\n                    setLabelmapLoading(false);\n                    setSelectedSegmentationId(segmentationId);\n                  });\n                });\n              }}\n            >\n              {labelmapLoading ? 'loading ...' : 'New Label'}\n            </Button>\n            <Button onClick={handleROIThresholding}>Run</Button>\n          </div>\n          <div\n            className=\"flex items-center justify-around h-8 mb-2 border-t outline-none cursor-pointer select-none bg-secondary-dark first:border-0 border-secondary-light\"\n            onClick={() => {\n              setShowConfig(!showConfig);\n            }}\n          >\n            <div className=\"px-4 text-base text-white\">\n              {t('ROI Threshold Configuration')}\n            </div>\n          </div>\n          {showConfig && (\n            <ROIThresholdConfiguration\n              config={config}\n              dispatch={dispatch}\n              runCommand={runCommand}\n            />\n          )}\n          {/* show segmentation table */}\n          <div className=\"mt-4\">\n            {segmentations?.length ? (\n              <SegmentationTable\n                title={t('Segmentations')}\n                segmentations={segmentations}\n                activeSegmentationId={selectedSegmentationId}\n                onClick={id => {\n                  runCommand('setSegmentationActiveForToolGroups', {\n                    segmentationId: id,\n                  });\n                  setSelectedSegmentationId(id);\n                }}\n                onToggleVisibility={id => {\n                  segmentationService.toggleSegmentationVisibility(id);\n                }}\n                onToggleVisibilityAll={ids => {\n                  ids.map(id => {\n                    segmentationService.toggleSegmentationVisibility(id);\n                  });\n                }}\n                onDelete={id => {\n                  segmentationService.remove(id);\n                }}\n                onEdit={id => {\n                  segmentationEditHandler({\n                    id,\n                    servicesManager,\n                  });\n                }}\n              />\n            ) : null}\n          </div>\n          {tmtvValue !== null ? (\n            <div className=\"flex items-baseline justify-between px-2 py-1 mt-4 bg-secondary-dark\">\n              <span className=\"text-base font-bold tracking-widest text-white uppercase\">\n                {'TMTV:'}\n              </span>\n              <div className=\"text-white\">{`${tmtvValue} mL`}</div>\n            </div>\n          ) : null}\n          <ExportReports\n            segmentations={segmentations}\n            tmtvValue={tmtvValue}\n            config={config}\n            commandsManager={commandsManager}\n          />\n        </div>\n      </div>\n      <div\n        className=\"opacity-50 hover:opacity-80 flex items-center justify-center text-blue-400 mt-auto cursor-pointer mb-4\"\n        onClick={() => {\n          // navigate to a url in a new tab\n          window.open(\n            'https://github.com/OHIF/Viewers/blob/master/modes/tmtv/README.md',\n            '_blank'\n          );\n        }}\n      >\n        <Icon\n          width=\"15px\"\n          height=\"15px\"\n          name={'info'}\n          className={'text-primary-active ml-4 mr-3'}\n        />\n        <span>{'User Guide'}</span>\n      </div>\n    </>\n  );\n}\n\nPanelRoiThresholdSegmentation.propTypes = {\n  commandsManager: PropTypes.shape({\n    runCommand: PropTypes.func.isRequired,\n  }),\n  servicesManager: PropTypes.shape({\n    services: PropTypes.shape({\n      segmentationService: PropTypes.shape({\n        getSegmentation: PropTypes.func.isRequired,\n        getSegmentations: PropTypes.func.isRequired,\n        toggleSegmentationVisibility: PropTypes.func.isRequired,\n        subscribe: PropTypes.func.isRequired,\n        EVENTS: PropTypes.object.isRequired,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import PanelROIThresholdSegmentation from './PanelROIThresholdSegmentation';\n\nexport default PanelROIThresholdSegmentation;\n","import React from 'react';\nimport { PanelPetSUV, PanelROIThresholdSegmentation } from './Panels';\n\n// TODO:\n// - No loading UI exists yet\n// - cancel promises when component is destroyed\n// - show errors in UI for thumbnails if promise fails\n\nfunction getPanelModule({\n  commandsManager,\n  extensionManager,\n  servicesManager,\n}) {\n  const wrappedPanelPetSuv = () => {\n    return (\n      <PanelPetSUV\n        commandsManager={commandsManager}\n        servicesManager={servicesManager}\n        extensionManager={extensionManager}\n      />\n    );\n  };\n\n  const wrappedROIThresholdSeg = () => {\n    return (\n      <PanelROIThresholdSegmentation\n        commandsManager={commandsManager}\n        servicesManager={servicesManager}\n        extensionManager={extensionManager}\n      />\n    );\n  };\n\n  return [\n    {\n      name: 'petSUV',\n      iconName: 'tab-patient-info',\n      iconLabel: 'PET SUV',\n      label: 'PET SUV',\n      component: wrappedPanelPetSuv,\n    },\n    {\n      name: 'ROIThresholdSeg',\n      iconName: 'tab-roi-threshold',\n      iconLabel: 'ROI Threshold',\n      label: 'ROI Threshold',\n      component: wrappedROIThresholdSeg,\n    },\n  ];\n}\n\nexport default getPanelModule;\n","export default ['RectangleROIStartEndThreshold'];\n","import { metaData } from '@cornerstonejs/core';\n\nexport default function getSOPInstanceAttributes(imageId) {\n  if (imageId) {\n    return _getUIDFromImageID(imageId);\n  }\n}\n\nfunction _getUIDFromImageID(imageId) {\n  const instance = metaData.get('instance', imageId);\n\n  return {\n    SOPInstanceUID: instance.SOPInstanceUID,\n    SeriesInstanceUID: instance.SeriesInstanceUID,\n    StudyInstanceUID: instance.StudyInstanceUID,\n    frameNumber: instance.frameNumber || 1,\n  };\n}\n","import SUPPORTED_TOOLS from './constants/supportedTools';\nimport getSOPInstanceAttributes from './utils/getSOPInstanceAttributes';\n\nconst RectangleROIStartEndThreshold = {\n  toAnnotation: (measurement, definition) => {},\n\n  /**\n   * Maps cornerstone annotation event data to measurement service format.\n   *\n   * @param {Object} cornerstone Cornerstone event data\n   * @return {Measurement} Measurement instance\n   */\n  toMeasurement: (\n    csToolsEventDetail,\n    displaySetService,\n    cornerstoneViewportService\n  ) => {\n    const { annotation, viewportId } = csToolsEventDetail;\n    const { metadata, data, annotationUID } = annotation;\n\n    if (!metadata || !data) {\n      console.warn('Length tool: Missing metadata or data');\n      return null;\n    }\n\n    const { toolName, referencedImageId, FrameOfReferenceUID } = metadata;\n    const validToolType = SUPPORTED_TOOLS.includes(toolName);\n\n    if (!validToolType) {\n      throw new Error('Tool not supported');\n    }\n\n    const {\n      SOPInstanceUID,\n      SeriesInstanceUID,\n      StudyInstanceUID,\n    } = getSOPInstanceAttributes(\n      referencedImageId,\n      cornerstoneViewportService,\n      viewportId\n    );\n\n    let displaySet;\n\n    if (SOPInstanceUID) {\n      displaySet = displaySetService.getDisplaySetForSOPInstanceUID(\n        SOPInstanceUID,\n        SeriesInstanceUID\n      );\n    } else {\n      displaySet = displaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\n    }\n\n    const { cachedStats } = data;\n\n    return {\n      uid: annotationUID,\n      SOPInstanceUID,\n      FrameOfReferenceUID,\n      // points,\n      metadata,\n      referenceSeriesUID: SeriesInstanceUID,\n      referenceStudyUID: StudyInstanceUID,\n      toolName: metadata.toolName,\n      displaySetInstanceUID: displaySet.displaySetInstanceUID,\n      label: metadata.label,\n      // displayText: displayText,\n      data: data.cachedStats,\n      type: 'RectangleROIStartEndThreshold',\n      // getReport,\n    };\n  },\n};\n\nexport default RectangleROIStartEndThreshold;\n","import RectangleROIStartEndThreshold from './RectangleROIStartEndThreshold';\n\nconst measurementServiceMappingsFactory = (\n  measurementService,\n  displaySetService,\n  cornerstoneViewportService\n) => {\n  return {\n    RectangleROIStartEndThreshold: {\n      toAnnotation: RectangleROIStartEndThreshold.toAnnotation,\n      toMeasurement: csToolsAnnotation =>\n        RectangleROIStartEndThreshold.toMeasurement(\n          csToolsAnnotation,\n          displaySetService,\n          cornerstoneViewportService\n        ),\n      matchingCriteria: [\n        {\n          valueType: measurementService.VALUE_TYPES.ROI_THRESHOLD_MANUAL,\n        },\n      ],\n    },\n  };\n};\n\nexport default measurementServiceMappingsFactory;\n","export default [\n  {\n    ColorSpace: 'RGB',\n    Name: 'hot_iron',\n    RGBPoints: [\n      0.0,\n      0.0039215686,\n      0.0039215686,\n      0.0156862745,\n      0.00392156862745098,\n      0.0039215686,\n      0.0039215686,\n      0.0156862745,\n      0.00784313725490196,\n      0.0039215686,\n      0.0039215686,\n      0.031372549,\n      0.011764705882352941,\n      0.0039215686,\n      0.0039215686,\n      0.0470588235,\n      0.01568627450980392,\n      0.0039215686,\n      0.0039215686,\n      0.062745098,\n      0.0196078431372549,\n      0.0039215686,\n      0.0039215686,\n      0.0784313725,\n      0.023529411764705882,\n      0.0039215686,\n      0.0039215686,\n      0.0941176471,\n      0.027450980392156862,\n      0.0039215686,\n      0.0039215686,\n      0.1098039216,\n      0.03137254901960784,\n      0.0039215686,\n      0.0039215686,\n      0.1254901961,\n      0.03529411764705882,\n      0.0039215686,\n      0.0039215686,\n      0.1411764706,\n      0.0392156862745098,\n      0.0039215686,\n      0.0039215686,\n      0.1568627451,\n      0.043137254901960784,\n      0.0039215686,\n      0.0039215686,\n      0.1725490196,\n      0.047058823529411764,\n      0.0039215686,\n      0.0039215686,\n      0.1882352941,\n      0.050980392156862744,\n      0.0039215686,\n      0.0039215686,\n      0.2039215686,\n      0.054901960784313725,\n      0.0039215686,\n      0.0039215686,\n      0.2196078431,\n      0.05882352941176471,\n      0.0039215686,\n      0.0039215686,\n      0.2352941176,\n      0.06274509803921569,\n      0.0039215686,\n      0.0039215686,\n      0.2509803922,\n      0.06666666666666667,\n      0.0039215686,\n      0.0039215686,\n      0.262745098,\n      0.07058823529411765,\n      0.0039215686,\n      0.0039215686,\n      0.2784313725,\n      0.07450980392156863,\n      0.0039215686,\n      0.0039215686,\n      0.2941176471,\n      0.0784313725490196,\n      0.0039215686,\n      0.0039215686,\n      0.3098039216,\n      0.08235294117647059,\n      0.0039215686,\n      0.0039215686,\n      0.3254901961,\n      0.08627450980392157,\n      0.0039215686,\n      0.0039215686,\n      0.3411764706,\n      0.09019607843137255,\n      0.0039215686,\n      0.0039215686,\n      0.3568627451,\n      0.09411764705882353,\n      0.0039215686,\n      0.0039215686,\n      0.3725490196,\n      0.09803921568627451,\n      0.0039215686,\n      0.0039215686,\n      0.3882352941,\n      0.10196078431372549,\n      0.0039215686,\n      0.0039215686,\n      0.4039215686,\n      0.10588235294117647,\n      0.0039215686,\n      0.0039215686,\n      0.4196078431,\n      0.10980392156862745,\n      0.0039215686,\n      0.0039215686,\n      0.4352941176,\n      0.11372549019607843,\n      0.0039215686,\n      0.0039215686,\n      0.4509803922,\n      0.11764705882352942,\n      0.0039215686,\n      0.0039215686,\n      0.4666666667,\n      0.12156862745098039,\n      0.0039215686,\n      0.0039215686,\n      0.4823529412,\n      0.12549019607843137,\n      0.0039215686,\n      0.0039215686,\n      0.4980392157,\n      0.12941176470588237,\n      0.0039215686,\n      0.0039215686,\n      0.5137254902,\n      0.13333333333333333,\n      0.0039215686,\n      0.0039215686,\n      0.5294117647,\n      0.13725490196078433,\n      0.0039215686,\n      0.0039215686,\n      0.5450980392,\n      0.1411764705882353,\n      0.0039215686,\n      0.0039215686,\n      0.5607843137,\n      0.1450980392156863,\n      0.0039215686,\n      0.0039215686,\n      0.5764705882,\n      0.14901960784313725,\n      0.0039215686,\n      0.0039215686,\n      0.5921568627,\n      0.15294117647058825,\n      0.0039215686,\n      0.0039215686,\n      0.6078431373,\n      0.1568627450980392,\n      0.0039215686,\n      0.0039215686,\n      0.6235294118,\n      0.1607843137254902,\n      0.0039215686,\n      0.0039215686,\n      0.6392156863,\n      0.16470588235294117,\n      0.0039215686,\n      0.0039215686,\n      0.6549019608,\n      0.16862745098039217,\n      0.0039215686,\n      0.0039215686,\n      0.6705882353,\n      0.17254901960784313,\n      0.0039215686,\n      0.0039215686,\n      0.6862745098,\n      0.17647058823529413,\n      0.0039215686,\n      0.0039215686,\n      0.7019607843,\n      0.1803921568627451,\n      0.0039215686,\n      0.0039215686,\n      0.7176470588,\n      0.1843137254901961,\n      0.0039215686,\n      0.0039215686,\n      0.7333333333,\n      0.18823529411764706,\n      0.0039215686,\n      0.0039215686,\n      0.7490196078,\n      0.19215686274509805,\n      0.0039215686,\n      0.0039215686,\n      0.7607843137,\n      0.19607843137254902,\n      0.0039215686,\n      0.0039215686,\n      0.7764705882,\n      0.2,\n      0.0039215686,\n      0.0039215686,\n      0.7921568627,\n      0.20392156862745098,\n      0.0039215686,\n      0.0039215686,\n      0.8078431373,\n      0.20784313725490197,\n      0.0039215686,\n      0.0039215686,\n      0.8235294118,\n      0.21176470588235294,\n      0.0039215686,\n      0.0039215686,\n      0.8392156863,\n      0.21568627450980393,\n      0.0039215686,\n      0.0039215686,\n      0.8549019608,\n      0.2196078431372549,\n      0.0039215686,\n      0.0039215686,\n      0.8705882353,\n      0.2235294117647059,\n      0.0039215686,\n      0.0039215686,\n      0.8862745098,\n      0.22745098039215686,\n      0.0039215686,\n      0.0039215686,\n      0.9019607843,\n      0.23137254901960785,\n      0.0039215686,\n      0.0039215686,\n      0.9176470588,\n      0.23529411764705885,\n      0.0039215686,\n      0.0039215686,\n      0.9333333333,\n      0.23921568627450984,\n      0.0039215686,\n      0.0039215686,\n      0.9490196078,\n      0.24313725490196078,\n      0.0039215686,\n      0.0039215686,\n      0.9647058824,\n      0.24705882352941178,\n      0.0039215686,\n      0.0039215686,\n      0.9803921569,\n      0.25098039215686274,\n      0.0039215686,\n      0.0039215686,\n      0.9960784314,\n      0.2549019607843137,\n      0.0039215686,\n      0.0039215686,\n      0.9960784314,\n      0.25882352941176473,\n      0.0156862745,\n      0.0039215686,\n      0.9803921569,\n      0.2627450980392157,\n      0.031372549,\n      0.0039215686,\n      0.9647058824,\n      0.26666666666666666,\n      0.0470588235,\n      0.0039215686,\n      0.9490196078,\n      0.27058823529411763,\n      0.062745098,\n      0.0039215686,\n      0.9333333333,\n      0.27450980392156865,\n      0.0784313725,\n      0.0039215686,\n      0.9176470588,\n      0.2784313725490196,\n      0.0941176471,\n      0.0039215686,\n      0.9019607843,\n      0.2823529411764706,\n      0.1098039216,\n      0.0039215686,\n      0.8862745098,\n      0.28627450980392155,\n      0.1254901961,\n      0.0039215686,\n      0.8705882353,\n      0.2901960784313726,\n      0.1411764706,\n      0.0039215686,\n      0.8549019608,\n      0.29411764705882354,\n      0.1568627451,\n      0.0039215686,\n      0.8392156863,\n      0.2980392156862745,\n      0.1725490196,\n      0.0039215686,\n      0.8235294118,\n      0.30196078431372547,\n      0.1882352941,\n      0.0039215686,\n      0.8078431373,\n      0.3058823529411765,\n      0.2039215686,\n      0.0039215686,\n      0.7921568627,\n      0.30980392156862746,\n      0.2196078431,\n      0.0039215686,\n      0.7764705882,\n      0.3137254901960784,\n      0.2352941176,\n      0.0039215686,\n      0.7607843137,\n      0.3176470588235294,\n      0.2509803922,\n      0.0039215686,\n      0.7490196078,\n      0.3215686274509804,\n      0.262745098,\n      0.0039215686,\n      0.7333333333,\n      0.3254901960784314,\n      0.2784313725,\n      0.0039215686,\n      0.7176470588,\n      0.32941176470588235,\n      0.2941176471,\n      0.0039215686,\n      0.7019607843,\n      0.3333333333333333,\n      0.3098039216,\n      0.0039215686,\n      0.6862745098,\n      0.33725490196078434,\n      0.3254901961,\n      0.0039215686,\n      0.6705882353,\n      0.3411764705882353,\n      0.3411764706,\n      0.0039215686,\n      0.6549019608,\n      0.34509803921568627,\n      0.3568627451,\n      0.0039215686,\n      0.6392156863,\n      0.34901960784313724,\n      0.3725490196,\n      0.0039215686,\n      0.6235294118,\n      0.35294117647058826,\n      0.3882352941,\n      0.0039215686,\n      0.6078431373,\n      0.3568627450980392,\n      0.4039215686,\n      0.0039215686,\n      0.5921568627,\n      0.3607843137254902,\n      0.4196078431,\n      0.0039215686,\n      0.5764705882,\n      0.36470588235294116,\n      0.4352941176,\n      0.0039215686,\n      0.5607843137,\n      0.3686274509803922,\n      0.4509803922,\n      0.0039215686,\n      0.5450980392,\n      0.37254901960784315,\n      0.4666666667,\n      0.0039215686,\n      0.5294117647,\n      0.3764705882352941,\n      0.4823529412,\n      0.0039215686,\n      0.5137254902,\n      0.3803921568627451,\n      0.4980392157,\n      0.0039215686,\n      0.4980392157,\n      0.3843137254901961,\n      0.5137254902,\n      0.0039215686,\n      0.4823529412,\n      0.38823529411764707,\n      0.5294117647,\n      0.0039215686,\n      0.4666666667,\n      0.39215686274509803,\n      0.5450980392,\n      0.0039215686,\n      0.4509803922,\n      0.396078431372549,\n      0.5607843137,\n      0.0039215686,\n      0.4352941176,\n      0.4,\n      0.5764705882,\n      0.0039215686,\n      0.4196078431,\n      0.403921568627451,\n      0.5921568627,\n      0.0039215686,\n      0.4039215686,\n      0.40784313725490196,\n      0.6078431373,\n      0.0039215686,\n      0.3882352941,\n      0.4117647058823529,\n      0.6235294118,\n      0.0039215686,\n      0.3725490196,\n      0.41568627450980394,\n      0.6392156863,\n      0.0039215686,\n      0.3568627451,\n      0.4196078431372549,\n      0.6549019608,\n      0.0039215686,\n      0.3411764706,\n      0.4235294117647059,\n      0.6705882353,\n      0.0039215686,\n      0.3254901961,\n      0.42745098039215684,\n      0.6862745098,\n      0.0039215686,\n      0.3098039216,\n      0.43137254901960786,\n      0.7019607843,\n      0.0039215686,\n      0.2941176471,\n      0.43529411764705883,\n      0.7176470588,\n      0.0039215686,\n      0.2784313725,\n      0.4392156862745098,\n      0.7333333333,\n      0.0039215686,\n      0.262745098,\n      0.44313725490196076,\n      0.7490196078,\n      0.0039215686,\n      0.2509803922,\n      0.4470588235294118,\n      0.7607843137,\n      0.0039215686,\n      0.2352941176,\n      0.45098039215686275,\n      0.7764705882,\n      0.0039215686,\n      0.2196078431,\n      0.4549019607843137,\n      0.7921568627,\n      0.0039215686,\n      0.2039215686,\n      0.4588235294117647,\n      0.8078431373,\n      0.0039215686,\n      0.1882352941,\n      0.4627450980392157,\n      0.8235294118,\n      0.0039215686,\n      0.1725490196,\n      0.4666666666666667,\n      0.8392156863,\n      0.0039215686,\n      0.1568627451,\n      0.4705882352941177,\n      0.8549019608,\n      0.0039215686,\n      0.1411764706,\n      0.4745098039215686,\n      0.8705882353,\n      0.0039215686,\n      0.1254901961,\n      0.4784313725490197,\n      0.8862745098,\n      0.0039215686,\n      0.1098039216,\n      0.48235294117647065,\n      0.9019607843,\n      0.0039215686,\n      0.0941176471,\n      0.48627450980392156,\n      0.9176470588,\n      0.0039215686,\n      0.0784313725,\n      0.49019607843137253,\n      0.9333333333,\n      0.0039215686,\n      0.062745098,\n      0.49411764705882355,\n      0.9490196078,\n      0.0039215686,\n      0.0470588235,\n      0.4980392156862745,\n      0.9647058824,\n      0.0039215686,\n      0.031372549,\n      0.5019607843137255,\n      0.9803921569,\n      0.0039215686,\n      0.0156862745,\n      0.5058823529411764,\n      0.9960784314,\n      0.0039215686,\n      0.0039215686,\n      0.5098039215686274,\n      0.9960784314,\n      0.0156862745,\n      0.0039215686,\n      0.5137254901960784,\n      0.9960784314,\n      0.031372549,\n      0.0039215686,\n      0.5176470588235295,\n      0.9960784314,\n      0.0470588235,\n      0.0039215686,\n      0.5215686274509804,\n      0.9960784314,\n      0.062745098,\n      0.0039215686,\n      0.5254901960784314,\n      0.9960784314,\n      0.0784313725,\n      0.0039215686,\n      0.5294117647058824,\n      0.9960784314,\n      0.0941176471,\n      0.0039215686,\n      0.5333333333333333,\n      0.9960784314,\n      0.1098039216,\n      0.0039215686,\n      0.5372549019607843,\n      0.9960784314,\n      0.1254901961,\n      0.0039215686,\n      0.5411764705882353,\n      0.9960784314,\n      0.1411764706,\n      0.0039215686,\n      0.5450980392156862,\n      0.9960784314,\n      0.1568627451,\n      0.0039215686,\n      0.5490196078431373,\n      0.9960784314,\n      0.1725490196,\n      0.0039215686,\n      0.5529411764705883,\n      0.9960784314,\n      0.1882352941,\n      0.0039215686,\n      0.5568627450980392,\n      0.9960784314,\n      0.2039215686,\n      0.0039215686,\n      0.5607843137254902,\n      0.9960784314,\n      0.2196078431,\n      0.0039215686,\n      0.5647058823529412,\n      0.9960784314,\n      0.2352941176,\n      0.0039215686,\n      0.5686274509803921,\n      0.9960784314,\n      0.2509803922,\n      0.0039215686,\n      0.5725490196078431,\n      0.9960784314,\n      0.262745098,\n      0.0039215686,\n      0.5764705882352941,\n      0.9960784314,\n      0.2784313725,\n      0.0039215686,\n      0.5803921568627451,\n      0.9960784314,\n      0.2941176471,\n      0.0039215686,\n      0.5843137254901961,\n      0.9960784314,\n      0.3098039216,\n      0.0039215686,\n      0.5882352941176471,\n      0.9960784314,\n      0.3254901961,\n      0.0039215686,\n      0.592156862745098,\n      0.9960784314,\n      0.3411764706,\n      0.0039215686,\n      0.596078431372549,\n      0.9960784314,\n      0.3568627451,\n      0.0039215686,\n      0.6,\n      0.9960784314,\n      0.3725490196,\n      0.0039215686,\n      0.6039215686274509,\n      0.9960784314,\n      0.3882352941,\n      0.0039215686,\n      0.6078431372549019,\n      0.9960784314,\n      0.4039215686,\n      0.0039215686,\n      0.611764705882353,\n      0.9960784314,\n      0.4196078431,\n      0.0039215686,\n      0.615686274509804,\n      0.9960784314,\n      0.4352941176,\n      0.0039215686,\n      0.6196078431372549,\n      0.9960784314,\n      0.4509803922,\n      0.0039215686,\n      0.6235294117647059,\n      0.9960784314,\n      0.4666666667,\n      0.0039215686,\n      0.6274509803921569,\n      0.9960784314,\n      0.4823529412,\n      0.0039215686,\n      0.6313725490196078,\n      0.9960784314,\n      0.4980392157,\n      0.0039215686,\n      0.6352941176470588,\n      0.9960784314,\n      0.5137254902,\n      0.0039215686,\n      0.6392156862745098,\n      0.9960784314,\n      0.5294117647,\n      0.0039215686,\n      0.6431372549019608,\n      0.9960784314,\n      0.5450980392,\n      0.0039215686,\n      0.6470588235294118,\n      0.9960784314,\n      0.5607843137,\n      0.0039215686,\n      0.6509803921568628,\n      0.9960784314,\n      0.5764705882,\n      0.0039215686,\n      0.6549019607843137,\n      0.9960784314,\n      0.5921568627,\n      0.0039215686,\n      0.6588235294117647,\n      0.9960784314,\n      0.6078431373,\n      0.0039215686,\n      0.6627450980392157,\n      0.9960784314,\n      0.6235294118,\n      0.0039215686,\n      0.6666666666666666,\n      0.9960784314,\n      0.6392156863,\n      0.0039215686,\n      0.6705882352941176,\n      0.9960784314,\n      0.6549019608,\n      0.0039215686,\n      0.6745098039215687,\n      0.9960784314,\n      0.6705882353,\n      0.0039215686,\n      0.6784313725490196,\n      0.9960784314,\n      0.6862745098,\n      0.0039215686,\n      0.6823529411764706,\n      0.9960784314,\n      0.7019607843,\n      0.0039215686,\n      0.6862745098039216,\n      0.9960784314,\n      0.7176470588,\n      0.0039215686,\n      0.6901960784313725,\n      0.9960784314,\n      0.7333333333,\n      0.0039215686,\n      0.6941176470588235,\n      0.9960784314,\n      0.7490196078,\n      0.0039215686,\n      0.6980392156862745,\n      0.9960784314,\n      0.7607843137,\n      0.0039215686,\n      0.7019607843137254,\n      0.9960784314,\n      0.7764705882,\n      0.0039215686,\n      0.7058823529411765,\n      0.9960784314,\n      0.7921568627,\n      0.0039215686,\n      0.7098039215686275,\n      0.9960784314,\n      0.8078431373,\n      0.0039215686,\n      0.7137254901960784,\n      0.9960784314,\n      0.8235294118,\n      0.0039215686,\n      0.7176470588235294,\n      0.9960784314,\n      0.8392156863,\n      0.0039215686,\n      0.7215686274509804,\n      0.9960784314,\n      0.8549019608,\n      0.0039215686,\n      0.7254901960784313,\n      0.9960784314,\n      0.8705882353,\n      0.0039215686,\n      0.7294117647058823,\n      0.9960784314,\n      0.8862745098,\n      0.0039215686,\n      0.7333333333333333,\n      0.9960784314,\n      0.9019607843,\n      0.0039215686,\n      0.7372549019607844,\n      0.9960784314,\n      0.9176470588,\n      0.0039215686,\n      0.7411764705882353,\n      0.9960784314,\n      0.9333333333,\n      0.0039215686,\n      0.7450980392156863,\n      0.9960784314,\n      0.9490196078,\n      0.0039215686,\n      0.7490196078431373,\n      0.9960784314,\n      0.9647058824,\n      0.0039215686,\n      0.7529411764705882,\n      0.9960784314,\n      0.9803921569,\n      0.0039215686,\n      0.7568627450980392,\n      0.9960784314,\n      0.9960784314,\n      0.0039215686,\n      0.7607843137254902,\n      0.9960784314,\n      0.9960784314,\n      0.0196078431,\n      0.7647058823529411,\n      0.9960784314,\n      0.9960784314,\n      0.0352941176,\n      0.7686274509803922,\n      0.9960784314,\n      0.9960784314,\n      0.0509803922,\n      0.7725490196078432,\n      0.9960784314,\n      0.9960784314,\n      0.0666666667,\n      0.7764705882352941,\n      0.9960784314,\n      0.9960784314,\n      0.0823529412,\n      0.7803921568627451,\n      0.9960784314,\n      0.9960784314,\n      0.0980392157,\n      0.7843137254901961,\n      0.9960784314,\n      0.9960784314,\n      0.1137254902,\n      0.788235294117647,\n      0.9960784314,\n      0.9960784314,\n      0.1294117647,\n      0.792156862745098,\n      0.9960784314,\n      0.9960784314,\n      0.1450980392,\n      0.796078431372549,\n      0.9960784314,\n      0.9960784314,\n      0.1607843137,\n      0.8,\n      0.9960784314,\n      0.9960784314,\n      0.1764705882,\n      0.803921568627451,\n      0.9960784314,\n      0.9960784314,\n      0.1921568627,\n      0.807843137254902,\n      0.9960784314,\n      0.9960784314,\n      0.2078431373,\n      0.8117647058823529,\n      0.9960784314,\n      0.9960784314,\n      0.2235294118,\n      0.8156862745098039,\n      0.9960784314,\n      0.9960784314,\n      0.2392156863,\n      0.8196078431372549,\n      0.9960784314,\n      0.9960784314,\n      0.2509803922,\n      0.8235294117647058,\n      0.9960784314,\n      0.9960784314,\n      0.2666666667,\n      0.8274509803921568,\n      0.9960784314,\n      0.9960784314,\n      0.2823529412,\n      0.8313725490196079,\n      0.9960784314,\n      0.9960784314,\n      0.2980392157,\n      0.8352941176470589,\n      0.9960784314,\n      0.9960784314,\n      0.3137254902,\n      0.8392156862745098,\n      0.9960784314,\n      0.9960784314,\n      0.3333333333,\n      0.8431372549019608,\n      0.9960784314,\n      0.9960784314,\n      0.3490196078,\n      0.8470588235294118,\n      0.9960784314,\n      0.9960784314,\n      0.3647058824,\n      0.8509803921568627,\n      0.9960784314,\n      0.9960784314,\n      0.3803921569,\n      0.8549019607843137,\n      0.9960784314,\n      0.9960784314,\n      0.3960784314,\n      0.8588235294117647,\n      0.9960784314,\n      0.9960784314,\n      0.4117647059,\n      0.8627450980392157,\n      0.9960784314,\n      0.9960784314,\n      0.4274509804,\n      0.8666666666666667,\n      0.9960784314,\n      0.9960784314,\n      0.4431372549,\n      0.8705882352941177,\n      0.9960784314,\n      0.9960784314,\n      0.4588235294,\n      0.8745098039215686,\n      0.9960784314,\n      0.9960784314,\n      0.4745098039,\n      0.8784313725490196,\n      0.9960784314,\n      0.9960784314,\n      0.4901960784,\n      0.8823529411764706,\n      0.9960784314,\n      0.9960784314,\n      0.5058823529,\n      0.8862745098039215,\n      0.9960784314,\n      0.9960784314,\n      0.5215686275,\n      0.8901960784313725,\n      0.9960784314,\n      0.9960784314,\n      0.537254902,\n      0.8941176470588236,\n      0.9960784314,\n      0.9960784314,\n      0.5529411765,\n      0.8980392156862745,\n      0.9960784314,\n      0.9960784314,\n      0.568627451,\n      0.9019607843137255,\n      0.9960784314,\n      0.9960784314,\n      0.5843137255,\n      0.9058823529411765,\n      0.9960784314,\n      0.9960784314,\n      0.6,\n      0.9098039215686274,\n      0.9960784314,\n      0.9960784314,\n      0.6156862745,\n      0.9137254901960784,\n      0.9960784314,\n      0.9960784314,\n      0.631372549,\n      0.9176470588235294,\n      0.9960784314,\n      0.9960784314,\n      0.6470588235,\n      0.9215686274509803,\n      0.9960784314,\n      0.9960784314,\n      0.6666666667,\n      0.9254901960784314,\n      0.9960784314,\n      0.9960784314,\n      0.6823529412,\n      0.9294117647058824,\n      0.9960784314,\n      0.9960784314,\n      0.6980392157,\n      0.9333333333333333,\n      0.9960784314,\n      0.9960784314,\n      0.7137254902,\n      0.9372549019607843,\n      0.9960784314,\n      0.9960784314,\n      0.7294117647,\n      0.9411764705882354,\n      0.9960784314,\n      0.9960784314,\n      0.7450980392,\n      0.9450980392156864,\n      0.9960784314,\n      0.9960784314,\n      0.7568627451,\n      0.9490196078431372,\n      0.9960784314,\n      0.9960784314,\n      0.7725490196,\n      0.9529411764705882,\n      0.9960784314,\n      0.9960784314,\n      0.7882352941,\n      0.9568627450980394,\n      0.9960784314,\n      0.9960784314,\n      0.8039215686,\n      0.9607843137254903,\n      0.9960784314,\n      0.9960784314,\n      0.8196078431,\n      0.9647058823529413,\n      0.9960784314,\n      0.9960784314,\n      0.8352941176,\n      0.9686274509803922,\n      0.9960784314,\n      0.9960784314,\n      0.8509803922,\n      0.9725490196078431,\n      0.9960784314,\n      0.9960784314,\n      0.8666666667,\n      0.9764705882352941,\n      0.9960784314,\n      0.9960784314,\n      0.8823529412,\n      0.9803921568627451,\n      0.9960784314,\n      0.9960784314,\n      0.8980392157,\n      0.984313725490196,\n      0.9960784314,\n      0.9960784314,\n      0.9137254902,\n      0.9882352941176471,\n      0.9960784314,\n      0.9960784314,\n      0.9294117647,\n      0.9921568627450981,\n      0.9960784314,\n      0.9960784314,\n      0.9450980392,\n      0.996078431372549,\n      0.9960784314,\n      0.9960784314,\n      0.9607843137,\n      1.0,\n      0.9960784314,\n      0.9960784314,\n      0.9607843137,\n    ],\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'red_hot',\n    RGBPoints: [\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.00392156862745098,\n      0.0,\n      0.0,\n      0.0,\n      0.00784313725490196,\n      0.0,\n      0.0,\n      0.0,\n      0.011764705882352941,\n      0.0,\n      0.0,\n      0.0,\n      0.01568627450980392,\n      0.0039215686,\n      0.0039215686,\n      0.0039215686,\n      0.0196078431372549,\n      0.0039215686,\n      0.0039215686,\n      0.0039215686,\n      0.023529411764705882,\n      0.0039215686,\n      0.0039215686,\n      0.0039215686,\n      0.027450980392156862,\n      0.0039215686,\n      0.0039215686,\n      0.0039215686,\n      0.03137254901960784,\n      0.0039215686,\n      0.0039215686,\n      0.0039215686,\n      0.03529411764705882,\n      0.0156862745,\n      0.0,\n      0.0,\n      0.0392156862745098,\n      0.0274509804,\n      0.0,\n      0.0,\n      0.043137254901960784,\n      0.0392156863,\n      0.0,\n      0.0,\n      0.047058823529411764,\n      0.0509803922,\n      0.0,\n      0.0,\n      0.050980392156862744,\n      0.062745098,\n      0.0,\n      0.0,\n      0.054901960784313725,\n      0.0784313725,\n      0.0,\n      0.0,\n      0.05882352941176471,\n      0.0901960784,\n      0.0,\n      0.0,\n      0.06274509803921569,\n      0.1058823529,\n      0.0,\n      0.0,\n      0.06666666666666667,\n      0.1176470588,\n      0.0,\n      0.0,\n      0.07058823529411765,\n      0.1294117647,\n      0.0,\n      0.0,\n      0.07450980392156863,\n      0.1411764706,\n      0.0,\n      0.0,\n      0.0784313725490196,\n      0.1529411765,\n      0.0,\n      0.0,\n      0.08235294117647059,\n      0.1647058824,\n      0.0,\n      0.0,\n      0.08627450980392157,\n      0.1764705882,\n      0.0,\n      0.0,\n      0.09019607843137255,\n      0.1882352941,\n      0.0,\n      0.0,\n      0.09411764705882353,\n      0.2039215686,\n      0.0,\n      0.0,\n      0.09803921568627451,\n      0.2156862745,\n      0.0,\n      0.0,\n      0.10196078431372549,\n      0.2274509804,\n      0.0,\n      0.0,\n      0.10588235294117647,\n      0.2392156863,\n      0.0,\n      0.0,\n      0.10980392156862745,\n      0.2549019608,\n      0.0,\n      0.0,\n      0.11372549019607843,\n      0.2666666667,\n      0.0,\n      0.0,\n      0.11764705882352942,\n      0.2784313725,\n      0.0,\n      0.0,\n      0.12156862745098039,\n      0.2901960784,\n      0.0,\n      0.0,\n      0.12549019607843137,\n      0.3058823529,\n      0.0,\n      0.0,\n      0.12941176470588237,\n      0.3176470588,\n      0.0,\n      0.0,\n      0.13333333333333333,\n      0.3294117647,\n      0.0,\n      0.0,\n      0.13725490196078433,\n      0.3411764706,\n      0.0,\n      0.0,\n      0.1411764705882353,\n      0.3529411765,\n      0.0,\n      0.0,\n      0.1450980392156863,\n      0.3647058824,\n      0.0,\n      0.0,\n      0.14901960784313725,\n      0.3764705882,\n      0.0,\n      0.0,\n      0.15294117647058825,\n      0.3882352941,\n      0.0,\n      0.0,\n      0.1568627450980392,\n      0.4039215686,\n      0.0,\n      0.0,\n      0.1607843137254902,\n      0.4156862745,\n      0.0,\n      0.0,\n      0.16470588235294117,\n      0.431372549,\n      0.0,\n      0.0,\n      0.16862745098039217,\n      0.4431372549,\n      0.0,\n      0.0,\n      0.17254901960784313,\n      0.4588235294,\n      0.0,\n      0.0,\n      0.17647058823529413,\n      0.4705882353,\n      0.0,\n      0.0,\n      0.1803921568627451,\n      0.4823529412,\n      0.0,\n      0.0,\n      0.1843137254901961,\n      0.4941176471,\n      0.0,\n      0.0,\n      0.18823529411764706,\n      0.5098039216,\n      0.0,\n      0.0,\n      0.19215686274509805,\n      0.5215686275,\n      0.0,\n      0.0,\n      0.19607843137254902,\n      0.5333333333,\n      0.0,\n      0.0,\n      0.2,\n      0.5450980392,\n      0.0,\n      0.0,\n      0.20392156862745098,\n      0.5568627451,\n      0.0,\n      0.0,\n      0.20784313725490197,\n      0.568627451,\n      0.0,\n      0.0,\n      0.21176470588235294,\n      0.5803921569,\n      0.0,\n      0.0,\n      0.21568627450980393,\n      0.5921568627,\n      0.0,\n      0.0,\n      0.2196078431372549,\n      0.6078431373,\n      0.0,\n      0.0,\n      0.2235294117647059,\n      0.6196078431,\n      0.0,\n      0.0,\n      0.22745098039215686,\n      0.631372549,\n      0.0,\n      0.0,\n      0.23137254901960785,\n      0.6431372549,\n      0.0,\n      0.0,\n      0.23529411764705885,\n      0.6588235294,\n      0.0,\n      0.0,\n      0.23921568627450984,\n      0.6705882353,\n      0.0,\n      0.0,\n      0.24313725490196078,\n      0.6823529412,\n      0.0,\n      0.0,\n      0.24705882352941178,\n      0.6941176471,\n      0.0,\n      0.0,\n      0.25098039215686274,\n      0.7098039216,\n      0.0,\n      0.0,\n      0.2549019607843137,\n      0.7215686275,\n      0.0,\n      0.0,\n      0.25882352941176473,\n      0.7333333333,\n      0.0,\n      0.0,\n      0.2627450980392157,\n      0.7450980392,\n      0.0,\n      0.0,\n      0.26666666666666666,\n      0.7568627451,\n      0.0,\n      0.0,\n      0.27058823529411763,\n      0.768627451,\n      0.0,\n      0.0,\n      0.27450980392156865,\n      0.7843137255,\n      0.0,\n      0.0,\n      0.2784313725490196,\n      0.7960784314,\n      0.0,\n      0.0,\n      0.2823529411764706,\n      0.8117647059,\n      0.0,\n      0.0,\n      0.28627450980392155,\n      0.8235294118,\n      0.0,\n      0.0,\n      0.2901960784313726,\n      0.8352941176,\n      0.0,\n      0.0,\n      0.29411764705882354,\n      0.8470588235,\n      0.0,\n      0.0,\n      0.2980392156862745,\n      0.862745098,\n      0.0,\n      0.0,\n      0.30196078431372547,\n      0.8745098039,\n      0.0,\n      0.0,\n      0.3058823529411765,\n      0.8862745098,\n      0.0,\n      0.0,\n      0.30980392156862746,\n      0.8980392157,\n      0.0,\n      0.0,\n      0.3137254901960784,\n      0.9137254902,\n      0.0,\n      0.0,\n      0.3176470588235294,\n      0.9254901961,\n      0.0,\n      0.0,\n      0.3215686274509804,\n      0.937254902,\n      0.0,\n      0.0,\n      0.3254901960784314,\n      0.9490196078,\n      0.0,\n      0.0,\n      0.32941176470588235,\n      0.9607843137,\n      0.0,\n      0.0,\n      0.3333333333333333,\n      0.968627451,\n      0.0,\n      0.0,\n      0.33725490196078434,\n      0.9803921569,\n      0.0039215686,\n      0.0,\n      0.3411764705882353,\n      0.9882352941,\n      0.0078431373,\n      0.0,\n      0.34509803921568627,\n      1.0,\n      0.0117647059,\n      0.0,\n      0.34901960784313724,\n      1.0,\n      0.0235294118,\n      0.0,\n      0.35294117647058826,\n      1.0,\n      0.0352941176,\n      0.0,\n      0.3568627450980392,\n      1.0,\n      0.0470588235,\n      0.0,\n      0.3607843137254902,\n      1.0,\n      0.062745098,\n      0.0,\n      0.36470588235294116,\n      1.0,\n      0.0745098039,\n      0.0,\n      0.3686274509803922,\n      1.0,\n      0.0862745098,\n      0.0,\n      0.37254901960784315,\n      1.0,\n      0.0980392157,\n      0.0,\n      0.3764705882352941,\n      1.0,\n      0.1137254902,\n      0.0,\n      0.3803921568627451,\n      1.0,\n      0.1254901961,\n      0.0,\n      0.3843137254901961,\n      1.0,\n      0.137254902,\n      0.0,\n      0.38823529411764707,\n      1.0,\n      0.1490196078,\n      0.0,\n      0.39215686274509803,\n      1.0,\n      0.1647058824,\n      0.0,\n      0.396078431372549,\n      1.0,\n      0.1764705882,\n      0.0,\n      0.4,\n      1.0,\n      0.1882352941,\n      0.0,\n      0.403921568627451,\n      1.0,\n      0.2,\n      0.0,\n      0.40784313725490196,\n      1.0,\n      0.2156862745,\n      0.0,\n      0.4117647058823529,\n      1.0,\n      0.2274509804,\n      0.0,\n      0.41568627450980394,\n      1.0,\n      0.2392156863,\n      0.0,\n      0.4196078431372549,\n      1.0,\n      0.2509803922,\n      0.0,\n      0.4235294117647059,\n      1.0,\n      0.2666666667,\n      0.0,\n      0.42745098039215684,\n      1.0,\n      0.2784313725,\n      0.0,\n      0.43137254901960786,\n      1.0,\n      0.2901960784,\n      0.0,\n      0.43529411764705883,\n      1.0,\n      0.3019607843,\n      0.0,\n      0.4392156862745098,\n      1.0,\n      0.3176470588,\n      0.0,\n      0.44313725490196076,\n      1.0,\n      0.3294117647,\n      0.0,\n      0.4470588235294118,\n      1.0,\n      0.3411764706,\n      0.0,\n      0.45098039215686275,\n      1.0,\n      0.3529411765,\n      0.0,\n      0.4549019607843137,\n      1.0,\n      0.368627451,\n      0.0,\n      0.4588235294117647,\n      1.0,\n      0.3803921569,\n      0.0,\n      0.4627450980392157,\n      1.0,\n      0.3921568627,\n      0.0,\n      0.4666666666666667,\n      1.0,\n      0.4039215686,\n      0.0,\n      0.4705882352941177,\n      1.0,\n      0.4156862745,\n      0.0,\n      0.4745098039215686,\n      1.0,\n      0.4274509804,\n      0.0,\n      0.4784313725490197,\n      1.0,\n      0.4392156863,\n      0.0,\n      0.48235294117647065,\n      1.0,\n      0.4509803922,\n      0.0,\n      0.48627450980392156,\n      1.0,\n      0.4666666667,\n      0.0,\n      0.49019607843137253,\n      1.0,\n      0.4784313725,\n      0.0,\n      0.49411764705882355,\n      1.0,\n      0.4941176471,\n      0.0,\n      0.4980392156862745,\n      1.0,\n      0.5058823529,\n      0.0,\n      0.5019607843137255,\n      1.0,\n      0.5215686275,\n      0.0,\n      0.5058823529411764,\n      1.0,\n      0.5333333333,\n      0.0,\n      0.5098039215686274,\n      1.0,\n      0.5450980392,\n      0.0,\n      0.5137254901960784,\n      1.0,\n      0.5568627451,\n      0.0,\n      0.5176470588235295,\n      1.0,\n      0.568627451,\n      0.0,\n      0.5215686274509804,\n      1.0,\n      0.5803921569,\n      0.0,\n      0.5254901960784314,\n      1.0,\n      0.5921568627,\n      0.0,\n      0.5294117647058824,\n      1.0,\n      0.6039215686,\n      0.0,\n      0.5333333333333333,\n      1.0,\n      0.6196078431,\n      0.0,\n      0.5372549019607843,\n      1.0,\n      0.631372549,\n      0.0,\n      0.5411764705882353,\n      1.0,\n      0.6431372549,\n      0.0,\n      0.5450980392156862,\n      1.0,\n      0.6549019608,\n      0.0,\n      0.5490196078431373,\n      1.0,\n      0.6705882353,\n      0.0,\n      0.5529411764705883,\n      1.0,\n      0.6823529412,\n      0.0,\n      0.5568627450980392,\n      1.0,\n      0.6941176471,\n      0.0,\n      0.5607843137254902,\n      1.0,\n      0.7058823529,\n      0.0,\n      0.5647058823529412,\n      1.0,\n      0.7215686275,\n      0.0,\n      0.5686274509803921,\n      1.0,\n      0.7333333333,\n      0.0,\n      0.5725490196078431,\n      1.0,\n      0.7450980392,\n      0.0,\n      0.5764705882352941,\n      1.0,\n      0.7568627451,\n      0.0,\n      0.5803921568627451,\n      1.0,\n      0.7725490196,\n      0.0,\n      0.5843137254901961,\n      1.0,\n      0.7843137255,\n      0.0,\n      0.5882352941176471,\n      1.0,\n      0.7960784314,\n      0.0,\n      0.592156862745098,\n      1.0,\n      0.8078431373,\n      0.0,\n      0.596078431372549,\n      1.0,\n      0.8196078431,\n      0.0,\n      0.6,\n      1.0,\n      0.831372549,\n      0.0,\n      0.6039215686274509,\n      1.0,\n      0.8470588235,\n      0.0,\n      0.6078431372549019,\n      1.0,\n      0.8588235294,\n      0.0,\n      0.611764705882353,\n      1.0,\n      0.8745098039,\n      0.0,\n      0.615686274509804,\n      1.0,\n      0.8862745098,\n      0.0,\n      0.6196078431372549,\n      1.0,\n      0.8980392157,\n      0.0,\n      0.6235294117647059,\n      1.0,\n      0.9098039216,\n      0.0,\n      0.6274509803921569,\n      1.0,\n      0.9254901961,\n      0.0,\n      0.6313725490196078,\n      1.0,\n      0.937254902,\n      0.0,\n      0.6352941176470588,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.6392156862745098,\n      1.0,\n      0.9607843137,\n      0.0,\n      0.6431372549019608,\n      1.0,\n      0.9764705882,\n      0.0,\n      0.6470588235294118,\n      1.0,\n      0.9803921569,\n      0.0039215686,\n      0.6509803921568628,\n      1.0,\n      0.9882352941,\n      0.0117647059,\n      0.6549019607843137,\n      1.0,\n      0.9921568627,\n      0.0156862745,\n      0.6588235294117647,\n      1.0,\n      1.0,\n      0.0235294118,\n      0.6627450980392157,\n      1.0,\n      1.0,\n      0.0352941176,\n      0.6666666666666666,\n      1.0,\n      1.0,\n      0.0470588235,\n      0.6705882352941176,\n      1.0,\n      1.0,\n      0.0588235294,\n      0.6745098039215687,\n      1.0,\n      1.0,\n      0.0745098039,\n      0.6784313725490196,\n      1.0,\n      1.0,\n      0.0862745098,\n      0.6823529411764706,\n      1.0,\n      1.0,\n      0.0980392157,\n      0.6862745098039216,\n      1.0,\n      1.0,\n      0.1098039216,\n      0.6901960784313725,\n      1.0,\n      1.0,\n      0.1254901961,\n      0.6941176470588235,\n      1.0,\n      1.0,\n      0.137254902,\n      0.6980392156862745,\n      1.0,\n      1.0,\n      0.1490196078,\n      0.7019607843137254,\n      1.0,\n      1.0,\n      0.1607843137,\n      0.7058823529411765,\n      1.0,\n      1.0,\n      0.1764705882,\n      0.7098039215686275,\n      1.0,\n      1.0,\n      0.1882352941,\n      0.7137254901960784,\n      1.0,\n      1.0,\n      0.2,\n      0.7176470588235294,\n      1.0,\n      1.0,\n      0.2117647059,\n      0.7215686274509804,\n      1.0,\n      1.0,\n      0.2274509804,\n      0.7254901960784313,\n      1.0,\n      1.0,\n      0.2392156863,\n      0.7294117647058823,\n      1.0,\n      1.0,\n      0.2509803922,\n      0.7333333333333333,\n      1.0,\n      1.0,\n      0.262745098,\n      0.7372549019607844,\n      1.0,\n      1.0,\n      0.2784313725,\n      0.7411764705882353,\n      1.0,\n      1.0,\n      0.2901960784,\n      0.7450980392156863,\n      1.0,\n      1.0,\n      0.3019607843,\n      0.7490196078431373,\n      1.0,\n      1.0,\n      0.3137254902,\n      0.7529411764705882,\n      1.0,\n      1.0,\n      0.3294117647,\n      0.7568627450980392,\n      1.0,\n      1.0,\n      0.3411764706,\n      0.7607843137254902,\n      1.0,\n      1.0,\n      0.3529411765,\n      0.7647058823529411,\n      1.0,\n      1.0,\n      0.3647058824,\n      0.7686274509803922,\n      1.0,\n      1.0,\n      0.3803921569,\n      0.7725490196078432,\n      1.0,\n      1.0,\n      0.3921568627,\n      0.7764705882352941,\n      1.0,\n      1.0,\n      0.4039215686,\n      0.7803921568627451,\n      1.0,\n      1.0,\n      0.4156862745,\n      0.7843137254901961,\n      1.0,\n      1.0,\n      0.431372549,\n      0.788235294117647,\n      1.0,\n      1.0,\n      0.4431372549,\n      0.792156862745098,\n      1.0,\n      1.0,\n      0.4549019608,\n      0.796078431372549,\n      1.0,\n      1.0,\n      0.4666666667,\n      0.8,\n      1.0,\n      1.0,\n      0.4784313725,\n      0.803921568627451,\n      1.0,\n      1.0,\n      0.4901960784,\n      0.807843137254902,\n      1.0,\n      1.0,\n      0.5019607843,\n      0.8117647058823529,\n      1.0,\n      1.0,\n      0.5137254902,\n      0.8156862745098039,\n      1.0,\n      1.0,\n      0.5294117647,\n      0.8196078431372549,\n      1.0,\n      1.0,\n      0.5411764706,\n      0.8235294117647058,\n      1.0,\n      1.0,\n      0.5568627451,\n      0.8274509803921568,\n      1.0,\n      1.0,\n      0.568627451,\n      0.8313725490196079,\n      1.0,\n      1.0,\n      0.5843137255,\n      0.8352941176470589,\n      1.0,\n      1.0,\n      0.5960784314,\n      0.8392156862745098,\n      1.0,\n      1.0,\n      0.6078431373,\n      0.8431372549019608,\n      1.0,\n      1.0,\n      0.6196078431,\n      0.8470588235294118,\n      1.0,\n      1.0,\n      0.631372549,\n      0.8509803921568627,\n      1.0,\n      1.0,\n      0.6431372549,\n      0.8549019607843137,\n      1.0,\n      1.0,\n      0.6549019608,\n      0.8588235294117647,\n      1.0,\n      1.0,\n      0.6666666667,\n      0.8627450980392157,\n      1.0,\n      1.0,\n      0.6823529412,\n      0.8666666666666667,\n      1.0,\n      1.0,\n      0.6941176471,\n      0.8705882352941177,\n      1.0,\n      1.0,\n      0.7058823529,\n      0.8745098039215686,\n      1.0,\n      1.0,\n      0.7176470588,\n      0.8784313725490196,\n      1.0,\n      1.0,\n      0.7333333333,\n      0.8823529411764706,\n      1.0,\n      1.0,\n      0.7450980392,\n      0.8862745098039215,\n      1.0,\n      1.0,\n      0.7568627451,\n      0.8901960784313725,\n      1.0,\n      1.0,\n      0.768627451,\n      0.8941176470588236,\n      1.0,\n      1.0,\n      0.7843137255,\n      0.8980392156862745,\n      1.0,\n      1.0,\n      0.7960784314,\n      0.9019607843137255,\n      1.0,\n      1.0,\n      0.8078431373,\n      0.9058823529411765,\n      1.0,\n      1.0,\n      0.8196078431,\n      0.9098039215686274,\n      1.0,\n      1.0,\n      0.8352941176,\n      0.9137254901960784,\n      1.0,\n      1.0,\n      0.8470588235,\n      0.9176470588235294,\n      1.0,\n      1.0,\n      0.8588235294,\n      0.9215686274509803,\n      1.0,\n      1.0,\n      0.8705882353,\n      0.9254901960784314,\n      1.0,\n      1.0,\n      0.8823529412,\n      0.9294117647058824,\n      1.0,\n      1.0,\n      0.8941176471,\n      0.9333333333333333,\n      1.0,\n      1.0,\n      0.9098039216,\n      0.9372549019607843,\n      1.0,\n      1.0,\n      0.9215686275,\n      0.9411764705882354,\n      1.0,\n      1.0,\n      0.937254902,\n      0.9450980392156864,\n      1.0,\n      1.0,\n      0.9490196078,\n      0.9490196078431372,\n      1.0,\n      1.0,\n      0.9607843137,\n      0.9529411764705882,\n      1.0,\n      1.0,\n      0.9725490196,\n      0.9568627450980394,\n      1.0,\n      1.0,\n      0.9882352941,\n      0.9607843137254903,\n      1.0,\n      1.0,\n      0.9882352941,\n      0.9647058823529413,\n      1.0,\n      1.0,\n      0.9921568627,\n      0.9686274509803922,\n      1.0,\n      1.0,\n      0.9960784314,\n      0.9725490196078431,\n      1.0,\n      1.0,\n      1.0,\n      0.9764705882352941,\n      1.0,\n      1.0,\n      1.0,\n      0.9803921568627451,\n      1.0,\n      1.0,\n      1.0,\n      0.984313725490196,\n      1.0,\n      1.0,\n      1.0,\n      0.9882352941176471,\n      1.0,\n      1.0,\n      1.0,\n      0.9921568627450981,\n      1.0,\n      1.0,\n      1.0,\n      0.996078431372549,\n      1.0,\n      1.0,\n      1.0,\n      1.0,\n      1.0,\n      1.0,\n      1.0,\n    ],\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 's_pet',\n    RGBPoints: [\n      0.0,\n      0.0156862745,\n      0.0039215686,\n      0.0156862745,\n      0.00392156862745098,\n      0.0156862745,\n      0.0039215686,\n      0.0156862745,\n      0.00784313725490196,\n      0.0274509804,\n      0.0039215686,\n      0.031372549,\n      0.011764705882352941,\n      0.0352941176,\n      0.0039215686,\n      0.0509803922,\n      0.01568627450980392,\n      0.0392156863,\n      0.0039215686,\n      0.0666666667,\n      0.0196078431372549,\n      0.0509803922,\n      0.0039215686,\n      0.0823529412,\n      0.023529411764705882,\n      0.062745098,\n      0.0039215686,\n      0.0980392157,\n      0.027450980392156862,\n      0.0705882353,\n      0.0039215686,\n      0.1176470588,\n      0.03137254901960784,\n      0.0745098039,\n      0.0039215686,\n      0.1333333333,\n      0.03529411764705882,\n      0.0862745098,\n      0.0039215686,\n      0.1490196078,\n      0.0392156862745098,\n      0.0980392157,\n      0.0039215686,\n      0.1647058824,\n      0.043137254901960784,\n      0.1058823529,\n      0.0039215686,\n      0.1843137255,\n      0.047058823529411764,\n      0.1098039216,\n      0.0039215686,\n      0.2,\n      0.050980392156862744,\n      0.1215686275,\n      0.0039215686,\n      0.2156862745,\n      0.054901960784313725,\n      0.1333333333,\n      0.0039215686,\n      0.231372549,\n      0.05882352941176471,\n      0.137254902,\n      0.0039215686,\n      0.2509803922,\n      0.06274509803921569,\n      0.1490196078,\n      0.0039215686,\n      0.262745098,\n      0.06666666666666667,\n      0.1607843137,\n      0.0039215686,\n      0.2784313725,\n      0.07058823529411765,\n      0.168627451,\n      0.0039215686,\n      0.2941176471,\n      0.07450980392156863,\n      0.1725490196,\n      0.0039215686,\n      0.3137254902,\n      0.0784313725490196,\n      0.1843137255,\n      0.0039215686,\n      0.3294117647,\n      0.08235294117647059,\n      0.1960784314,\n      0.0039215686,\n      0.3450980392,\n      0.08627450980392157,\n      0.2039215686,\n      0.0039215686,\n      0.3607843137,\n      0.09019607843137255,\n      0.2078431373,\n      0.0039215686,\n      0.3803921569,\n      0.09411764705882353,\n      0.2196078431,\n      0.0039215686,\n      0.3960784314,\n      0.09803921568627451,\n      0.231372549,\n      0.0039215686,\n      0.4117647059,\n      0.10196078431372549,\n      0.2392156863,\n      0.0039215686,\n      0.4274509804,\n      0.10588235294117647,\n      0.2431372549,\n      0.0039215686,\n      0.4470588235,\n      0.10980392156862745,\n      0.2509803922,\n      0.0039215686,\n      0.462745098,\n      0.11372549019607843,\n      0.262745098,\n      0.0039215686,\n      0.4784313725,\n      0.11764705882352942,\n      0.2666666667,\n      0.0039215686,\n      0.4980392157,\n      0.12156862745098039,\n      0.2666666667,\n      0.0039215686,\n      0.4980392157,\n      0.12549019607843137,\n      0.262745098,\n      0.0039215686,\n      0.5137254902,\n      0.12941176470588237,\n      0.2509803922,\n      0.0039215686,\n      0.5294117647,\n      0.13333333333333333,\n      0.2431372549,\n      0.0039215686,\n      0.5450980392,\n      0.13725490196078433,\n      0.2392156863,\n      0.0039215686,\n      0.5607843137,\n      0.1411764705882353,\n      0.231372549,\n      0.0039215686,\n      0.5764705882,\n      0.1450980392156863,\n      0.2196078431,\n      0.0039215686,\n      0.5921568627,\n      0.14901960784313725,\n      0.2078431373,\n      0.0039215686,\n      0.6078431373,\n      0.15294117647058825,\n      0.2039215686,\n      0.0039215686,\n      0.6235294118,\n      0.1568627450980392,\n      0.1960784314,\n      0.0039215686,\n      0.6392156863,\n      0.1607843137254902,\n      0.1843137255,\n      0.0039215686,\n      0.6549019608,\n      0.16470588235294117,\n      0.1725490196,\n      0.0039215686,\n      0.6705882353,\n      0.16862745098039217,\n      0.168627451,\n      0.0039215686,\n      0.6862745098,\n      0.17254901960784313,\n      0.1607843137,\n      0.0039215686,\n      0.7019607843,\n      0.17647058823529413,\n      0.1490196078,\n      0.0039215686,\n      0.7176470588,\n      0.1803921568627451,\n      0.137254902,\n      0.0039215686,\n      0.7333333333,\n      0.1843137254901961,\n      0.1333333333,\n      0.0039215686,\n      0.7490196078,\n      0.18823529411764706,\n      0.1215686275,\n      0.0039215686,\n      0.7607843137,\n      0.19215686274509805,\n      0.1098039216,\n      0.0039215686,\n      0.7764705882,\n      0.19607843137254902,\n      0.1058823529,\n      0.0039215686,\n      0.7921568627,\n      0.2,\n      0.0980392157,\n      0.0039215686,\n      0.8078431373,\n      0.20392156862745098,\n      0.0862745098,\n      0.0039215686,\n      0.8235294118,\n      0.20784313725490197,\n      0.0745098039,\n      0.0039215686,\n      0.8392156863,\n      0.21176470588235294,\n      0.0705882353,\n      0.0039215686,\n      0.8549019608,\n      0.21568627450980393,\n      0.062745098,\n      0.0039215686,\n      0.8705882353,\n      0.2196078431372549,\n      0.0509803922,\n      0.0039215686,\n      0.8862745098,\n      0.2235294117647059,\n      0.0392156863,\n      0.0039215686,\n      0.9019607843,\n      0.22745098039215686,\n      0.0352941176,\n      0.0039215686,\n      0.9176470588,\n      0.23137254901960785,\n      0.0274509804,\n      0.0039215686,\n      0.9333333333,\n      0.23529411764705885,\n      0.0156862745,\n      0.0039215686,\n      0.9490196078,\n      0.23921568627450984,\n      0.0078431373,\n      0.0039215686,\n      0.9647058824,\n      0.24313725490196078,\n      0.0039215686,\n      0.0039215686,\n      0.9960784314,\n      0.24705882352941178,\n      0.0039215686,\n      0.0039215686,\n      0.9960784314,\n      0.25098039215686274,\n      0.0039215686,\n      0.0196078431,\n      0.9647058824,\n      0.2549019607843137,\n      0.0039215686,\n      0.0392156863,\n      0.9490196078,\n      0.25882352941176473,\n      0.0039215686,\n      0.0549019608,\n      0.9333333333,\n      0.2627450980392157,\n      0.0039215686,\n      0.0745098039,\n      0.9176470588,\n      0.26666666666666666,\n      0.0039215686,\n      0.0901960784,\n      0.9019607843,\n      0.27058823529411763,\n      0.0039215686,\n      0.1098039216,\n      0.8862745098,\n      0.27450980392156865,\n      0.0039215686,\n      0.1254901961,\n      0.8705882353,\n      0.2784313725490196,\n      0.0039215686,\n      0.1450980392,\n      0.8549019608,\n      0.2823529411764706,\n      0.0039215686,\n      0.1607843137,\n      0.8392156863,\n      0.28627450980392155,\n      0.0039215686,\n      0.1803921569,\n      0.8235294118,\n      0.2901960784313726,\n      0.0039215686,\n      0.1960784314,\n      0.8078431373,\n      0.29411764705882354,\n      0.0039215686,\n      0.2156862745,\n      0.7921568627,\n      0.2980392156862745,\n      0.0039215686,\n      0.231372549,\n      0.7764705882,\n      0.30196078431372547,\n      0.0039215686,\n      0.2509803922,\n      0.7607843137,\n      0.3058823529411765,\n      0.0039215686,\n      0.262745098,\n      0.7490196078,\n      0.30980392156862746,\n      0.0039215686,\n      0.2823529412,\n      0.7333333333,\n      0.3137254901960784,\n      0.0039215686,\n      0.2980392157,\n      0.7176470588,\n      0.3176470588235294,\n      0.0039215686,\n      0.3176470588,\n      0.7019607843,\n      0.3215686274509804,\n      0.0039215686,\n      0.3333333333,\n      0.6862745098,\n      0.3254901960784314,\n      0.0039215686,\n      0.3529411765,\n      0.6705882353,\n      0.32941176470588235,\n      0.0039215686,\n      0.368627451,\n      0.6549019608,\n      0.3333333333333333,\n      0.0039215686,\n      0.3882352941,\n      0.6392156863,\n      0.33725490196078434,\n      0.0039215686,\n      0.4039215686,\n      0.6235294118,\n      0.3411764705882353,\n      0.0039215686,\n      0.4235294118,\n      0.6078431373,\n      0.34509803921568627,\n      0.0039215686,\n      0.4392156863,\n      0.5921568627,\n      0.34901960784313724,\n      0.0039215686,\n      0.4588235294,\n      0.5764705882,\n      0.35294117647058826,\n      0.0039215686,\n      0.4745098039,\n      0.5607843137,\n      0.3568627450980392,\n      0.0039215686,\n      0.4941176471,\n      0.5450980392,\n      0.3607843137254902,\n      0.0039215686,\n      0.5098039216,\n      0.5294117647,\n      0.36470588235294116,\n      0.0039215686,\n      0.5294117647,\n      0.5137254902,\n      0.3686274509803922,\n      0.0039215686,\n      0.5450980392,\n      0.4980392157,\n      0.37254901960784315,\n      0.0039215686,\n      0.5647058824,\n      0.4784313725,\n      0.3764705882352941,\n      0.0039215686,\n      0.5803921569,\n      0.462745098,\n      0.3803921568627451,\n      0.0039215686,\n      0.6,\n      0.4470588235,\n      0.3843137254901961,\n      0.0039215686,\n      0.6156862745,\n      0.4274509804,\n      0.38823529411764707,\n      0.0039215686,\n      0.6352941176,\n      0.4117647059,\n      0.39215686274509803,\n      0.0039215686,\n      0.6509803922,\n      0.3960784314,\n      0.396078431372549,\n      0.0039215686,\n      0.6705882353,\n      0.3803921569,\n      0.4,\n      0.0039215686,\n      0.6862745098,\n      0.3607843137,\n      0.403921568627451,\n      0.0039215686,\n      0.7058823529,\n      0.3450980392,\n      0.40784313725490196,\n      0.0039215686,\n      0.7215686275,\n      0.3294117647,\n      0.4117647058823529,\n      0.0039215686,\n      0.7411764706,\n      0.3137254902,\n      0.41568627450980394,\n      0.0039215686,\n      0.7529411765,\n      0.2941176471,\n      0.4196078431372549,\n      0.0039215686,\n      0.7960784314,\n      0.2784313725,\n      0.4235294117647059,\n      0.0039215686,\n      0.7960784314,\n      0.262745098,\n      0.42745098039215684,\n      0.0392156863,\n      0.8039215686,\n      0.2509803922,\n      0.43137254901960786,\n      0.0745098039,\n      0.8117647059,\n      0.231372549,\n      0.43529411764705883,\n      0.1098039216,\n      0.8196078431,\n      0.2156862745,\n      0.4392156862745098,\n      0.1450980392,\n      0.8274509804,\n      0.2,\n      0.44313725490196076,\n      0.1803921569,\n      0.8352941176,\n      0.1843137255,\n      0.4470588235294118,\n      0.2156862745,\n      0.8431372549,\n      0.1647058824,\n      0.45098039215686275,\n      0.2509803922,\n      0.8509803922,\n      0.1490196078,\n      0.4549019607843137,\n      0.2823529412,\n      0.8588235294,\n      0.1333333333,\n      0.4588235294117647,\n      0.3176470588,\n      0.8666666667,\n      0.1176470588,\n      0.4627450980392157,\n      0.3529411765,\n      0.8745098039,\n      0.0980392157,\n      0.4666666666666667,\n      0.3882352941,\n      0.8823529412,\n      0.0823529412,\n      0.4705882352941177,\n      0.4235294118,\n      0.8901960784,\n      0.0666666667,\n      0.4745098039215686,\n      0.4588235294,\n      0.8980392157,\n      0.0509803922,\n      0.4784313725490197,\n      0.4941176471,\n      0.9058823529,\n      0.0431372549,\n      0.48235294117647065,\n      0.5294117647,\n      0.9137254902,\n      0.031372549,\n      0.48627450980392156,\n      0.5647058824,\n      0.9215686275,\n      0.0196078431,\n      0.49019607843137253,\n      0.6,\n      0.9294117647,\n      0.0078431373,\n      0.49411764705882355,\n      0.6352941176,\n      0.937254902,\n      0.0039215686,\n      0.4980392156862745,\n      0.6705882353,\n      0.9450980392,\n      0.0039215686,\n      0.5019607843137255,\n      0.7058823529,\n      0.9490196078,\n      0.0039215686,\n      0.5058823529411764,\n      0.7411764706,\n      0.9568627451,\n      0.0039215686,\n      0.5098039215686274,\n      0.7725490196,\n      0.9607843137,\n      0.0039215686,\n      0.5137254901960784,\n      0.8078431373,\n      0.968627451,\n      0.0039215686,\n      0.5176470588235295,\n      0.8431372549,\n      0.9725490196,\n      0.0039215686,\n      0.5215686274509804,\n      0.8784313725,\n      0.9803921569,\n      0.0039215686,\n      0.5254901960784314,\n      0.9137254902,\n      0.9843137255,\n      0.0039215686,\n      0.5294117647058824,\n      0.9490196078,\n      0.9921568627,\n      0.0039215686,\n      0.5333333333333333,\n      0.9960784314,\n      0.9960784314,\n      0.0039215686,\n      0.5372549019607843,\n      0.9960784314,\n      0.9960784314,\n      0.0039215686,\n      0.5411764705882353,\n      0.9960784314,\n      0.9921568627,\n      0.0039215686,\n      0.5450980392156862,\n      0.9960784314,\n      0.9843137255,\n      0.0039215686,\n      0.5490196078431373,\n      0.9960784314,\n      0.9764705882,\n      0.0039215686,\n      0.5529411764705883,\n      0.9960784314,\n      0.968627451,\n      0.0039215686,\n      0.5568627450980392,\n      0.9960784314,\n      0.9607843137,\n      0.0039215686,\n      0.5607843137254902,\n      0.9960784314,\n      0.9529411765,\n      0.0039215686,\n      0.5647058823529412,\n      0.9960784314,\n      0.9450980392,\n      0.0039215686,\n      0.5686274509803921,\n      0.9960784314,\n      0.937254902,\n      0.0039215686,\n      0.5725490196078431,\n      0.9960784314,\n      0.9294117647,\n      0.0039215686,\n      0.5764705882352941,\n      0.9960784314,\n      0.9215686275,\n      0.0039215686,\n      0.5803921568627451,\n      0.9960784314,\n      0.9137254902,\n      0.0039215686,\n      0.5843137254901961,\n      0.9960784314,\n      0.9058823529,\n      0.0039215686,\n      0.5882352941176471,\n      0.9960784314,\n      0.8980392157,\n      0.0039215686,\n      0.592156862745098,\n      0.9960784314,\n      0.8901960784,\n      0.0039215686,\n      0.596078431372549,\n      0.9960784314,\n      0.8823529412,\n      0.0039215686,\n      0.6,\n      0.9960784314,\n      0.8745098039,\n      0.0039215686,\n      0.6039215686274509,\n      0.9960784314,\n      0.8666666667,\n      0.0039215686,\n      0.6078431372549019,\n      0.9960784314,\n      0.8588235294,\n      0.0039215686,\n      0.611764705882353,\n      0.9960784314,\n      0.8509803922,\n      0.0039215686,\n      0.615686274509804,\n      0.9960784314,\n      0.8431372549,\n      0.0039215686,\n      0.6196078431372549,\n      0.9960784314,\n      0.8352941176,\n      0.0039215686,\n      0.6235294117647059,\n      0.9960784314,\n      0.8274509804,\n      0.0039215686,\n      0.6274509803921569,\n      0.9960784314,\n      0.8196078431,\n      0.0039215686,\n      0.6313725490196078,\n      0.9960784314,\n      0.8117647059,\n      0.0039215686,\n      0.6352941176470588,\n      0.9960784314,\n      0.8039215686,\n      0.0039215686,\n      0.6392156862745098,\n      0.9960784314,\n      0.7960784314,\n      0.0039215686,\n      0.6431372549019608,\n      0.9960784314,\n      0.7882352941,\n      0.0039215686,\n      0.6470588235294118,\n      0.9960784314,\n      0.7803921569,\n      0.0039215686,\n      0.6509803921568628,\n      0.9960784314,\n      0.7725490196,\n      0.0039215686,\n      0.6549019607843137,\n      0.9960784314,\n      0.7647058824,\n      0.0039215686,\n      0.6588235294117647,\n      0.9960784314,\n      0.7568627451,\n      0.0039215686,\n      0.6627450980392157,\n      0.9960784314,\n      0.7490196078,\n      0.0039215686,\n      0.6666666666666666,\n      0.9960784314,\n      0.7450980392,\n      0.0039215686,\n      0.6705882352941176,\n      0.9960784314,\n      0.737254902,\n      0.0039215686,\n      0.6745098039215687,\n      0.9960784314,\n      0.7294117647,\n      0.0039215686,\n      0.6784313725490196,\n      0.9960784314,\n      0.7215686275,\n      0.0039215686,\n      0.6823529411764706,\n      0.9960784314,\n      0.7137254902,\n      0.0039215686,\n      0.6862745098039216,\n      0.9960784314,\n      0.7058823529,\n      0.0039215686,\n      0.6901960784313725,\n      0.9960784314,\n      0.6980392157,\n      0.0039215686,\n      0.6941176470588235,\n      0.9960784314,\n      0.6901960784,\n      0.0039215686,\n      0.6980392156862745,\n      0.9960784314,\n      0.6823529412,\n      0.0039215686,\n      0.7019607843137254,\n      0.9960784314,\n      0.6745098039,\n      0.0039215686,\n      0.7058823529411765,\n      0.9960784314,\n      0.6666666667,\n      0.0039215686,\n      0.7098039215686275,\n      0.9960784314,\n      0.6588235294,\n      0.0039215686,\n      0.7137254901960784,\n      0.9960784314,\n      0.6509803922,\n      0.0039215686,\n      0.7176470588235294,\n      0.9960784314,\n      0.6431372549,\n      0.0039215686,\n      0.7215686274509804,\n      0.9960784314,\n      0.6352941176,\n      0.0039215686,\n      0.7254901960784313,\n      0.9960784314,\n      0.6274509804,\n      0.0039215686,\n      0.7294117647058823,\n      0.9960784314,\n      0.6196078431,\n      0.0039215686,\n      0.7333333333333333,\n      0.9960784314,\n      0.6117647059,\n      0.0039215686,\n      0.7372549019607844,\n      0.9960784314,\n      0.6039215686,\n      0.0039215686,\n      0.7411764705882353,\n      0.9960784314,\n      0.5960784314,\n      0.0039215686,\n      0.7450980392156863,\n      0.9960784314,\n      0.5882352941,\n      0.0039215686,\n      0.7490196078431373,\n      0.9960784314,\n      0.5803921569,\n      0.0039215686,\n      0.7529411764705882,\n      0.9960784314,\n      0.5725490196,\n      0.0039215686,\n      0.7568627450980392,\n      0.9960784314,\n      0.5647058824,\n      0.0039215686,\n      0.7607843137254902,\n      0.9960784314,\n      0.5568627451,\n      0.0039215686,\n      0.7647058823529411,\n      0.9960784314,\n      0.5490196078,\n      0.0039215686,\n      0.7686274509803922,\n      0.9960784314,\n      0.5411764706,\n      0.0039215686,\n      0.7725490196078432,\n      0.9960784314,\n      0.5333333333,\n      0.0039215686,\n      0.7764705882352941,\n      0.9960784314,\n      0.5254901961,\n      0.0039215686,\n      0.7803921568627451,\n      0.9960784314,\n      0.5176470588,\n      0.0039215686,\n      0.7843137254901961,\n      0.9960784314,\n      0.5098039216,\n      0.0039215686,\n      0.788235294117647,\n      0.9960784314,\n      0.5019607843,\n      0.0039215686,\n      0.792156862745098,\n      0.9960784314,\n      0.4941176471,\n      0.0039215686,\n      0.796078431372549,\n      0.9960784314,\n      0.4862745098,\n      0.0039215686,\n      0.8,\n      0.9960784314,\n      0.4784313725,\n      0.0039215686,\n      0.803921568627451,\n      0.9960784314,\n      0.4705882353,\n      0.0039215686,\n      0.807843137254902,\n      0.9960784314,\n      0.462745098,\n      0.0039215686,\n      0.8117647058823529,\n      0.9960784314,\n      0.4549019608,\n      0.0039215686,\n      0.8156862745098039,\n      0.9960784314,\n      0.4470588235,\n      0.0039215686,\n      0.8196078431372549,\n      0.9960784314,\n      0.4392156863,\n      0.0039215686,\n      0.8235294117647058,\n      0.9960784314,\n      0.431372549,\n      0.0039215686,\n      0.8274509803921568,\n      0.9960784314,\n      0.4235294118,\n      0.0039215686,\n      0.8313725490196079,\n      0.9960784314,\n      0.4156862745,\n      0.0039215686,\n      0.8352941176470589,\n      0.9960784314,\n      0.4078431373,\n      0.0039215686,\n      0.8392156862745098,\n      0.9960784314,\n      0.4,\n      0.0039215686,\n      0.8431372549019608,\n      0.9960784314,\n      0.3921568627,\n      0.0039215686,\n      0.8470588235294118,\n      0.9960784314,\n      0.3843137255,\n      0.0039215686,\n      0.8509803921568627,\n      0.9960784314,\n      0.3764705882,\n      0.0039215686,\n      0.8549019607843137,\n      0.9960784314,\n      0.368627451,\n      0.0039215686,\n      0.8588235294117647,\n      0.9960784314,\n      0.3607843137,\n      0.0039215686,\n      0.8627450980392157,\n      0.9960784314,\n      0.3529411765,\n      0.0039215686,\n      0.8666666666666667,\n      0.9960784314,\n      0.3450980392,\n      0.0039215686,\n      0.8705882352941177,\n      0.9960784314,\n      0.337254902,\n      0.0039215686,\n      0.8745098039215686,\n      0.9960784314,\n      0.3294117647,\n      0.0039215686,\n      0.8784313725490196,\n      0.9960784314,\n      0.3215686275,\n      0.0039215686,\n      0.8823529411764706,\n      0.9960784314,\n      0.3137254902,\n      0.0039215686,\n      0.8862745098039215,\n      0.9960784314,\n      0.3058823529,\n      0.0039215686,\n      0.8901960784313725,\n      0.9960784314,\n      0.2980392157,\n      0.0039215686,\n      0.8941176470588236,\n      0.9960784314,\n      0.2901960784,\n      0.0039215686,\n      0.8980392156862745,\n      0.9960784314,\n      0.2823529412,\n      0.0039215686,\n      0.9019607843137255,\n      0.9960784314,\n      0.2705882353,\n      0.0039215686,\n      0.9058823529411765,\n      0.9960784314,\n      0.2588235294,\n      0.0039215686,\n      0.9098039215686274,\n      0.9960784314,\n      0.2509803922,\n      0.0039215686,\n      0.9137254901960784,\n      0.9960784314,\n      0.2431372549,\n      0.0039215686,\n      0.9176470588235294,\n      0.9960784314,\n      0.231372549,\n      0.0039215686,\n      0.9215686274509803,\n      0.9960784314,\n      0.2196078431,\n      0.0039215686,\n      0.9254901960784314,\n      0.9960784314,\n      0.2117647059,\n      0.0039215686,\n      0.9294117647058824,\n      0.9960784314,\n      0.2,\n      0.0039215686,\n      0.9333333333333333,\n      0.9960784314,\n      0.1882352941,\n      0.0039215686,\n      0.9372549019607843,\n      0.9960784314,\n      0.1764705882,\n      0.0039215686,\n      0.9411764705882354,\n      0.9960784314,\n      0.168627451,\n      0.0039215686,\n      0.9450980392156864,\n      0.9960784314,\n      0.1568627451,\n      0.0039215686,\n      0.9490196078431372,\n      0.9960784314,\n      0.1450980392,\n      0.0039215686,\n      0.9529411764705882,\n      0.9960784314,\n      0.1333333333,\n      0.0039215686,\n      0.9568627450980394,\n      0.9960784314,\n      0.1254901961,\n      0.0039215686,\n      0.9607843137254903,\n      0.9960784314,\n      0.1137254902,\n      0.0039215686,\n      0.9647058823529413,\n      0.9960784314,\n      0.1019607843,\n      0.0039215686,\n      0.9686274509803922,\n      0.9960784314,\n      0.0901960784,\n      0.0039215686,\n      0.9725490196078431,\n      0.9960784314,\n      0.0823529412,\n      0.0039215686,\n      0.9764705882352941,\n      0.9960784314,\n      0.0705882353,\n      0.0039215686,\n      0.9803921568627451,\n      0.9960784314,\n      0.0588235294,\n      0.0039215686,\n      0.984313725490196,\n      0.9960784314,\n      0.0470588235,\n      0.0039215686,\n      0.9882352941176471,\n      0.9960784314,\n      0.0392156863,\n      0.0039215686,\n      0.9921568627450981,\n      0.9960784314,\n      0.0274509804,\n      0.0039215686,\n      0.996078431372549,\n      0.9960784314,\n      0.0156862745,\n      0.0039215686,\n      1.0,\n      0.9960784314,\n      0.0156862745,\n      0.0039215686,\n    ],\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'perfusion',\n    RGBPoints: [\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.00392156862745098,\n      0.0078431373,\n      0.0235294118,\n      0.0235294118,\n      0.00784313725490196,\n      0.0078431373,\n      0.031372549,\n      0.0470588235,\n      0.011764705882352941,\n      0.0078431373,\n      0.0392156863,\n      0.062745098,\n      0.01568627450980392,\n      0.0078431373,\n      0.0470588235,\n      0.0862745098,\n      0.0196078431372549,\n      0.0078431373,\n      0.0549019608,\n      0.1019607843,\n      0.023529411764705882,\n      0.0078431373,\n      0.0549019608,\n      0.1254901961,\n      0.027450980392156862,\n      0.0078431373,\n      0.062745098,\n      0.1411764706,\n      0.03137254901960784,\n      0.0078431373,\n      0.0705882353,\n      0.1647058824,\n      0.03529411764705882,\n      0.0078431373,\n      0.0784313725,\n      0.1803921569,\n      0.0392156862745098,\n      0.0078431373,\n      0.0862745098,\n      0.2039215686,\n      0.043137254901960784,\n      0.0078431373,\n      0.0862745098,\n      0.2196078431,\n      0.047058823529411764,\n      0.0078431373,\n      0.0941176471,\n      0.2431372549,\n      0.050980392156862744,\n      0.0078431373,\n      0.1019607843,\n      0.2666666667,\n      0.054901960784313725,\n      0.0078431373,\n      0.1098039216,\n      0.2823529412,\n      0.05882352941176471,\n      0.0078431373,\n      0.1176470588,\n      0.3058823529,\n      0.06274509803921569,\n      0.0078431373,\n      0.1176470588,\n      0.3215686275,\n      0.06666666666666667,\n      0.0078431373,\n      0.1254901961,\n      0.3450980392,\n      0.07058823529411765,\n      0.0078431373,\n      0.1333333333,\n      0.3607843137,\n      0.07450980392156863,\n      0.0078431373,\n      0.1411764706,\n      0.3843137255,\n      0.0784313725490196,\n      0.0078431373,\n      0.1490196078,\n      0.4,\n      0.08235294117647059,\n      0.0078431373,\n      0.1490196078,\n      0.4235294118,\n      0.08627450980392157,\n      0.0078431373,\n      0.1568627451,\n      0.4392156863,\n      0.09019607843137255,\n      0.0078431373,\n      0.1647058824,\n      0.462745098,\n      0.09411764705882353,\n      0.0078431373,\n      0.1725490196,\n      0.4784313725,\n      0.09803921568627451,\n      0.0078431373,\n      0.1803921569,\n      0.5019607843,\n      0.10196078431372549,\n      0.0078431373,\n      0.1803921569,\n      0.5254901961,\n      0.10588235294117647,\n      0.0078431373,\n      0.1882352941,\n      0.5411764706,\n      0.10980392156862745,\n      0.0078431373,\n      0.1960784314,\n      0.5647058824,\n      0.11372549019607843,\n      0.0078431373,\n      0.2039215686,\n      0.5803921569,\n      0.11764705882352942,\n      0.0078431373,\n      0.2117647059,\n      0.6039215686,\n      0.12156862745098039,\n      0.0078431373,\n      0.2117647059,\n      0.6196078431,\n      0.12549019607843137,\n      0.0078431373,\n      0.2196078431,\n      0.6431372549,\n      0.12941176470588237,\n      0.0078431373,\n      0.2274509804,\n      0.6588235294,\n      0.13333333333333333,\n      0.0078431373,\n      0.2352941176,\n      0.6823529412,\n      0.13725490196078433,\n      0.0078431373,\n      0.2431372549,\n      0.6980392157,\n      0.1411764705882353,\n      0.0078431373,\n      0.2431372549,\n      0.7215686275,\n      0.1450980392156863,\n      0.0078431373,\n      0.2509803922,\n      0.737254902,\n      0.14901960784313725,\n      0.0078431373,\n      0.2588235294,\n      0.7607843137,\n      0.15294117647058825,\n      0.0078431373,\n      0.2666666667,\n      0.7843137255,\n      0.1568627450980392,\n      0.0078431373,\n      0.2745098039,\n      0.8,\n      0.1607843137254902,\n      0.0078431373,\n      0.2745098039,\n      0.8235294118,\n      0.16470588235294117,\n      0.0078431373,\n      0.2823529412,\n      0.8392156863,\n      0.16862745098039217,\n      0.0078431373,\n      0.2901960784,\n      0.862745098,\n      0.17254901960784313,\n      0.0078431373,\n      0.2980392157,\n      0.8784313725,\n      0.17647058823529413,\n      0.0078431373,\n      0.3058823529,\n      0.9019607843,\n      0.1803921568627451,\n      0.0078431373,\n      0.3058823529,\n      0.9176470588,\n      0.1843137254901961,\n      0.0078431373,\n      0.2980392157,\n      0.9411764706,\n      0.18823529411764706,\n      0.0078431373,\n      0.3058823529,\n      0.9568627451,\n      0.19215686274509805,\n      0.0078431373,\n      0.2980392157,\n      0.9803921569,\n      0.19607843137254902,\n      0.0078431373,\n      0.2980392157,\n      0.9882352941,\n      0.2,\n      0.0078431373,\n      0.2901960784,\n      0.9803921569,\n      0.20392156862745098,\n      0.0078431373,\n      0.2901960784,\n      0.9647058824,\n      0.20784313725490197,\n      0.0078431373,\n      0.2823529412,\n      0.9568627451,\n      0.21176470588235294,\n      0.0078431373,\n      0.2823529412,\n      0.9411764706,\n      0.21568627450980393,\n      0.0078431373,\n      0.2745098039,\n      0.9333333333,\n      0.2196078431372549,\n      0.0078431373,\n      0.2666666667,\n      0.9176470588,\n      0.2235294117647059,\n      0.0078431373,\n      0.2666666667,\n      0.9098039216,\n      0.22745098039215686,\n      0.0078431373,\n      0.2588235294,\n      0.9019607843,\n      0.23137254901960785,\n      0.0078431373,\n      0.2588235294,\n      0.8862745098,\n      0.23529411764705885,\n      0.0078431373,\n      0.2509803922,\n      0.8784313725,\n      0.23921568627450984,\n      0.0078431373,\n      0.2509803922,\n      0.862745098,\n      0.24313725490196078,\n      0.0078431373,\n      0.2431372549,\n      0.8549019608,\n      0.24705882352941178,\n      0.0078431373,\n      0.2352941176,\n      0.8392156863,\n      0.25098039215686274,\n      0.0078431373,\n      0.2352941176,\n      0.831372549,\n      0.2549019607843137,\n      0.0078431373,\n      0.2274509804,\n      0.8235294118,\n      0.25882352941176473,\n      0.0078431373,\n      0.2274509804,\n      0.8078431373,\n      0.2627450980392157,\n      0.0078431373,\n      0.2196078431,\n      0.8,\n      0.26666666666666666,\n      0.0078431373,\n      0.2196078431,\n      0.7843137255,\n      0.27058823529411763,\n      0.0078431373,\n      0.2117647059,\n      0.7764705882,\n      0.27450980392156865,\n      0.0078431373,\n      0.2039215686,\n      0.7607843137,\n      0.2784313725490196,\n      0.0078431373,\n      0.2039215686,\n      0.7529411765,\n      0.2823529411764706,\n      0.0078431373,\n      0.1960784314,\n      0.7450980392,\n      0.28627450980392155,\n      0.0078431373,\n      0.1960784314,\n      0.7294117647,\n      0.2901960784313726,\n      0.0078431373,\n      0.1882352941,\n      0.7215686275,\n      0.29411764705882354,\n      0.0078431373,\n      0.1882352941,\n      0.7058823529,\n      0.2980392156862745,\n      0.0078431373,\n      0.1803921569,\n      0.6980392157,\n      0.30196078431372547,\n      0.0078431373,\n      0.1803921569,\n      0.6823529412,\n      0.3058823529411765,\n      0.0078431373,\n      0.1725490196,\n      0.6745098039,\n      0.30980392156862746,\n      0.0078431373,\n      0.1647058824,\n      0.6666666667,\n      0.3137254901960784,\n      0.0078431373,\n      0.1647058824,\n      0.6509803922,\n      0.3176470588235294,\n      0.0078431373,\n      0.1568627451,\n      0.6431372549,\n      0.3215686274509804,\n      0.0078431373,\n      0.1568627451,\n      0.6274509804,\n      0.3254901960784314,\n      0.0078431373,\n      0.1490196078,\n      0.6196078431,\n      0.32941176470588235,\n      0.0078431373,\n      0.1490196078,\n      0.6039215686,\n      0.3333333333333333,\n      0.0078431373,\n      0.1411764706,\n      0.5960784314,\n      0.33725490196078434,\n      0.0078431373,\n      0.1333333333,\n      0.5882352941,\n      0.3411764705882353,\n      0.0078431373,\n      0.1333333333,\n      0.5725490196,\n      0.34509803921568627,\n      0.0078431373,\n      0.1254901961,\n      0.5647058824,\n      0.34901960784313724,\n      0.0078431373,\n      0.1254901961,\n      0.5490196078,\n      0.35294117647058826,\n      0.0078431373,\n      0.1176470588,\n      0.5411764706,\n      0.3568627450980392,\n      0.0078431373,\n      0.1176470588,\n      0.5254901961,\n      0.3607843137254902,\n      0.0078431373,\n      0.1098039216,\n      0.5176470588,\n      0.36470588235294116,\n      0.0078431373,\n      0.1019607843,\n      0.5098039216,\n      0.3686274509803922,\n      0.0078431373,\n      0.1019607843,\n      0.4941176471,\n      0.37254901960784315,\n      0.0078431373,\n      0.0941176471,\n      0.4862745098,\n      0.3764705882352941,\n      0.0078431373,\n      0.0941176471,\n      0.4705882353,\n      0.3803921568627451,\n      0.0078431373,\n      0.0862745098,\n      0.462745098,\n      0.3843137254901961,\n      0.0078431373,\n      0.0862745098,\n      0.4470588235,\n      0.38823529411764707,\n      0.0078431373,\n      0.0784313725,\n      0.4392156863,\n      0.39215686274509803,\n      0.0078431373,\n      0.0705882353,\n      0.431372549,\n      0.396078431372549,\n      0.0078431373,\n      0.0705882353,\n      0.4156862745,\n      0.4,\n      0.0078431373,\n      0.062745098,\n      0.4078431373,\n      0.403921568627451,\n      0.0078431373,\n      0.062745098,\n      0.3921568627,\n      0.40784313725490196,\n      0.0078431373,\n      0.0549019608,\n      0.3843137255,\n      0.4117647058823529,\n      0.0078431373,\n      0.0549019608,\n      0.368627451,\n      0.41568627450980394,\n      0.0078431373,\n      0.0470588235,\n      0.3607843137,\n      0.4196078431372549,\n      0.0078431373,\n      0.0470588235,\n      0.3529411765,\n      0.4235294117647059,\n      0.0078431373,\n      0.0392156863,\n      0.337254902,\n      0.42745098039215684,\n      0.0078431373,\n      0.031372549,\n      0.3294117647,\n      0.43137254901960786,\n      0.0078431373,\n      0.031372549,\n      0.3137254902,\n      0.43529411764705883,\n      0.0078431373,\n      0.0235294118,\n      0.3058823529,\n      0.4392156862745098,\n      0.0078431373,\n      0.0235294118,\n      0.2901960784,\n      0.44313725490196076,\n      0.0078431373,\n      0.0156862745,\n      0.2823529412,\n      0.4470588235294118,\n      0.0078431373,\n      0.0156862745,\n      0.2745098039,\n      0.45098039215686275,\n      0.0078431373,\n      0.0078431373,\n      0.2588235294,\n      0.4549019607843137,\n      0.0235294118,\n      0.0078431373,\n      0.2509803922,\n      0.4588235294117647,\n      0.0078431373,\n      0.0078431373,\n      0.2352941176,\n      0.4627450980392157,\n      0.0078431373,\n      0.0078431373,\n      0.2274509804,\n      0.4666666666666667,\n      0.0078431373,\n      0.0078431373,\n      0.2117647059,\n      0.4705882352941177,\n      0.0078431373,\n      0.0078431373,\n      0.2039215686,\n      0.4745098039215686,\n      0.0078431373,\n      0.0078431373,\n      0.1960784314,\n      0.4784313725490197,\n      0.0078431373,\n      0.0078431373,\n      0.1803921569,\n      0.48235294117647065,\n      0.0078431373,\n      0.0078431373,\n      0.1725490196,\n      0.48627450980392156,\n      0.0078431373,\n      0.0078431373,\n      0.1568627451,\n      0.49019607843137253,\n      0.0078431373,\n      0.0078431373,\n      0.1490196078,\n      0.49411764705882355,\n      0.0078431373,\n      0.0078431373,\n      0.1333333333,\n      0.4980392156862745,\n      0.0078431373,\n      0.0078431373,\n      0.1254901961,\n      0.5019607843137255,\n      0.0078431373,\n      0.0078431373,\n      0.1176470588,\n      0.5058823529411764,\n      0.0078431373,\n      0.0078431373,\n      0.1019607843,\n      0.5098039215686274,\n      0.0078431373,\n      0.0078431373,\n      0.0941176471,\n      0.5137254901960784,\n      0.0078431373,\n      0.0078431373,\n      0.0784313725,\n      0.5176470588235295,\n      0.0078431373,\n      0.0078431373,\n      0.0705882353,\n      0.5215686274509804,\n      0.0078431373,\n      0.0078431373,\n      0.0549019608,\n      0.5254901960784314,\n      0.0078431373,\n      0.0078431373,\n      0.0470588235,\n      0.5294117647058824,\n      0.0235294118,\n      0.0078431373,\n      0.0392156863,\n      0.5333333333333333,\n      0.031372549,\n      0.0078431373,\n      0.0235294118,\n      0.5372549019607843,\n      0.0392156863,\n      0.0078431373,\n      0.0156862745,\n      0.5411764705882353,\n      0.0549019608,\n      0.0078431373,\n      0.0,\n      0.5450980392156862,\n      0.062745098,\n      0.0078431373,\n      0.0,\n      0.5490196078431373,\n      0.0705882353,\n      0.0078431373,\n      0.0,\n      0.5529411764705883,\n      0.0862745098,\n      0.0078431373,\n      0.0,\n      0.5568627450980392,\n      0.0941176471,\n      0.0078431373,\n      0.0,\n      0.5607843137254902,\n      0.1019607843,\n      0.0078431373,\n      0.0,\n      0.5647058823529412,\n      0.1098039216,\n      0.0078431373,\n      0.0,\n      0.5686274509803921,\n      0.1254901961,\n      0.0078431373,\n      0.0,\n      0.5725490196078431,\n      0.1333333333,\n      0.0078431373,\n      0.0,\n      0.5764705882352941,\n      0.1411764706,\n      0.0078431373,\n      0.0,\n      0.5803921568627451,\n      0.1568627451,\n      0.0078431373,\n      0.0,\n      0.5843137254901961,\n      0.1647058824,\n      0.0078431373,\n      0.0,\n      0.5882352941176471,\n      0.1725490196,\n      0.0078431373,\n      0.0,\n      0.592156862745098,\n      0.1882352941,\n      0.0078431373,\n      0.0,\n      0.596078431372549,\n      0.1960784314,\n      0.0078431373,\n      0.0,\n      0.6,\n      0.2039215686,\n      0.0078431373,\n      0.0,\n      0.6039215686274509,\n      0.2117647059,\n      0.0078431373,\n      0.0,\n      0.6078431372549019,\n      0.2274509804,\n      0.0078431373,\n      0.0,\n      0.611764705882353,\n      0.2352941176,\n      0.0078431373,\n      0.0,\n      0.615686274509804,\n      0.2431372549,\n      0.0078431373,\n      0.0,\n      0.6196078431372549,\n      0.2588235294,\n      0.0078431373,\n      0.0,\n      0.6235294117647059,\n      0.2666666667,\n      0.0078431373,\n      0.0,\n      0.6274509803921569,\n      0.2745098039,\n      0.0,\n      0.0,\n      0.6313725490196078,\n      0.2901960784,\n      0.0156862745,\n      0.0,\n      0.6352941176470588,\n      0.2980392157,\n      0.0235294118,\n      0.0,\n      0.6392156862745098,\n      0.3058823529,\n      0.0392156863,\n      0.0,\n      0.6431372549019608,\n      0.3137254902,\n      0.0470588235,\n      0.0,\n      0.6470588235294118,\n      0.3294117647,\n      0.0549019608,\n      0.0,\n      0.6509803921568628,\n      0.337254902,\n      0.0705882353,\n      0.0,\n      0.6549019607843137,\n      0.3450980392,\n      0.0784313725,\n      0.0,\n      0.6588235294117647,\n      0.3607843137,\n      0.0862745098,\n      0.0,\n      0.6627450980392157,\n      0.368627451,\n      0.1019607843,\n      0.0,\n      0.6666666666666666,\n      0.3764705882,\n      0.1098039216,\n      0.0,\n      0.6705882352941176,\n      0.3843137255,\n      0.1176470588,\n      0.0,\n      0.6745098039215687,\n      0.4,\n      0.1333333333,\n      0.0,\n      0.6784313725490196,\n      0.4078431373,\n      0.1411764706,\n      0.0,\n      0.6823529411764706,\n      0.4156862745,\n      0.1490196078,\n      0.0,\n      0.6862745098039216,\n      0.431372549,\n      0.1647058824,\n      0.0,\n      0.6901960784313725,\n      0.4392156863,\n      0.1725490196,\n      0.0,\n      0.6941176470588235,\n      0.4470588235,\n      0.1803921569,\n      0.0,\n      0.6980392156862745,\n      0.462745098,\n      0.1960784314,\n      0.0,\n      0.7019607843137254,\n      0.4705882353,\n      0.2039215686,\n      0.0,\n      0.7058823529411765,\n      0.4784313725,\n      0.2117647059,\n      0.0,\n      0.7098039215686275,\n      0.4862745098,\n      0.2274509804,\n      0.0,\n      0.7137254901960784,\n      0.5019607843,\n      0.2352941176,\n      0.0,\n      0.7176470588235294,\n      0.5098039216,\n      0.2431372549,\n      0.0,\n      0.7215686274509804,\n      0.5176470588,\n      0.2588235294,\n      0.0,\n      0.7254901960784313,\n      0.5333333333,\n      0.2666666667,\n      0.0,\n      0.7294117647058823,\n      0.5411764706,\n      0.2745098039,\n      0.0,\n      0.7333333333333333,\n      0.5490196078,\n      0.2901960784,\n      0.0,\n      0.7372549019607844,\n      0.5647058824,\n      0.2980392157,\n      0.0,\n      0.7411764705882353,\n      0.5725490196,\n      0.3058823529,\n      0.0,\n      0.7450980392156863,\n      0.5803921569,\n      0.3215686275,\n      0.0,\n      0.7490196078431373,\n      0.5882352941,\n      0.3294117647,\n      0.0,\n      0.7529411764705882,\n      0.6039215686,\n      0.337254902,\n      0.0,\n      0.7568627450980392,\n      0.6117647059,\n      0.3529411765,\n      0.0,\n      0.7607843137254902,\n      0.6196078431,\n      0.3607843137,\n      0.0,\n      0.7647058823529411,\n      0.6352941176,\n      0.368627451,\n      0.0,\n      0.7686274509803922,\n      0.6431372549,\n      0.3843137255,\n      0.0,\n      0.7725490196078432,\n      0.6509803922,\n      0.3921568627,\n      0.0,\n      0.7764705882352941,\n      0.6588235294,\n      0.4,\n      0.0,\n      0.7803921568627451,\n      0.6745098039,\n      0.4156862745,\n      0.0,\n      0.7843137254901961,\n      0.6823529412,\n      0.4235294118,\n      0.0,\n      0.788235294117647,\n      0.6901960784,\n      0.431372549,\n      0.0,\n      0.792156862745098,\n      0.7058823529,\n      0.4470588235,\n      0.0,\n      0.796078431372549,\n      0.7137254902,\n      0.4549019608,\n      0.0,\n      0.8,\n      0.7215686275,\n      0.462745098,\n      0.0,\n      0.803921568627451,\n      0.737254902,\n      0.4784313725,\n      0.0,\n      0.807843137254902,\n      0.7450980392,\n      0.4862745098,\n      0.0,\n      0.8117647058823529,\n      0.7529411765,\n      0.4941176471,\n      0.0,\n      0.8156862745098039,\n      0.7607843137,\n      0.5098039216,\n      0.0,\n      0.8196078431372549,\n      0.7764705882,\n      0.5176470588,\n      0.0,\n      0.8235294117647058,\n      0.7843137255,\n      0.5254901961,\n      0.0,\n      0.8274509803921568,\n      0.7921568627,\n      0.5411764706,\n      0.0,\n      0.8313725490196079,\n      0.8078431373,\n      0.5490196078,\n      0.0,\n      0.8352941176470589,\n      0.8156862745,\n      0.5568627451,\n      0.0,\n      0.8392156862745098,\n      0.8235294118,\n      0.5725490196,\n      0.0,\n      0.8431372549019608,\n      0.8392156863,\n      0.5803921569,\n      0.0,\n      0.8470588235294118,\n      0.8470588235,\n      0.5882352941,\n      0.0,\n      0.8509803921568627,\n      0.8549019608,\n      0.6039215686,\n      0.0,\n      0.8549019607843137,\n      0.862745098,\n      0.6117647059,\n      0.0,\n      0.8588235294117647,\n      0.8784313725,\n      0.6196078431,\n      0.0,\n      0.8627450980392157,\n      0.8862745098,\n      0.6352941176,\n      0.0,\n      0.8666666666666667,\n      0.8941176471,\n      0.6431372549,\n      0.0,\n      0.8705882352941177,\n      0.9098039216,\n      0.6509803922,\n      0.0,\n      0.8745098039215686,\n      0.9176470588,\n      0.6666666667,\n      0.0,\n      0.8784313725490196,\n      0.9254901961,\n      0.6745098039,\n      0.0,\n      0.8823529411764706,\n      0.9411764706,\n      0.6823529412,\n      0.0,\n      0.8862745098039215,\n      0.9490196078,\n      0.6980392157,\n      0.0,\n      0.8901960784313725,\n      0.9568627451,\n      0.7058823529,\n      0.0,\n      0.8941176470588236,\n      0.9647058824,\n      0.7137254902,\n      0.0,\n      0.8980392156862745,\n      0.9803921569,\n      0.7294117647,\n      0.0,\n      0.9019607843137255,\n      0.9882352941,\n      0.737254902,\n      0.0,\n      0.9058823529411765,\n      0.9960784314,\n      0.7450980392,\n      0.0,\n      0.9098039215686274,\n      0.9960784314,\n      0.7607843137,\n      0.0,\n      0.9137254901960784,\n      0.9960784314,\n      0.768627451,\n      0.0,\n      0.9176470588235294,\n      0.9960784314,\n      0.7764705882,\n      0.0,\n      0.9215686274509803,\n      0.9960784314,\n      0.7921568627,\n      0.0,\n      0.9254901960784314,\n      0.9960784314,\n      0.8,\n      0.0,\n      0.9294117647058824,\n      0.9960784314,\n      0.8078431373,\n      0.0,\n      0.9333333333333333,\n      0.9960784314,\n      0.8235294118,\n      0.0,\n      0.9372549019607843,\n      0.9960784314,\n      0.831372549,\n      0.0,\n      0.9411764705882354,\n      0.9960784314,\n      0.8392156863,\n      0.0,\n      0.9450980392156864,\n      0.9960784314,\n      0.8549019608,\n      0.0,\n      0.9490196078431372,\n      0.9960784314,\n      0.862745098,\n      0.0549019608,\n      0.9529411764705882,\n      0.9960784314,\n      0.8705882353,\n      0.1098039216,\n      0.9568627450980394,\n      0.9960784314,\n      0.8862745098,\n      0.1647058824,\n      0.9607843137254903,\n      0.9960784314,\n      0.8941176471,\n      0.2196078431,\n      0.9647058823529413,\n      0.9960784314,\n      0.9019607843,\n      0.2666666667,\n      0.9686274509803922,\n      0.9960784314,\n      0.9176470588,\n      0.3215686275,\n      0.9725490196078431,\n      0.9960784314,\n      0.9254901961,\n      0.3764705882,\n      0.9764705882352941,\n      0.9960784314,\n      0.9333333333,\n      0.431372549,\n      0.9803921568627451,\n      0.9960784314,\n      0.9490196078,\n      0.4862745098,\n      0.984313725490196,\n      0.9960784314,\n      0.9568627451,\n      0.5333333333,\n      0.9882352941176471,\n      0.9960784314,\n      0.9647058824,\n      0.5882352941,\n      0.9921568627450981,\n      0.9960784314,\n      0.9803921569,\n      0.6431372549,\n      0.996078431372549,\n      0.9960784314,\n      0.9882352941,\n      0.6980392157,\n      1.0,\n      0.9960784314,\n      0.9960784314,\n      0.7450980392,\n    ],\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'rainbow_2',\n    RGBPoints: [\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.00392156862745098,\n      0.0156862745,\n      0.0,\n      0.0117647059,\n      0.00784313725490196,\n      0.0352941176,\n      0.0,\n      0.0274509804,\n      0.011764705882352941,\n      0.0509803922,\n      0.0,\n      0.0392156863,\n      0.01568627450980392,\n      0.0705882353,\n      0.0,\n      0.0549019608,\n      0.0196078431372549,\n      0.0862745098,\n      0.0,\n      0.0745098039,\n      0.023529411764705882,\n      0.1058823529,\n      0.0,\n      0.0901960784,\n      0.027450980392156862,\n      0.1215686275,\n      0.0,\n      0.1098039216,\n      0.03137254901960784,\n      0.1411764706,\n      0.0,\n      0.1254901961,\n      0.03529411764705882,\n      0.1568627451,\n      0.0,\n      0.1490196078,\n      0.0392156862745098,\n      0.1764705882,\n      0.0,\n      0.168627451,\n      0.043137254901960784,\n      0.1960784314,\n      0.0,\n      0.1882352941,\n      0.047058823529411764,\n      0.2117647059,\n      0.0,\n      0.2078431373,\n      0.050980392156862744,\n      0.2274509804,\n      0.0,\n      0.231372549,\n      0.054901960784313725,\n      0.2392156863,\n      0.0,\n      0.2470588235,\n      0.05882352941176471,\n      0.2509803922,\n      0.0,\n      0.2666666667,\n      0.06274509803921569,\n      0.2666666667,\n      0.0,\n      0.2823529412,\n      0.06666666666666667,\n      0.2705882353,\n      0.0,\n      0.3019607843,\n      0.07058823529411765,\n      0.2823529412,\n      0.0,\n      0.3176470588,\n      0.07450980392156863,\n      0.2901960784,\n      0.0,\n      0.337254902,\n      0.0784313725490196,\n      0.3019607843,\n      0.0,\n      0.3568627451,\n      0.08235294117647059,\n      0.3098039216,\n      0.0,\n      0.3725490196,\n      0.08627450980392157,\n      0.3137254902,\n      0.0,\n      0.3921568627,\n      0.09019607843137255,\n      0.3215686275,\n      0.0,\n      0.4078431373,\n      0.09411764705882353,\n      0.3254901961,\n      0.0,\n      0.4274509804,\n      0.09803921568627451,\n      0.3333333333,\n      0.0,\n      0.4431372549,\n      0.10196078431372549,\n      0.3294117647,\n      0.0,\n      0.462745098,\n      0.10588235294117647,\n      0.337254902,\n      0.0,\n      0.4784313725,\n      0.10980392156862745,\n      0.3411764706,\n      0.0,\n      0.4980392157,\n      0.11372549019607843,\n      0.3450980392,\n      0.0,\n      0.5176470588,\n      0.11764705882352942,\n      0.337254902,\n      0.0,\n      0.5333333333,\n      0.12156862745098039,\n      0.3411764706,\n      0.0,\n      0.5529411765,\n      0.12549019607843137,\n      0.3411764706,\n      0.0,\n      0.568627451,\n      0.12941176470588237,\n      0.3411764706,\n      0.0,\n      0.5882352941,\n      0.13333333333333333,\n      0.3333333333,\n      0.0,\n      0.6039215686,\n      0.13725490196078433,\n      0.3294117647,\n      0.0,\n      0.6235294118,\n      0.1411764705882353,\n      0.3294117647,\n      0.0,\n      0.6392156863,\n      0.1450980392156863,\n      0.3294117647,\n      0.0,\n      0.6588235294,\n      0.14901960784313725,\n      0.3254901961,\n      0.0,\n      0.6784313725,\n      0.15294117647058825,\n      0.3098039216,\n      0.0,\n      0.6941176471,\n      0.1568627450980392,\n      0.3058823529,\n      0.0,\n      0.7137254902,\n      0.1607843137254902,\n      0.3019607843,\n      0.0,\n      0.7294117647,\n      0.16470588235294117,\n      0.2980392157,\n      0.0,\n      0.7490196078,\n      0.16862745098039217,\n      0.2784313725,\n      0.0,\n      0.7647058824,\n      0.17254901960784313,\n      0.2745098039,\n      0.0,\n      0.7843137255,\n      0.17647058823529413,\n      0.2666666667,\n      0.0,\n      0.8,\n      0.1803921568627451,\n      0.2588235294,\n      0.0,\n      0.8196078431,\n      0.1843137254901961,\n      0.2352941176,\n      0.0,\n      0.8392156863,\n      0.18823529411764706,\n      0.2274509804,\n      0.0,\n      0.8549019608,\n      0.19215686274509805,\n      0.2156862745,\n      0.0,\n      0.8745098039,\n      0.19607843137254902,\n      0.2078431373,\n      0.0,\n      0.8901960784,\n      0.2,\n      0.1803921569,\n      0.0,\n      0.9098039216,\n      0.20392156862745098,\n      0.168627451,\n      0.0,\n      0.9254901961,\n      0.20784313725490197,\n      0.1568627451,\n      0.0,\n      0.9450980392,\n      0.21176470588235294,\n      0.1411764706,\n      0.0,\n      0.9607843137,\n      0.21568627450980393,\n      0.1294117647,\n      0.0,\n      0.9803921569,\n      0.2196078431372549,\n      0.0980392157,\n      0.0,\n      1.0,\n      0.2235294117647059,\n      0.0823529412,\n      0.0,\n      1.0,\n      0.22745098039215686,\n      0.062745098,\n      0.0,\n      1.0,\n      0.23137254901960785,\n      0.0470588235,\n      0.0,\n      1.0,\n      0.23529411764705885,\n      0.0156862745,\n      0.0,\n      1.0,\n      0.23921568627450984,\n      0.0,\n      0.0,\n      1.0,\n      0.24313725490196078,\n      0.0,\n      0.0156862745,\n      1.0,\n      0.24705882352941178,\n      0.0,\n      0.031372549,\n      1.0,\n      0.25098039215686274,\n      0.0,\n      0.062745098,\n      1.0,\n      0.2549019607843137,\n      0.0,\n      0.0823529412,\n      1.0,\n      0.25882352941176473,\n      0.0,\n      0.0980392157,\n      1.0,\n      0.2627450980392157,\n      0.0,\n      0.1137254902,\n      1.0,\n      0.26666666666666666,\n      0.0,\n      0.1490196078,\n      1.0,\n      0.27058823529411763,\n      0.0,\n      0.1647058824,\n      1.0,\n      0.27450980392156865,\n      0.0,\n      0.1803921569,\n      1.0,\n      0.2784313725490196,\n      0.0,\n      0.2,\n      1.0,\n      0.2823529411764706,\n      0.0,\n      0.2156862745,\n      1.0,\n      0.28627450980392155,\n      0.0,\n      0.2470588235,\n      1.0,\n      0.2901960784313726,\n      0.0,\n      0.262745098,\n      1.0,\n      0.29411764705882354,\n      0.0,\n      0.2823529412,\n      1.0,\n      0.2980392156862745,\n      0.0,\n      0.2980392157,\n      1.0,\n      0.30196078431372547,\n      0.0,\n      0.3294117647,\n      1.0,\n      0.3058823529411765,\n      0.0,\n      0.3490196078,\n      1.0,\n      0.30980392156862746,\n      0.0,\n      0.3647058824,\n      1.0,\n      0.3137254901960784,\n      0.0,\n      0.3803921569,\n      1.0,\n      0.3176470588235294,\n      0.0,\n      0.4156862745,\n      1.0,\n      0.3215686274509804,\n      0.0,\n      0.431372549,\n      1.0,\n      0.3254901960784314,\n      0.0,\n      0.4470588235,\n      1.0,\n      0.32941176470588235,\n      0.0,\n      0.4666666667,\n      1.0,\n      0.3333333333333333,\n      0.0,\n      0.4980392157,\n      1.0,\n      0.33725490196078434,\n      0.0,\n      0.5137254902,\n      1.0,\n      0.3411764705882353,\n      0.0,\n      0.5294117647,\n      1.0,\n      0.34509803921568627,\n      0.0,\n      0.5490196078,\n      1.0,\n      0.34901960784313724,\n      0.0,\n      0.5647058824,\n      1.0,\n      0.35294117647058826,\n      0.0,\n      0.5960784314,\n      1.0,\n      0.3568627450980392,\n      0.0,\n      0.6156862745,\n      1.0,\n      0.3607843137254902,\n      0.0,\n      0.631372549,\n      1.0,\n      0.36470588235294116,\n      0.0,\n      0.6470588235,\n      1.0,\n      0.3686274509803922,\n      0.0,\n      0.6823529412,\n      1.0,\n      0.37254901960784315,\n      0.0,\n      0.6980392157,\n      1.0,\n      0.3764705882352941,\n      0.0,\n      0.7137254902,\n      1.0,\n      0.3803921568627451,\n      0.0,\n      0.7333333333,\n      1.0,\n      0.3843137254901961,\n      0.0,\n      0.7647058824,\n      1.0,\n      0.38823529411764707,\n      0.0,\n      0.7803921569,\n      1.0,\n      0.39215686274509803,\n      0.0,\n      0.7960784314,\n      1.0,\n      0.396078431372549,\n      0.0,\n      0.8156862745,\n      1.0,\n      0.4,\n      0.0,\n      0.8470588235,\n      1.0,\n      0.403921568627451,\n      0.0,\n      0.862745098,\n      1.0,\n      0.40784313725490196,\n      0.0,\n      0.8823529412,\n      1.0,\n      0.4117647058823529,\n      0.0,\n      0.8980392157,\n      1.0,\n      0.41568627450980394,\n      0.0,\n      0.9137254902,\n      1.0,\n      0.4196078431372549,\n      0.0,\n      0.9490196078,\n      1.0,\n      0.4235294117647059,\n      0.0,\n      0.9647058824,\n      1.0,\n      0.42745098039215684,\n      0.0,\n      0.9803921569,\n      1.0,\n      0.43137254901960786,\n      0.0,\n      1.0,\n      1.0,\n      0.43529411764705883,\n      0.0,\n      1.0,\n      0.9647058824,\n      0.4392156862745098,\n      0.0,\n      1.0,\n      0.9490196078,\n      0.44313725490196076,\n      0.0,\n      1.0,\n      0.9333333333,\n      0.4470588235294118,\n      0.0,\n      1.0,\n      0.9137254902,\n      0.45098039215686275,\n      0.0,\n      1.0,\n      0.8823529412,\n      0.4549019607843137,\n      0.0,\n      1.0,\n      0.862745098,\n      0.4588235294117647,\n      0.0,\n      1.0,\n      0.8470588235,\n      0.4627450980392157,\n      0.0,\n      1.0,\n      0.831372549,\n      0.4666666666666667,\n      0.0,\n      1.0,\n      0.7960784314,\n      0.4705882352941177,\n      0.0,\n      1.0,\n      0.7803921569,\n      0.4745098039215686,\n      0.0,\n      1.0,\n      0.7647058824,\n      0.4784313725490197,\n      0.0,\n      1.0,\n      0.7490196078,\n      0.48235294117647065,\n      0.0,\n      1.0,\n      0.7333333333,\n      0.48627450980392156,\n      0.0,\n      1.0,\n      0.6980392157,\n      0.49019607843137253,\n      0.0,\n      1.0,\n      0.6823529412,\n      0.49411764705882355,\n      0.0,\n      1.0,\n      0.6666666667,\n      0.4980392156862745,\n      0.0,\n      1.0,\n      0.6470588235,\n      0.5019607843137255,\n      0.0,\n      1.0,\n      0.6156862745,\n      0.5058823529411764,\n      0.0,\n      1.0,\n      0.5960784314,\n      0.5098039215686274,\n      0.0,\n      1.0,\n      0.5803921569,\n      0.5137254901960784,\n      0.0,\n      1.0,\n      0.5647058824,\n      0.5176470588235295,\n      0.0,\n      1.0,\n      0.5294117647,\n      0.5215686274509804,\n      0.0,\n      1.0,\n      0.5137254902,\n      0.5254901960784314,\n      0.0,\n      1.0,\n      0.4980392157,\n      0.5294117647058824,\n      0.0,\n      1.0,\n      0.4823529412,\n      0.5333333333333333,\n      0.0,\n      1.0,\n      0.4470588235,\n      0.5372549019607843,\n      0.0,\n      1.0,\n      0.431372549,\n      0.5411764705882353,\n      0.0,\n      1.0,\n      0.4156862745,\n      0.5450980392156862,\n      0.0,\n      1.0,\n      0.4,\n      0.5490196078431373,\n      0.0,\n      1.0,\n      0.3803921569,\n      0.5529411764705883,\n      0.0,\n      1.0,\n      0.3490196078,\n      0.5568627450980392,\n      0.0,\n      1.0,\n      0.3294117647,\n      0.5607843137254902,\n      0.0,\n      1.0,\n      0.3137254902,\n      0.5647058823529412,\n      0.0,\n      1.0,\n      0.2980392157,\n      0.5686274509803921,\n      0.0,\n      1.0,\n      0.262745098,\n      0.5725490196078431,\n      0.0,\n      1.0,\n      0.2470588235,\n      0.5764705882352941,\n      0.0,\n      1.0,\n      0.231372549,\n      0.5803921568627451,\n      0.0,\n      1.0,\n      0.2156862745,\n      0.5843137254901961,\n      0.0,\n      1.0,\n      0.1803921569,\n      0.5882352941176471,\n      0.0,\n      1.0,\n      0.1647058824,\n      0.592156862745098,\n      0.0,\n      1.0,\n      0.1490196078,\n      0.596078431372549,\n      0.0,\n      1.0,\n      0.1333333333,\n      0.6,\n      0.0,\n      1.0,\n      0.0980392157,\n      0.6039215686274509,\n      0.0,\n      1.0,\n      0.0823529412,\n      0.6078431372549019,\n      0.0,\n      1.0,\n      0.062745098,\n      0.611764705882353,\n      0.0,\n      1.0,\n      0.0470588235,\n      0.615686274509804,\n      0.0,\n      1.0,\n      0.031372549,\n      0.6196078431372549,\n      0.0,\n      1.0,\n      0.0,\n      0.6235294117647059,\n      0.0156862745,\n      1.0,\n      0.0,\n      0.6274509803921569,\n      0.031372549,\n      1.0,\n      0.0,\n      0.6313725490196078,\n      0.0470588235,\n      1.0,\n      0.0,\n      0.6352941176470588,\n      0.0823529412,\n      1.0,\n      0.0,\n      0.6392156862745098,\n      0.0980392157,\n      1.0,\n      0.0,\n      0.6431372549019608,\n      0.1137254902,\n      1.0,\n      0.0,\n      0.6470588235294118,\n      0.1294117647,\n      1.0,\n      0.0,\n      0.6509803921568628,\n      0.1647058824,\n      1.0,\n      0.0,\n      0.6549019607843137,\n      0.1803921569,\n      1.0,\n      0.0,\n      0.6588235294117647,\n      0.2,\n      1.0,\n      0.0,\n      0.6627450980392157,\n      0.2156862745,\n      1.0,\n      0.0,\n      0.6666666666666666,\n      0.2470588235,\n      1.0,\n      0.0,\n      0.6705882352941176,\n      0.262745098,\n      1.0,\n      0.0,\n      0.6745098039215687,\n      0.2823529412,\n      1.0,\n      0.0,\n      0.6784313725490196,\n      0.2980392157,\n      1.0,\n      0.0,\n      0.6823529411764706,\n      0.3137254902,\n      1.0,\n      0.0,\n      0.6862745098039216,\n      0.3490196078,\n      1.0,\n      0.0,\n      0.6901960784313725,\n      0.3647058824,\n      1.0,\n      0.0,\n      0.6941176470588235,\n      0.3803921569,\n      1.0,\n      0.0,\n      0.6980392156862745,\n      0.3960784314,\n      1.0,\n      0.0,\n      0.7019607843137254,\n      0.431372549,\n      1.0,\n      0.0,\n      0.7058823529411765,\n      0.4470588235,\n      1.0,\n      0.0,\n      0.7098039215686275,\n      0.4666666667,\n      1.0,\n      0.0,\n      0.7137254901960784,\n      0.4823529412,\n      1.0,\n      0.0,\n      0.7176470588235294,\n      0.5137254902,\n      1.0,\n      0.0,\n      0.7215686274509804,\n      0.5294117647,\n      1.0,\n      0.0,\n      0.7254901960784313,\n      0.5490196078,\n      1.0,\n      0.0,\n      0.7294117647058823,\n      0.5647058824,\n      1.0,\n      0.0,\n      0.7333333333333333,\n      0.6,\n      1.0,\n      0.0,\n      0.7372549019607844,\n      0.6156862745,\n      1.0,\n      0.0,\n      0.7411764705882353,\n      0.631372549,\n      1.0,\n      0.0,\n      0.7450980392156863,\n      0.6470588235,\n      1.0,\n      0.0,\n      0.7490196078431373,\n      0.662745098,\n      1.0,\n      0.0,\n      0.7529411764705882,\n      0.6980392157,\n      1.0,\n      0.0,\n      0.7568627450980392,\n      0.7137254902,\n      1.0,\n      0.0,\n      0.7607843137254902,\n      0.7333333333,\n      1.0,\n      0.0,\n      0.7647058823529411,\n      0.7490196078,\n      1.0,\n      0.0,\n      0.7686274509803922,\n      0.7803921569,\n      1.0,\n      0.0,\n      0.7725490196078432,\n      0.7960784314,\n      1.0,\n      0.0,\n      0.7764705882352941,\n      0.8156862745,\n      1.0,\n      0.0,\n      0.7803921568627451,\n      0.831372549,\n      1.0,\n      0.0,\n      0.7843137254901961,\n      0.8666666667,\n      1.0,\n      0.0,\n      0.788235294117647,\n      0.8823529412,\n      1.0,\n      0.0,\n      0.792156862745098,\n      0.8980392157,\n      1.0,\n      0.0,\n      0.796078431372549,\n      0.9137254902,\n      1.0,\n      0.0,\n      0.8,\n      0.9490196078,\n      1.0,\n      0.0,\n      0.803921568627451,\n      0.9647058824,\n      1.0,\n      0.0,\n      0.807843137254902,\n      0.9803921569,\n      1.0,\n      0.0,\n      0.8117647058823529,\n      1.0,\n      1.0,\n      0.0,\n      0.8156862745098039,\n      1.0,\n      0.9803921569,\n      0.0,\n      0.8196078431372549,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.8235294117647058,\n      1.0,\n      0.9333333333,\n      0.0,\n      0.8274509803921568,\n      1.0,\n      0.9137254902,\n      0.0,\n      0.8313725490196079,\n      1.0,\n      0.8980392157,\n      0.0,\n      0.8352941176470589,\n      1.0,\n      0.8666666667,\n      0.0,\n      0.8392156862745098,\n      1.0,\n      0.8470588235,\n      0.0,\n      0.8431372549019608,\n      1.0,\n      0.831372549,\n      0.0,\n      0.8470588235294118,\n      1.0,\n      0.8156862745,\n      0.0,\n      0.8509803921568627,\n      1.0,\n      0.7803921569,\n      0.0,\n      0.8549019607843137,\n      1.0,\n      0.7647058824,\n      0.0,\n      0.8588235294117647,\n      1.0,\n      0.7490196078,\n      0.0,\n      0.8627450980392157,\n      1.0,\n      0.7333333333,\n      0.0,\n      0.8666666666666667,\n      1.0,\n      0.6980392157,\n      0.0,\n      0.8705882352941177,\n      1.0,\n      0.6823529412,\n      0.0,\n      0.8745098039215686,\n      1.0,\n      0.6666666667,\n      0.0,\n      0.8784313725490196,\n      1.0,\n      0.6470588235,\n      0.0,\n      0.8823529411764706,\n      1.0,\n      0.631372549,\n      0.0,\n      0.8862745098039215,\n      1.0,\n      0.6,\n      0.0,\n      0.8901960784313725,\n      1.0,\n      0.5803921569,\n      0.0,\n      0.8941176470588236,\n      1.0,\n      0.5647058824,\n      0.0,\n      0.8980392156862745,\n      1.0,\n      0.5490196078,\n      0.0,\n      0.9019607843137255,\n      1.0,\n      0.5137254902,\n      0.0,\n      0.9058823529411765,\n      1.0,\n      0.4980392157,\n      0.0,\n      0.9098039215686274,\n      1.0,\n      0.4823529412,\n      0.0,\n      0.9137254901960784,\n      1.0,\n      0.4666666667,\n      0.0,\n      0.9176470588235294,\n      1.0,\n      0.431372549,\n      0.0,\n      0.9215686274509803,\n      1.0,\n      0.4156862745,\n      0.0,\n      0.9254901960784314,\n      1.0,\n      0.4,\n      0.0,\n      0.9294117647058824,\n      1.0,\n      0.3803921569,\n      0.0,\n      0.9333333333333333,\n      1.0,\n      0.3490196078,\n      0.0,\n      0.9372549019607843,\n      1.0,\n      0.3333333333,\n      0.0,\n      0.9411764705882354,\n      1.0,\n      0.3137254902,\n      0.0,\n      0.9450980392156864,\n      1.0,\n      0.2980392157,\n      0.0,\n      0.9490196078431372,\n      1.0,\n      0.2823529412,\n      0.0,\n      0.9529411764705882,\n      1.0,\n      0.2470588235,\n      0.0,\n      0.9568627450980394,\n      1.0,\n      0.231372549,\n      0.0,\n      0.9607843137254903,\n      1.0,\n      0.2156862745,\n      0.0,\n      0.9647058823529413,\n      1.0,\n      0.2,\n      0.0,\n      0.9686274509803922,\n      1.0,\n      0.1647058824,\n      0.0,\n      0.9725490196078431,\n      1.0,\n      0.1490196078,\n      0.0,\n      0.9764705882352941,\n      1.0,\n      0.1333333333,\n      0.0,\n      0.9803921568627451,\n      1.0,\n      0.1137254902,\n      0.0,\n      0.984313725490196,\n      1.0,\n      0.0823529412,\n      0.0,\n      0.9882352941176471,\n      1.0,\n      0.0666666667,\n      0.0,\n      0.9921568627450981,\n      1.0,\n      0.0470588235,\n      0.0,\n      0.996078431372549,\n      1.0,\n      0.031372549,\n      0.0,\n      1.0,\n      1.0,\n      0.0,\n      0.0,\n    ],\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'suv',\n    RGBPoints: [\n      0.0,\n      1.0,\n      1.0,\n      1.0,\n      0.00392156862745098,\n      1.0,\n      1.0,\n      1.0,\n      0.00784313725490196,\n      1.0,\n      1.0,\n      1.0,\n      0.011764705882352941,\n      1.0,\n      1.0,\n      1.0,\n      0.01568627450980392,\n      1.0,\n      1.0,\n      1.0,\n      0.0196078431372549,\n      1.0,\n      1.0,\n      1.0,\n      0.023529411764705882,\n      1.0,\n      1.0,\n      1.0,\n      0.027450980392156862,\n      1.0,\n      1.0,\n      1.0,\n      0.03137254901960784,\n      1.0,\n      1.0,\n      1.0,\n      0.03529411764705882,\n      1.0,\n      1.0,\n      1.0,\n      0.0392156862745098,\n      1.0,\n      1.0,\n      1.0,\n      0.043137254901960784,\n      1.0,\n      1.0,\n      1.0,\n      0.047058823529411764,\n      1.0,\n      1.0,\n      1.0,\n      0.050980392156862744,\n      1.0,\n      1.0,\n      1.0,\n      0.054901960784313725,\n      1.0,\n      1.0,\n      1.0,\n      0.05882352941176471,\n      1.0,\n      1.0,\n      1.0,\n      0.06274509803921569,\n      1.0,\n      1.0,\n      1.0,\n      0.06666666666666667,\n      1.0,\n      1.0,\n      1.0,\n      0.07058823529411765,\n      1.0,\n      1.0,\n      1.0,\n      0.07450980392156863,\n      1.0,\n      1.0,\n      1.0,\n      0.0784313725490196,\n      1.0,\n      1.0,\n      1.0,\n      0.08235294117647059,\n      1.0,\n      1.0,\n      1.0,\n      0.08627450980392157,\n      1.0,\n      1.0,\n      1.0,\n      0.09019607843137255,\n      1.0,\n      1.0,\n      1.0,\n      0.09411764705882353,\n      1.0,\n      1.0,\n      1.0,\n      0.09803921568627451,\n      1.0,\n      1.0,\n      1.0,\n      0.10196078431372549,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.10588235294117647,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.10980392156862745,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.11372549019607843,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.11764705882352942,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.12156862745098039,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.12549019607843137,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.12941176470588237,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.13333333333333333,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.13725490196078433,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.1411764705882353,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.1450980392156863,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.14901960784313725,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.15294117647058825,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.1568627450980392,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.1607843137254902,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.16470588235294117,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.16862745098039217,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.17254901960784313,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.17647058823529413,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.1803921568627451,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.1843137254901961,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.18823529411764706,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.19215686274509805,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.19607843137254902,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.2,\n      0.737254902,\n      0.737254902,\n      0.737254902,\n      0.20392156862745098,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.20784313725490197,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.21176470588235294,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.21568627450980393,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.2196078431372549,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.2235294117647059,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.22745098039215686,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.23137254901960785,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.23529411764705885,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.23921568627450984,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.24313725490196078,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.24705882352941178,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.25098039215686274,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.2549019607843137,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.25882352941176473,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.2627450980392157,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.26666666666666666,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.27058823529411763,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.27450980392156865,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.2784313725490196,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.2823529411764706,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.28627450980392155,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.2901960784313726,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.29411764705882354,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.2980392156862745,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.30196078431372547,\n      0.431372549,\n      0.0,\n      0.568627451,\n      0.3058823529411765,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.30980392156862746,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.3137254901960784,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.3176470588235294,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.3215686274509804,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.3254901960784314,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.32941176470588235,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.3333333333333333,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.33725490196078434,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.3411764705882353,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.34509803921568627,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.34901960784313724,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.35294117647058826,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.3568627450980392,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.3607843137254902,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.36470588235294116,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.3686274509803922,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.37254901960784315,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.3764705882352941,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.3803921568627451,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.3843137254901961,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.38823529411764707,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.39215686274509803,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.396078431372549,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.4,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.403921568627451,\n      0.2509803922,\n      0.3333333333,\n      0.6509803922,\n      0.40784313725490196,\n      0.0,\n      0.8,\n      1.0,\n      0.4117647058823529,\n      0.0,\n      0.8,\n      1.0,\n      0.41568627450980394,\n      0.0,\n      0.8,\n      1.0,\n      0.4196078431372549,\n      0.0,\n      0.8,\n      1.0,\n      0.4235294117647059,\n      0.0,\n      0.8,\n      1.0,\n      0.42745098039215684,\n      0.0,\n      0.8,\n      1.0,\n      0.43137254901960786,\n      0.0,\n      0.8,\n      1.0,\n      0.43529411764705883,\n      0.0,\n      0.8,\n      1.0,\n      0.4392156862745098,\n      0.0,\n      0.8,\n      1.0,\n      0.44313725490196076,\n      0.0,\n      0.8,\n      1.0,\n      0.4470588235294118,\n      0.0,\n      0.8,\n      1.0,\n      0.45098039215686275,\n      0.0,\n      0.8,\n      1.0,\n      0.4549019607843137,\n      0.0,\n      0.8,\n      1.0,\n      0.4588235294117647,\n      0.0,\n      0.8,\n      1.0,\n      0.4627450980392157,\n      0.0,\n      0.8,\n      1.0,\n      0.4666666666666667,\n      0.0,\n      0.8,\n      1.0,\n      0.4705882352941177,\n      0.0,\n      0.8,\n      1.0,\n      0.4745098039215686,\n      0.0,\n      0.8,\n      1.0,\n      0.4784313725490197,\n      0.0,\n      0.8,\n      1.0,\n      0.48235294117647065,\n      0.0,\n      0.8,\n      1.0,\n      0.48627450980392156,\n      0.0,\n      0.8,\n      1.0,\n      0.49019607843137253,\n      0.0,\n      0.8,\n      1.0,\n      0.49411764705882355,\n      0.0,\n      0.8,\n      1.0,\n      0.4980392156862745,\n      0.0,\n      0.8,\n      1.0,\n      0.5019607843137255,\n      0.0,\n      0.8,\n      1.0,\n      0.5058823529411764,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5098039215686274,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5137254901960784,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5176470588235295,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5215686274509804,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5254901960784314,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5294117647058824,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5333333333333333,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5372549019607843,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5411764705882353,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5450980392156862,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5490196078431373,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5529411764705883,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5568627450980392,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5607843137254902,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5647058823529412,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5686274509803921,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5725490196078431,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5764705882352941,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5803921568627451,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5843137254901961,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.5882352941176471,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.592156862745098,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.596078431372549,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.6,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.6039215686274509,\n      0.0,\n      0.6666666667,\n      0.5333333333,\n      0.6078431372549019,\n      0.4,\n      1.0,\n      0.4,\n      0.611764705882353,\n      0.4,\n      1.0,\n      0.4,\n      0.615686274509804,\n      0.4,\n      1.0,\n      0.4,\n      0.6196078431372549,\n      0.4,\n      1.0,\n      0.4,\n      0.6235294117647059,\n      0.4,\n      1.0,\n      0.4,\n      0.6274509803921569,\n      0.4,\n      1.0,\n      0.4,\n      0.6313725490196078,\n      0.4,\n      1.0,\n      0.4,\n      0.6352941176470588,\n      0.4,\n      1.0,\n      0.4,\n      0.6392156862745098,\n      0.4,\n      1.0,\n      0.4,\n      0.6431372549019608,\n      0.4,\n      1.0,\n      0.4,\n      0.6470588235294118,\n      0.4,\n      1.0,\n      0.4,\n      0.6509803921568628,\n      0.4,\n      1.0,\n      0.4,\n      0.6549019607843137,\n      0.4,\n      1.0,\n      0.4,\n      0.6588235294117647,\n      0.4,\n      1.0,\n      0.4,\n      0.6627450980392157,\n      0.4,\n      1.0,\n      0.4,\n      0.6666666666666666,\n      0.4,\n      1.0,\n      0.4,\n      0.6705882352941176,\n      0.4,\n      1.0,\n      0.4,\n      0.6745098039215687,\n      0.4,\n      1.0,\n      0.4,\n      0.6784313725490196,\n      0.4,\n      1.0,\n      0.4,\n      0.6823529411764706,\n      0.4,\n      1.0,\n      0.4,\n      0.6862745098039216,\n      0.4,\n      1.0,\n      0.4,\n      0.6901960784313725,\n      0.4,\n      1.0,\n      0.4,\n      0.6941176470588235,\n      0.4,\n      1.0,\n      0.4,\n      0.6980392156862745,\n      0.4,\n      1.0,\n      0.4,\n      0.7019607843137254,\n      0.4,\n      1.0,\n      0.4,\n      0.7058823529411765,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7098039215686275,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7137254901960784,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7176470588235294,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7215686274509804,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7254901960784313,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7294117647058823,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7333333333333333,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7372549019607844,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7411764705882353,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7450980392156863,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7490196078431373,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7529411764705882,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7568627450980392,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7607843137254902,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7647058823529411,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7686274509803922,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7725490196078432,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7764705882352941,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7803921568627451,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.7843137254901961,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.788235294117647,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.792156862745098,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.796078431372549,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.8,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.803921568627451,\n      1.0,\n      0.9490196078,\n      0.0,\n      0.807843137254902,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8117647058823529,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8156862745098039,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8196078431372549,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8235294117647058,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8274509803921568,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8313725490196079,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8352941176470589,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8392156862745098,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8431372549019608,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8470588235294118,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8509803921568627,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8549019607843137,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8588235294117647,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8627450980392157,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8666666666666667,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8705882352941177,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8745098039215686,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8784313725490196,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8823529411764706,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8862745098039215,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8901960784313725,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8941176470588236,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.8980392156862745,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.9019607843137255,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.9058823529411765,\n      0.9490196078,\n      0.6509803922,\n      0.2509803922,\n      0.9098039215686274,\n      1.0,\n      0.0,\n      0.0,\n      0.9137254901960784,\n      1.0,\n      0.0,\n      0.0,\n      0.9176470588235294,\n      1.0,\n      0.0,\n      0.0,\n      0.9215686274509803,\n      1.0,\n      0.0,\n      0.0,\n      0.9254901960784314,\n      1.0,\n      0.0,\n      0.0,\n      0.9294117647058824,\n      1.0,\n      0.0,\n      0.0,\n      0.9333333333333333,\n      1.0,\n      0.0,\n      0.0,\n      0.9372549019607843,\n      1.0,\n      0.0,\n      0.0,\n      0.9411764705882354,\n      1.0,\n      0.0,\n      0.0,\n      0.9450980392156864,\n      1.0,\n      0.0,\n      0.0,\n      0.9490196078431372,\n      1.0,\n      0.0,\n      0.0,\n      0.9529411764705882,\n      1.0,\n      0.0,\n      0.0,\n      0.9568627450980394,\n      1.0,\n      0.0,\n      0.0,\n      0.9607843137254903,\n      1.0,\n      0.0,\n      0.0,\n      0.9647058823529413,\n      1.0,\n      0.0,\n      0.0,\n      0.9686274509803922,\n      1.0,\n      0.0,\n      0.0,\n      0.9725490196078431,\n      1.0,\n      0.0,\n      0.0,\n      0.9764705882352941,\n      1.0,\n      0.0,\n      0.0,\n      0.9803921568627451,\n      1.0,\n      0.0,\n      0.0,\n      0.984313725490196,\n      1.0,\n      0.0,\n      0.0,\n      0.9882352941176471,\n      1.0,\n      0.0,\n      0.0,\n      0.9921568627450981,\n      1.0,\n      0.0,\n      0.0,\n      0.996078431372549,\n      1.0,\n      0.0,\n      0.0,\n      1.0,\n      1.0,\n      0.0,\n      0.0,\n    ],\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'ge_256',\n    RGBPoints: [\n      0.0,\n      0.0039215686,\n      0.0078431373,\n      0.0078431373,\n      0.00392156862745098,\n      0.0039215686,\n      0.0078431373,\n      0.0078431373,\n      0.00784313725490196,\n      0.0039215686,\n      0.0078431373,\n      0.0117647059,\n      0.011764705882352941,\n      0.0039215686,\n      0.0117647059,\n      0.0156862745,\n      0.01568627450980392,\n      0.0039215686,\n      0.0117647059,\n      0.0196078431,\n      0.0196078431372549,\n      0.0039215686,\n      0.0156862745,\n      0.0235294118,\n      0.023529411764705882,\n      0.0039215686,\n      0.0156862745,\n      0.0274509804,\n      0.027450980392156862,\n      0.0039215686,\n      0.0196078431,\n      0.031372549,\n      0.03137254901960784,\n      0.0039215686,\n      0.0196078431,\n      0.0352941176,\n      0.03529411764705882,\n      0.0039215686,\n      0.0235294118,\n      0.0392156863,\n      0.0392156862745098,\n      0.0039215686,\n      0.0235294118,\n      0.0431372549,\n      0.043137254901960784,\n      0.0039215686,\n      0.0274509804,\n      0.0470588235,\n      0.047058823529411764,\n      0.0039215686,\n      0.0274509804,\n      0.0509803922,\n      0.050980392156862744,\n      0.0039215686,\n      0.031372549,\n      0.0549019608,\n      0.054901960784313725,\n      0.0039215686,\n      0.031372549,\n      0.0588235294,\n      0.05882352941176471,\n      0.0039215686,\n      0.0352941176,\n      0.062745098,\n      0.06274509803921569,\n      0.0039215686,\n      0.0352941176,\n      0.0666666667,\n      0.06666666666666667,\n      0.0039215686,\n      0.0392156863,\n      0.0705882353,\n      0.07058823529411765,\n      0.0039215686,\n      0.0392156863,\n      0.0745098039,\n      0.07450980392156863,\n      0.0039215686,\n      0.0431372549,\n      0.0784313725,\n      0.0784313725490196,\n      0.0039215686,\n      0.0431372549,\n      0.0823529412,\n      0.08235294117647059,\n      0.0039215686,\n      0.0470588235,\n      0.0862745098,\n      0.08627450980392157,\n      0.0039215686,\n      0.0470588235,\n      0.0901960784,\n      0.09019607843137255,\n      0.0039215686,\n      0.0509803922,\n      0.0941176471,\n      0.09411764705882353,\n      0.0039215686,\n      0.0509803922,\n      0.0980392157,\n      0.09803921568627451,\n      0.0039215686,\n      0.0549019608,\n      0.1019607843,\n      0.10196078431372549,\n      0.0039215686,\n      0.0549019608,\n      0.1058823529,\n      0.10588235294117647,\n      0.0039215686,\n      0.0588235294,\n      0.1098039216,\n      0.10980392156862745,\n      0.0039215686,\n      0.0588235294,\n      0.1137254902,\n      0.11372549019607843,\n      0.0039215686,\n      0.062745098,\n      0.1176470588,\n      0.11764705882352942,\n      0.0039215686,\n      0.062745098,\n      0.1215686275,\n      0.12156862745098039,\n      0.0039215686,\n      0.0666666667,\n      0.1254901961,\n      0.12549019607843137,\n      0.0039215686,\n      0.0666666667,\n      0.1294117647,\n      0.12941176470588237,\n      0.0039215686,\n      0.0705882353,\n      0.1333333333,\n      0.13333333333333333,\n      0.0039215686,\n      0.0705882353,\n      0.137254902,\n      0.13725490196078433,\n      0.0039215686,\n      0.0745098039,\n      0.1411764706,\n      0.1411764705882353,\n      0.0039215686,\n      0.0745098039,\n      0.1450980392,\n      0.1450980392156863,\n      0.0039215686,\n      0.0784313725,\n      0.1490196078,\n      0.14901960784313725,\n      0.0039215686,\n      0.0784313725,\n      0.1529411765,\n      0.15294117647058825,\n      0.0039215686,\n      0.0823529412,\n      0.1568627451,\n      0.1568627450980392,\n      0.0039215686,\n      0.0823529412,\n      0.1607843137,\n      0.1607843137254902,\n      0.0039215686,\n      0.0862745098,\n      0.1647058824,\n      0.16470588235294117,\n      0.0039215686,\n      0.0862745098,\n      0.168627451,\n      0.16862745098039217,\n      0.0039215686,\n      0.0901960784,\n      0.1725490196,\n      0.17254901960784313,\n      0.0039215686,\n      0.0901960784,\n      0.1764705882,\n      0.17647058823529413,\n      0.0039215686,\n      0.0941176471,\n      0.1803921569,\n      0.1803921568627451,\n      0.0039215686,\n      0.0941176471,\n      0.1843137255,\n      0.1843137254901961,\n      0.0039215686,\n      0.0980392157,\n      0.1882352941,\n      0.18823529411764706,\n      0.0039215686,\n      0.0980392157,\n      0.1921568627,\n      0.19215686274509805,\n      0.0039215686,\n      0.1019607843,\n      0.1960784314,\n      0.19607843137254902,\n      0.0039215686,\n      0.1019607843,\n      0.2,\n      0.2,\n      0.0039215686,\n      0.1058823529,\n      0.2039215686,\n      0.20392156862745098,\n      0.0039215686,\n      0.1058823529,\n      0.2078431373,\n      0.20784313725490197,\n      0.0039215686,\n      0.1098039216,\n      0.2117647059,\n      0.21176470588235294,\n      0.0039215686,\n      0.1098039216,\n      0.2156862745,\n      0.21568627450980393,\n      0.0039215686,\n      0.1137254902,\n      0.2196078431,\n      0.2196078431372549,\n      0.0039215686,\n      0.1137254902,\n      0.2235294118,\n      0.2235294117647059,\n      0.0039215686,\n      0.1176470588,\n      0.2274509804,\n      0.22745098039215686,\n      0.0039215686,\n      0.1176470588,\n      0.231372549,\n      0.23137254901960785,\n      0.0039215686,\n      0.1215686275,\n      0.2352941176,\n      0.23529411764705885,\n      0.0039215686,\n      0.1215686275,\n      0.2392156863,\n      0.23921568627450984,\n      0.0039215686,\n      0.1254901961,\n      0.2431372549,\n      0.24313725490196078,\n      0.0039215686,\n      0.1254901961,\n      0.2470588235,\n      0.24705882352941178,\n      0.0039215686,\n      0.1294117647,\n      0.2509803922,\n      0.25098039215686274,\n      0.0039215686,\n      0.1294117647,\n      0.2509803922,\n      0.2549019607843137,\n      0.0078431373,\n      0.1254901961,\n      0.2549019608,\n      0.25882352941176473,\n      0.0156862745,\n      0.1254901961,\n      0.2588235294,\n      0.2627450980392157,\n      0.0235294118,\n      0.1215686275,\n      0.262745098,\n      0.26666666666666666,\n      0.031372549,\n      0.1215686275,\n      0.2666666667,\n      0.27058823529411763,\n      0.0392156863,\n      0.1176470588,\n      0.2705882353,\n      0.27450980392156865,\n      0.0470588235,\n      0.1176470588,\n      0.2745098039,\n      0.2784313725490196,\n      0.0549019608,\n      0.1137254902,\n      0.2784313725,\n      0.2823529411764706,\n      0.062745098,\n      0.1137254902,\n      0.2823529412,\n      0.28627450980392155,\n      0.0705882353,\n      0.1098039216,\n      0.2862745098,\n      0.2901960784313726,\n      0.0784313725,\n      0.1098039216,\n      0.2901960784,\n      0.29411764705882354,\n      0.0862745098,\n      0.1058823529,\n      0.2941176471,\n      0.2980392156862745,\n      0.0941176471,\n      0.1058823529,\n      0.2980392157,\n      0.30196078431372547,\n      0.1019607843,\n      0.1019607843,\n      0.3019607843,\n      0.3058823529411765,\n      0.1098039216,\n      0.1019607843,\n      0.3058823529,\n      0.30980392156862746,\n      0.1176470588,\n      0.0980392157,\n      0.3098039216,\n      0.3137254901960784,\n      0.1254901961,\n      0.0980392157,\n      0.3137254902,\n      0.3176470588235294,\n      0.1333333333,\n      0.0941176471,\n      0.3176470588,\n      0.3215686274509804,\n      0.1411764706,\n      0.0941176471,\n      0.3215686275,\n      0.3254901960784314,\n      0.1490196078,\n      0.0901960784,\n      0.3254901961,\n      0.32941176470588235,\n      0.1568627451,\n      0.0901960784,\n      0.3294117647,\n      0.3333333333333333,\n      0.1647058824,\n      0.0862745098,\n      0.3333333333,\n      0.33725490196078434,\n      0.1725490196,\n      0.0862745098,\n      0.337254902,\n      0.3411764705882353,\n      0.1803921569,\n      0.0823529412,\n      0.3411764706,\n      0.34509803921568627,\n      0.1882352941,\n      0.0823529412,\n      0.3450980392,\n      0.34901960784313724,\n      0.1960784314,\n      0.0784313725,\n      0.3490196078,\n      0.35294117647058826,\n      0.2039215686,\n      0.0784313725,\n      0.3529411765,\n      0.3568627450980392,\n      0.2117647059,\n      0.0745098039,\n      0.3568627451,\n      0.3607843137254902,\n      0.2196078431,\n      0.0745098039,\n      0.3607843137,\n      0.36470588235294116,\n      0.2274509804,\n      0.0705882353,\n      0.3647058824,\n      0.3686274509803922,\n      0.2352941176,\n      0.0705882353,\n      0.368627451,\n      0.37254901960784315,\n      0.2431372549,\n      0.0666666667,\n      0.3725490196,\n      0.3764705882352941,\n      0.2509803922,\n      0.0666666667,\n      0.3764705882,\n      0.3803921568627451,\n      0.2549019608,\n      0.062745098,\n      0.3803921569,\n      0.3843137254901961,\n      0.262745098,\n      0.062745098,\n      0.3843137255,\n      0.38823529411764707,\n      0.2705882353,\n      0.0588235294,\n      0.3882352941,\n      0.39215686274509803,\n      0.2784313725,\n      0.0588235294,\n      0.3921568627,\n      0.396078431372549,\n      0.2862745098,\n      0.0549019608,\n      0.3960784314,\n      0.4,\n      0.2941176471,\n      0.0549019608,\n      0.4,\n      0.403921568627451,\n      0.3019607843,\n      0.0509803922,\n      0.4039215686,\n      0.40784313725490196,\n      0.3098039216,\n      0.0509803922,\n      0.4078431373,\n      0.4117647058823529,\n      0.3176470588,\n      0.0470588235,\n      0.4117647059,\n      0.41568627450980394,\n      0.3254901961,\n      0.0470588235,\n      0.4156862745,\n      0.4196078431372549,\n      0.3333333333,\n      0.0431372549,\n      0.4196078431,\n      0.4235294117647059,\n      0.3411764706,\n      0.0431372549,\n      0.4235294118,\n      0.42745098039215684,\n      0.3490196078,\n      0.0392156863,\n      0.4274509804,\n      0.43137254901960786,\n      0.3568627451,\n      0.0392156863,\n      0.431372549,\n      0.43529411764705883,\n      0.3647058824,\n      0.0352941176,\n      0.4352941176,\n      0.4392156862745098,\n      0.3725490196,\n      0.0352941176,\n      0.4392156863,\n      0.44313725490196076,\n      0.3803921569,\n      0.031372549,\n      0.4431372549,\n      0.4470588235294118,\n      0.3882352941,\n      0.031372549,\n      0.4470588235,\n      0.45098039215686275,\n      0.3960784314,\n      0.0274509804,\n      0.4509803922,\n      0.4549019607843137,\n      0.4039215686,\n      0.0274509804,\n      0.4549019608,\n      0.4588235294117647,\n      0.4117647059,\n      0.0235294118,\n      0.4588235294,\n      0.4627450980392157,\n      0.4196078431,\n      0.0235294118,\n      0.462745098,\n      0.4666666666666667,\n      0.4274509804,\n      0.0196078431,\n      0.4666666667,\n      0.4705882352941177,\n      0.4352941176,\n      0.0196078431,\n      0.4705882353,\n      0.4745098039215686,\n      0.4431372549,\n      0.0156862745,\n      0.4745098039,\n      0.4784313725490197,\n      0.4509803922,\n      0.0156862745,\n      0.4784313725,\n      0.48235294117647065,\n      0.4588235294,\n      0.0117647059,\n      0.4823529412,\n      0.48627450980392156,\n      0.4666666667,\n      0.0117647059,\n      0.4862745098,\n      0.49019607843137253,\n      0.4745098039,\n      0.0078431373,\n      0.4901960784,\n      0.49411764705882355,\n      0.4823529412,\n      0.0078431373,\n      0.4941176471,\n      0.4980392156862745,\n      0.4901960784,\n      0.0039215686,\n      0.4980392157,\n      0.5019607843137255,\n      0.4980392157,\n      0.0117647059,\n      0.4980392157,\n      0.5058823529411764,\n      0.5058823529,\n      0.0156862745,\n      0.4901960784,\n      0.5098039215686274,\n      0.5137254902,\n      0.0235294118,\n      0.4823529412,\n      0.5137254901960784,\n      0.5215686275,\n      0.0274509804,\n      0.4745098039,\n      0.5176470588235295,\n      0.5294117647,\n      0.0352941176,\n      0.4666666667,\n      0.5215686274509804,\n      0.537254902,\n      0.0392156863,\n      0.4588235294,\n      0.5254901960784314,\n      0.5450980392,\n      0.0470588235,\n      0.4509803922,\n      0.5294117647058824,\n      0.5529411765,\n      0.0509803922,\n      0.4431372549,\n      0.5333333333333333,\n      0.5607843137,\n      0.0588235294,\n      0.4352941176,\n      0.5372549019607843,\n      0.568627451,\n      0.062745098,\n      0.4274509804,\n      0.5411764705882353,\n      0.5764705882,\n      0.0705882353,\n      0.4196078431,\n      0.5450980392156862,\n      0.5843137255,\n      0.0745098039,\n      0.4117647059,\n      0.5490196078431373,\n      0.5921568627,\n      0.0823529412,\n      0.4039215686,\n      0.5529411764705883,\n      0.6,\n      0.0862745098,\n      0.3960784314,\n      0.5568627450980392,\n      0.6078431373,\n      0.0941176471,\n      0.3882352941,\n      0.5607843137254902,\n      0.6156862745,\n      0.0980392157,\n      0.3803921569,\n      0.5647058823529412,\n      0.6235294118,\n      0.1058823529,\n      0.3725490196,\n      0.5686274509803921,\n      0.631372549,\n      0.1098039216,\n      0.3647058824,\n      0.5725490196078431,\n      0.6392156863,\n      0.1176470588,\n      0.3568627451,\n      0.5764705882352941,\n      0.6470588235,\n      0.1215686275,\n      0.3490196078,\n      0.5803921568627451,\n      0.6549019608,\n      0.1294117647,\n      0.3411764706,\n      0.5843137254901961,\n      0.662745098,\n      0.1333333333,\n      0.3333333333,\n      0.5882352941176471,\n      0.6705882353,\n      0.1411764706,\n      0.3254901961,\n      0.592156862745098,\n      0.6784313725,\n      0.1450980392,\n      0.3176470588,\n      0.596078431372549,\n      0.6862745098,\n      0.1529411765,\n      0.3098039216,\n      0.6,\n      0.6941176471,\n      0.1568627451,\n      0.3019607843,\n      0.6039215686274509,\n      0.7019607843,\n      0.1647058824,\n      0.2941176471,\n      0.6078431372549019,\n      0.7098039216,\n      0.168627451,\n      0.2862745098,\n      0.611764705882353,\n      0.7176470588,\n      0.1764705882,\n      0.2784313725,\n      0.615686274509804,\n      0.7254901961,\n      0.1803921569,\n      0.2705882353,\n      0.6196078431372549,\n      0.7333333333,\n      0.1882352941,\n      0.262745098,\n      0.6235294117647059,\n      0.7411764706,\n      0.1921568627,\n      0.2549019608,\n      0.6274509803921569,\n      0.7490196078,\n      0.2,\n      0.2509803922,\n      0.6313725490196078,\n      0.7529411765,\n      0.2039215686,\n      0.2431372549,\n      0.6352941176470588,\n      0.7607843137,\n      0.2117647059,\n      0.2352941176,\n      0.6392156862745098,\n      0.768627451,\n      0.2156862745,\n      0.2274509804,\n      0.6431372549019608,\n      0.7764705882,\n      0.2235294118,\n      0.2196078431,\n      0.6470588235294118,\n      0.7843137255,\n      0.2274509804,\n      0.2117647059,\n      0.6509803921568628,\n      0.7921568627,\n      0.2352941176,\n      0.2039215686,\n      0.6549019607843137,\n      0.8,\n      0.2392156863,\n      0.1960784314,\n      0.6588235294117647,\n      0.8078431373,\n      0.2470588235,\n      0.1882352941,\n      0.6627450980392157,\n      0.8156862745,\n      0.2509803922,\n      0.1803921569,\n      0.6666666666666666,\n      0.8235294118,\n      0.2549019608,\n      0.1725490196,\n      0.6705882352941176,\n      0.831372549,\n      0.2588235294,\n      0.1647058824,\n      0.6745098039215687,\n      0.8392156863,\n      0.2666666667,\n      0.1568627451,\n      0.6784313725490196,\n      0.8470588235,\n      0.2705882353,\n      0.1490196078,\n      0.6823529411764706,\n      0.8549019608,\n      0.2784313725,\n      0.1411764706,\n      0.6862745098039216,\n      0.862745098,\n      0.2823529412,\n      0.1333333333,\n      0.6901960784313725,\n      0.8705882353,\n      0.2901960784,\n      0.1254901961,\n      0.6941176470588235,\n      0.8784313725,\n      0.2941176471,\n      0.1176470588,\n      0.6980392156862745,\n      0.8862745098,\n      0.3019607843,\n      0.1098039216,\n      0.7019607843137254,\n      0.8941176471,\n      0.3058823529,\n      0.1019607843,\n      0.7058823529411765,\n      0.9019607843,\n      0.3137254902,\n      0.0941176471,\n      0.7098039215686275,\n      0.9098039216,\n      0.3176470588,\n      0.0862745098,\n      0.7137254901960784,\n      0.9176470588,\n      0.3254901961,\n      0.0784313725,\n      0.7176470588235294,\n      0.9254901961,\n      0.3294117647,\n      0.0705882353,\n      0.7215686274509804,\n      0.9333333333,\n      0.337254902,\n      0.062745098,\n      0.7254901960784313,\n      0.9411764706,\n      0.3411764706,\n      0.0549019608,\n      0.7294117647058823,\n      0.9490196078,\n      0.3490196078,\n      0.0470588235,\n      0.7333333333333333,\n      0.9568627451,\n      0.3529411765,\n      0.0392156863,\n      0.7372549019607844,\n      0.9647058824,\n      0.3607843137,\n      0.031372549,\n      0.7411764705882353,\n      0.9725490196,\n      0.3647058824,\n      0.0235294118,\n      0.7450980392156863,\n      0.9803921569,\n      0.3725490196,\n      0.0156862745,\n      0.7490196078431373,\n      0.9882352941,\n      0.3725490196,\n      0.0039215686,\n      0.7529411764705882,\n      0.9960784314,\n      0.3843137255,\n      0.0156862745,\n      0.7568627450980392,\n      0.9960784314,\n      0.3921568627,\n      0.031372549,\n      0.7607843137254902,\n      0.9960784314,\n      0.4039215686,\n      0.0470588235,\n      0.7647058823529411,\n      0.9960784314,\n      0.4117647059,\n      0.062745098,\n      0.7686274509803922,\n      0.9960784314,\n      0.4235294118,\n      0.0784313725,\n      0.7725490196078432,\n      0.9960784314,\n      0.431372549,\n      0.0941176471,\n      0.7764705882352941,\n      0.9960784314,\n      0.4431372549,\n      0.1098039216,\n      0.7803921568627451,\n      0.9960784314,\n      0.4509803922,\n      0.1254901961,\n      0.7843137254901961,\n      0.9960784314,\n      0.462745098,\n      0.1411764706,\n      0.788235294117647,\n      0.9960784314,\n      0.4705882353,\n      0.1568627451,\n      0.792156862745098,\n      0.9960784314,\n      0.4823529412,\n      0.1725490196,\n      0.796078431372549,\n      0.9960784314,\n      0.4901960784,\n      0.1882352941,\n      0.8,\n      0.9960784314,\n      0.5019607843,\n      0.2039215686,\n      0.803921568627451,\n      0.9960784314,\n      0.5098039216,\n      0.2196078431,\n      0.807843137254902,\n      0.9960784314,\n      0.5215686275,\n      0.2352941176,\n      0.8117647058823529,\n      0.9960784314,\n      0.5294117647,\n      0.2509803922,\n      0.8156862745098039,\n      0.9960784314,\n      0.5411764706,\n      0.262745098,\n      0.8196078431372549,\n      0.9960784314,\n      0.5490196078,\n      0.2784313725,\n      0.8235294117647058,\n      0.9960784314,\n      0.5607843137,\n      0.2941176471,\n      0.8274509803921568,\n      0.9960784314,\n      0.568627451,\n      0.3098039216,\n      0.8313725490196079,\n      0.9960784314,\n      0.5803921569,\n      0.3254901961,\n      0.8352941176470589,\n      0.9960784314,\n      0.5882352941,\n      0.3411764706,\n      0.8392156862745098,\n      0.9960784314,\n      0.6,\n      0.3568627451,\n      0.8431372549019608,\n      0.9960784314,\n      0.6078431373,\n      0.3725490196,\n      0.8470588235294118,\n      0.9960784314,\n      0.6196078431,\n      0.3882352941,\n      0.8509803921568627,\n      0.9960784314,\n      0.6274509804,\n      0.4039215686,\n      0.8549019607843137,\n      0.9960784314,\n      0.6392156863,\n      0.4196078431,\n      0.8588235294117647,\n      0.9960784314,\n      0.6470588235,\n      0.4352941176,\n      0.8627450980392157,\n      0.9960784314,\n      0.6588235294,\n      0.4509803922,\n      0.8666666666666667,\n      0.9960784314,\n      0.6666666667,\n      0.4666666667,\n      0.8705882352941177,\n      0.9960784314,\n      0.6784313725,\n      0.4823529412,\n      0.8745098039215686,\n      0.9960784314,\n      0.6862745098,\n      0.4980392157,\n      0.8784313725490196,\n      0.9960784314,\n      0.6980392157,\n      0.5137254902,\n      0.8823529411764706,\n      0.9960784314,\n      0.7058823529,\n      0.5294117647,\n      0.8862745098039215,\n      0.9960784314,\n      0.7176470588,\n      0.5450980392,\n      0.8901960784313725,\n      0.9960784314,\n      0.7254901961,\n      0.5607843137,\n      0.8941176470588236,\n      0.9960784314,\n      0.737254902,\n      0.5764705882,\n      0.8980392156862745,\n      0.9960784314,\n      0.7450980392,\n      0.5921568627,\n      0.9019607843137255,\n      0.9960784314,\n      0.7529411765,\n      0.6078431373,\n      0.9058823529411765,\n      0.9960784314,\n      0.7607843137,\n      0.6235294118,\n      0.9098039215686274,\n      0.9960784314,\n      0.7725490196,\n      0.6392156863,\n      0.9137254901960784,\n      0.9960784314,\n      0.7803921569,\n      0.6549019608,\n      0.9176470588235294,\n      0.9960784314,\n      0.7921568627,\n      0.6705882353,\n      0.9215686274509803,\n      0.9960784314,\n      0.8,\n      0.6862745098,\n      0.9254901960784314,\n      0.9960784314,\n      0.8117647059,\n      0.7019607843,\n      0.9294117647058824,\n      0.9960784314,\n      0.8196078431,\n      0.7176470588,\n      0.9333333333333333,\n      0.9960784314,\n      0.831372549,\n      0.7333333333,\n      0.9372549019607843,\n      0.9960784314,\n      0.8392156863,\n      0.7490196078,\n      0.9411764705882354,\n      0.9960784314,\n      0.8509803922,\n      0.7607843137,\n      0.9450980392156864,\n      0.9960784314,\n      0.8588235294,\n      0.7764705882,\n      0.9490196078431372,\n      0.9960784314,\n      0.8705882353,\n      0.7921568627,\n      0.9529411764705882,\n      0.9960784314,\n      0.8784313725,\n      0.8078431373,\n      0.9568627450980394,\n      0.9960784314,\n      0.8901960784,\n      0.8235294118,\n      0.9607843137254903,\n      0.9960784314,\n      0.8980392157,\n      0.8392156863,\n      0.9647058823529413,\n      0.9960784314,\n      0.9098039216,\n      0.8549019608,\n      0.9686274509803922,\n      0.9960784314,\n      0.9176470588,\n      0.8705882353,\n      0.9725490196078431,\n      0.9960784314,\n      0.9294117647,\n      0.8862745098,\n      0.9764705882352941,\n      0.9960784314,\n      0.937254902,\n      0.9019607843,\n      0.9803921568627451,\n      0.9960784314,\n      0.9490196078,\n      0.9176470588,\n      0.984313725490196,\n      0.9960784314,\n      0.9568627451,\n      0.9333333333,\n      0.9882352941176471,\n      0.9960784314,\n      0.968627451,\n      0.9490196078,\n      0.9921568627450981,\n      0.9960784314,\n      0.9764705882,\n      0.9647058824,\n      0.996078431372549,\n      0.9960784314,\n      0.9882352941,\n      0.9803921569,\n      1.0,\n      0.9960784314,\n      0.9882352941,\n      0.9803921569,\n    ],\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'ge',\n    RGBPoints: [\n      0.0,\n      0.0078431373,\n      0.0078431373,\n      0.0078431373,\n      0.00392156862745098,\n      0.0078431373,\n      0.0078431373,\n      0.0078431373,\n      0.00784313725490196,\n      0.0078431373,\n      0.0078431373,\n      0.0078431373,\n      0.011764705882352941,\n      0.0078431373,\n      0.0078431373,\n      0.0078431373,\n      0.01568627450980392,\n      0.0078431373,\n      0.0078431373,\n      0.0078431373,\n      0.0196078431372549,\n      0.0078431373,\n      0.0078431373,\n      0.0078431373,\n      0.023529411764705882,\n      0.0078431373,\n      0.0078431373,\n      0.0078431373,\n      0.027450980392156862,\n      0.0078431373,\n      0.0078431373,\n      0.0078431373,\n      0.03137254901960784,\n      0.0078431373,\n      0.0078431373,\n      0.0078431373,\n      0.03529411764705882,\n      0.0078431373,\n      0.0078431373,\n      0.0078431373,\n      0.0392156862745098,\n      0.0078431373,\n      0.0078431373,\n      0.0078431373,\n      0.043137254901960784,\n      0.0078431373,\n      0.0078431373,\n      0.0078431373,\n      0.047058823529411764,\n      0.0078431373,\n      0.0078431373,\n      0.0078431373,\n      0.050980392156862744,\n      0.0078431373,\n      0.0078431373,\n      0.0078431373,\n      0.054901960784313725,\n      0.0078431373,\n      0.0078431373,\n      0.0078431373,\n      0.05882352941176471,\n      0.0117647059,\n      0.0078431373,\n      0.0078431373,\n      0.06274509803921569,\n      0.0078431373,\n      0.0156862745,\n      0.0156862745,\n      0.06666666666666667,\n      0.0078431373,\n      0.0235294118,\n      0.0235294118,\n      0.07058823529411765,\n      0.0078431373,\n      0.031372549,\n      0.031372549,\n      0.07450980392156863,\n      0.0078431373,\n      0.0392156863,\n      0.0392156863,\n      0.0784313725490196,\n      0.0078431373,\n      0.0470588235,\n      0.0470588235,\n      0.08235294117647059,\n      0.0078431373,\n      0.0549019608,\n      0.0549019608,\n      0.08627450980392157,\n      0.0078431373,\n      0.062745098,\n      0.062745098,\n      0.09019607843137255,\n      0.0078431373,\n      0.0705882353,\n      0.0705882353,\n      0.09411764705882353,\n      0.0078431373,\n      0.0784313725,\n      0.0784313725,\n      0.09803921568627451,\n      0.0078431373,\n      0.0901960784,\n      0.0862745098,\n      0.10196078431372549,\n      0.0078431373,\n      0.0980392157,\n      0.0941176471,\n      0.10588235294117647,\n      0.0078431373,\n      0.1058823529,\n      0.1019607843,\n      0.10980392156862745,\n      0.0078431373,\n      0.1137254902,\n      0.1098039216,\n      0.11372549019607843,\n      0.0078431373,\n      0.1215686275,\n      0.1176470588,\n      0.11764705882352942,\n      0.0078431373,\n      0.1294117647,\n      0.1254901961,\n      0.12156862745098039,\n      0.0078431373,\n      0.137254902,\n      0.1333333333,\n      0.12549019607843137,\n      0.0078431373,\n      0.1450980392,\n      0.1411764706,\n      0.12941176470588237,\n      0.0078431373,\n      0.1529411765,\n      0.1490196078,\n      0.13333333333333333,\n      0.0078431373,\n      0.1647058824,\n      0.1568627451,\n      0.13725490196078433,\n      0.0078431373,\n      0.1725490196,\n      0.1647058824,\n      0.1411764705882353,\n      0.0078431373,\n      0.1803921569,\n      0.1725490196,\n      0.1450980392156863,\n      0.0078431373,\n      0.1882352941,\n      0.1803921569,\n      0.14901960784313725,\n      0.0078431373,\n      0.1960784314,\n      0.1882352941,\n      0.15294117647058825,\n      0.0078431373,\n      0.2039215686,\n      0.1960784314,\n      0.1568627450980392,\n      0.0078431373,\n      0.2117647059,\n      0.2039215686,\n      0.1607843137254902,\n      0.0078431373,\n      0.2196078431,\n      0.2117647059,\n      0.16470588235294117,\n      0.0078431373,\n      0.2274509804,\n      0.2196078431,\n      0.16862745098039217,\n      0.0078431373,\n      0.2352941176,\n      0.2274509804,\n      0.17254901960784313,\n      0.0078431373,\n      0.2470588235,\n      0.2352941176,\n      0.17647058823529413,\n      0.0078431373,\n      0.2509803922,\n      0.2431372549,\n      0.1803921568627451,\n      0.0078431373,\n      0.2549019608,\n      0.2509803922,\n      0.1843137254901961,\n      0.0078431373,\n      0.262745098,\n      0.2509803922,\n      0.18823529411764706,\n      0.0078431373,\n      0.2705882353,\n      0.2588235294,\n      0.19215686274509805,\n      0.0078431373,\n      0.2784313725,\n      0.2666666667,\n      0.19607843137254902,\n      0.0078431373,\n      0.2862745098,\n      0.2745098039,\n      0.2,\n      0.0078431373,\n      0.2941176471,\n      0.2823529412,\n      0.20392156862745098,\n      0.0078431373,\n      0.3019607843,\n      0.2901960784,\n      0.20784313725490197,\n      0.0078431373,\n      0.3137254902,\n      0.2980392157,\n      0.21176470588235294,\n      0.0078431373,\n      0.3215686275,\n      0.3058823529,\n      0.21568627450980393,\n      0.0078431373,\n      0.3294117647,\n      0.3137254902,\n      0.2196078431372549,\n      0.0078431373,\n      0.337254902,\n      0.3215686275,\n      0.2235294117647059,\n      0.0078431373,\n      0.3450980392,\n      0.3294117647,\n      0.22745098039215686,\n      0.0078431373,\n      0.3529411765,\n      0.337254902,\n      0.23137254901960785,\n      0.0078431373,\n      0.3607843137,\n      0.3450980392,\n      0.23529411764705885,\n      0.0078431373,\n      0.368627451,\n      0.3529411765,\n      0.23921568627450984,\n      0.0078431373,\n      0.3764705882,\n      0.3607843137,\n      0.24313725490196078,\n      0.0078431373,\n      0.3843137255,\n      0.368627451,\n      0.24705882352941178,\n      0.0078431373,\n      0.3960784314,\n      0.3764705882,\n      0.25098039215686274,\n      0.0078431373,\n      0.4039215686,\n      0.3843137255,\n      0.2549019607843137,\n      0.0078431373,\n      0.4117647059,\n      0.3921568627,\n      0.25882352941176473,\n      0.0078431373,\n      0.4196078431,\n      0.4,\n      0.2627450980392157,\n      0.0078431373,\n      0.4274509804,\n      0.4078431373,\n      0.26666666666666666,\n      0.0078431373,\n      0.4352941176,\n      0.4156862745,\n      0.27058823529411763,\n      0.0078431373,\n      0.4431372549,\n      0.4235294118,\n      0.27450980392156865,\n      0.0078431373,\n      0.4509803922,\n      0.431372549,\n      0.2784313725490196,\n      0.0078431373,\n      0.4588235294,\n      0.4392156863,\n      0.2823529411764706,\n      0.0078431373,\n      0.4705882353,\n      0.4470588235,\n      0.28627450980392155,\n      0.0078431373,\n      0.4784313725,\n      0.4549019608,\n      0.2901960784313726,\n      0.0078431373,\n      0.4862745098,\n      0.462745098,\n      0.29411764705882354,\n      0.0078431373,\n      0.4941176471,\n      0.4705882353,\n      0.2980392156862745,\n      0.0078431373,\n      0.5019607843,\n      0.4784313725,\n      0.30196078431372547,\n      0.0117647059,\n      0.5098039216,\n      0.4862745098,\n      0.3058823529411765,\n      0.0196078431,\n      0.5019607843,\n      0.4941176471,\n      0.30980392156862746,\n      0.0274509804,\n      0.4941176471,\n      0.5058823529,\n      0.3137254901960784,\n      0.0352941176,\n      0.4862745098,\n      0.5137254902,\n      0.3176470588235294,\n      0.0431372549,\n      0.4784313725,\n      0.5215686275,\n      0.3215686274509804,\n      0.0509803922,\n      0.4705882353,\n      0.5294117647,\n      0.3254901960784314,\n      0.0588235294,\n      0.462745098,\n      0.537254902,\n      0.32941176470588235,\n      0.0666666667,\n      0.4549019608,\n      0.5450980392,\n      0.3333333333333333,\n      0.0745098039,\n      0.4470588235,\n      0.5529411765,\n      0.33725490196078434,\n      0.0823529412,\n      0.4392156863,\n      0.5607843137,\n      0.3411764705882353,\n      0.0901960784,\n      0.431372549,\n      0.568627451,\n      0.34509803921568627,\n      0.0980392157,\n      0.4235294118,\n      0.5764705882,\n      0.34901960784313724,\n      0.1058823529,\n      0.4156862745,\n      0.5843137255,\n      0.35294117647058826,\n      0.1137254902,\n      0.4078431373,\n      0.5921568627,\n      0.3568627450980392,\n      0.1215686275,\n      0.4,\n      0.6,\n      0.3607843137254902,\n      0.1294117647,\n      0.3921568627,\n      0.6078431373,\n      0.36470588235294116,\n      0.137254902,\n      0.3843137255,\n      0.6156862745,\n      0.3686274509803922,\n      0.1450980392,\n      0.3764705882,\n      0.6235294118,\n      0.37254901960784315,\n      0.1529411765,\n      0.368627451,\n      0.631372549,\n      0.3764705882352941,\n      0.1607843137,\n      0.3607843137,\n      0.6392156863,\n      0.3803921568627451,\n      0.168627451,\n      0.3529411765,\n      0.6470588235,\n      0.3843137254901961,\n      0.1764705882,\n      0.3450980392,\n      0.6549019608,\n      0.38823529411764707,\n      0.1843137255,\n      0.337254902,\n      0.662745098,\n      0.39215686274509803,\n      0.1921568627,\n      0.3294117647,\n      0.6705882353,\n      0.396078431372549,\n      0.2,\n      0.3215686275,\n      0.6784313725,\n      0.4,\n      0.2078431373,\n      0.3137254902,\n      0.6862745098,\n      0.403921568627451,\n      0.2156862745,\n      0.3058823529,\n      0.6941176471,\n      0.40784313725490196,\n      0.2235294118,\n      0.2980392157,\n      0.7019607843,\n      0.4117647058823529,\n      0.231372549,\n      0.2901960784,\n      0.7098039216,\n      0.41568627450980394,\n      0.2392156863,\n      0.2823529412,\n      0.7176470588,\n      0.4196078431372549,\n      0.2470588235,\n      0.2745098039,\n      0.7254901961,\n      0.4235294117647059,\n      0.2509803922,\n      0.2666666667,\n      0.7333333333,\n      0.42745098039215684,\n      0.2509803922,\n      0.2588235294,\n      0.7411764706,\n      0.43137254901960786,\n      0.2588235294,\n      0.2509803922,\n      0.7490196078,\n      0.43529411764705883,\n      0.2666666667,\n      0.2509803922,\n      0.7490196078,\n      0.4392156862745098,\n      0.2745098039,\n      0.2431372549,\n      0.7568627451,\n      0.44313725490196076,\n      0.2823529412,\n      0.2352941176,\n      0.7647058824,\n      0.4470588235294118,\n      0.2901960784,\n      0.2274509804,\n      0.7725490196,\n      0.45098039215686275,\n      0.2980392157,\n      0.2196078431,\n      0.7803921569,\n      0.4549019607843137,\n      0.3058823529,\n      0.2117647059,\n      0.7882352941,\n      0.4588235294117647,\n      0.3137254902,\n      0.2039215686,\n      0.7960784314,\n      0.4627450980392157,\n      0.3215686275,\n      0.1960784314,\n      0.8039215686,\n      0.4666666666666667,\n      0.3294117647,\n      0.1882352941,\n      0.8117647059,\n      0.4705882352941177,\n      0.337254902,\n      0.1803921569,\n      0.8196078431,\n      0.4745098039215686,\n      0.3450980392,\n      0.1725490196,\n      0.8274509804,\n      0.4784313725490197,\n      0.3529411765,\n      0.1647058824,\n      0.8352941176,\n      0.48235294117647065,\n      0.3607843137,\n      0.1568627451,\n      0.8431372549,\n      0.48627450980392156,\n      0.368627451,\n      0.1490196078,\n      0.8509803922,\n      0.49019607843137253,\n      0.3764705882,\n      0.1411764706,\n      0.8588235294,\n      0.49411764705882355,\n      0.3843137255,\n      0.1333333333,\n      0.8666666667,\n      0.4980392156862745,\n      0.3921568627,\n      0.1254901961,\n      0.8745098039,\n      0.5019607843137255,\n      0.4,\n      0.1176470588,\n      0.8823529412,\n      0.5058823529411764,\n      0.4078431373,\n      0.1098039216,\n      0.8901960784,\n      0.5098039215686274,\n      0.4156862745,\n      0.1019607843,\n      0.8980392157,\n      0.5137254901960784,\n      0.4235294118,\n      0.0941176471,\n      0.9058823529,\n      0.5176470588235295,\n      0.431372549,\n      0.0862745098,\n      0.9137254902,\n      0.5215686274509804,\n      0.4392156863,\n      0.0784313725,\n      0.9215686275,\n      0.5254901960784314,\n      0.4470588235,\n      0.0705882353,\n      0.9294117647,\n      0.5294117647058824,\n      0.4549019608,\n      0.062745098,\n      0.937254902,\n      0.5333333333333333,\n      0.462745098,\n      0.0549019608,\n      0.9450980392,\n      0.5372549019607843,\n      0.4705882353,\n      0.0470588235,\n      0.9529411765,\n      0.5411764705882353,\n      0.4784313725,\n      0.0392156863,\n      0.9607843137,\n      0.5450980392156862,\n      0.4862745098,\n      0.031372549,\n      0.968627451,\n      0.5490196078431373,\n      0.4941176471,\n      0.0235294118,\n      0.9764705882,\n      0.5529411764705883,\n      0.4980392157,\n      0.0156862745,\n      0.9843137255,\n      0.5568627450980392,\n      0.5058823529,\n      0.0078431373,\n      0.9921568627,\n      0.5607843137254902,\n      0.5137254902,\n      0.0156862745,\n      0.9803921569,\n      0.5647058823529412,\n      0.5215686275,\n      0.0235294118,\n      0.9647058824,\n      0.5686274509803921,\n      0.5294117647,\n      0.0352941176,\n      0.9490196078,\n      0.5725490196078431,\n      0.537254902,\n      0.0431372549,\n      0.9333333333,\n      0.5764705882352941,\n      0.5450980392,\n      0.0509803922,\n      0.9176470588,\n      0.5803921568627451,\n      0.5529411765,\n      0.062745098,\n      0.9019607843,\n      0.5843137254901961,\n      0.5607843137,\n      0.0705882353,\n      0.8862745098,\n      0.5882352941176471,\n      0.568627451,\n      0.0784313725,\n      0.8705882353,\n      0.592156862745098,\n      0.5764705882,\n      0.0901960784,\n      0.8549019608,\n      0.596078431372549,\n      0.5843137255,\n      0.0980392157,\n      0.8392156863,\n      0.6,\n      0.5921568627,\n      0.1098039216,\n      0.8235294118,\n      0.6039215686274509,\n      0.6,\n      0.1176470588,\n      0.8078431373,\n      0.6078431372549019,\n      0.6078431373,\n      0.1254901961,\n      0.7921568627,\n      0.611764705882353,\n      0.6156862745,\n      0.137254902,\n      0.7764705882,\n      0.615686274509804,\n      0.6235294118,\n      0.1450980392,\n      0.7607843137,\n      0.6196078431372549,\n      0.631372549,\n      0.1529411765,\n      0.7490196078,\n      0.6235294117647059,\n      0.6392156863,\n      0.1647058824,\n      0.737254902,\n      0.6274509803921569,\n      0.6470588235,\n      0.1725490196,\n      0.7215686275,\n      0.6313725490196078,\n      0.6549019608,\n      0.1843137255,\n      0.7058823529,\n      0.6352941176470588,\n      0.662745098,\n      0.1921568627,\n      0.6901960784,\n      0.6392156862745098,\n      0.6705882353,\n      0.2,\n      0.6745098039,\n      0.6431372549019608,\n      0.6784313725,\n      0.2117647059,\n      0.6588235294,\n      0.6470588235294118,\n      0.6862745098,\n      0.2196078431,\n      0.6431372549,\n      0.6509803921568628,\n      0.6941176471,\n      0.2274509804,\n      0.6274509804,\n      0.6549019607843137,\n      0.7019607843,\n      0.2392156863,\n      0.6117647059,\n      0.6588235294117647,\n      0.7098039216,\n      0.2470588235,\n      0.5960784314,\n      0.6627450980392157,\n      0.7176470588,\n      0.2509803922,\n      0.5803921569,\n      0.6666666666666666,\n      0.7254901961,\n      0.2588235294,\n      0.5647058824,\n      0.6705882352941176,\n      0.7333333333,\n      0.2666666667,\n      0.5490196078,\n      0.6745098039215687,\n      0.7411764706,\n      0.2784313725,\n      0.5333333333,\n      0.6784313725490196,\n      0.7490196078,\n      0.2862745098,\n      0.5176470588,\n      0.6823529411764706,\n      0.7490196078,\n      0.2941176471,\n      0.5019607843,\n      0.6862745098039216,\n      0.7529411765,\n      0.3058823529,\n      0.4862745098,\n      0.6901960784313725,\n      0.7607843137,\n      0.3137254902,\n      0.4705882353,\n      0.6941176470588235,\n      0.768627451,\n      0.3215686275,\n      0.4549019608,\n      0.6980392156862745,\n      0.7764705882,\n      0.3333333333,\n      0.4392156863,\n      0.7019607843137254,\n      0.7843137255,\n      0.3411764706,\n      0.4235294118,\n      0.7058823529411765,\n      0.7921568627,\n      0.3529411765,\n      0.4078431373,\n      0.7098039215686275,\n      0.8,\n      0.3607843137,\n      0.3921568627,\n      0.7137254901960784,\n      0.8078431373,\n      0.368627451,\n      0.3764705882,\n      0.7176470588235294,\n      0.8156862745,\n      0.3803921569,\n      0.3607843137,\n      0.7215686274509804,\n      0.8235294118,\n      0.3882352941,\n      0.3450980392,\n      0.7254901960784313,\n      0.831372549,\n      0.3960784314,\n      0.3294117647,\n      0.7294117647058823,\n      0.8392156863,\n      0.4078431373,\n      0.3137254902,\n      0.7333333333333333,\n      0.8470588235,\n      0.4156862745,\n      0.2980392157,\n      0.7372549019607844,\n      0.8549019608,\n      0.4274509804,\n      0.2823529412,\n      0.7411764705882353,\n      0.862745098,\n      0.4352941176,\n      0.2666666667,\n      0.7450980392156863,\n      0.8705882353,\n      0.4431372549,\n      0.2509803922,\n      0.7490196078431373,\n      0.8784313725,\n      0.4549019608,\n      0.2431372549,\n      0.7529411764705882,\n      0.8862745098,\n      0.462745098,\n      0.2274509804,\n      0.7568627450980392,\n      0.8941176471,\n      0.4705882353,\n      0.2117647059,\n      0.7607843137254902,\n      0.9019607843,\n      0.4823529412,\n      0.1960784314,\n      0.7647058823529411,\n      0.9098039216,\n      0.4901960784,\n      0.1803921569,\n      0.7686274509803922,\n      0.9176470588,\n      0.4980392157,\n      0.1647058824,\n      0.7725490196078432,\n      0.9254901961,\n      0.5098039216,\n      0.1490196078,\n      0.7764705882352941,\n      0.9333333333,\n      0.5176470588,\n      0.1333333333,\n      0.7803921568627451,\n      0.9411764706,\n      0.5294117647,\n      0.1176470588,\n      0.7843137254901961,\n      0.9490196078,\n      0.537254902,\n      0.1019607843,\n      0.788235294117647,\n      0.9568627451,\n      0.5450980392,\n      0.0862745098,\n      0.792156862745098,\n      0.9647058824,\n      0.5568627451,\n      0.0705882353,\n      0.796078431372549,\n      0.9725490196,\n      0.5647058824,\n      0.0549019608,\n      0.8,\n      0.9803921569,\n      0.5725490196,\n      0.0392156863,\n      0.803921568627451,\n      0.9882352941,\n      0.5843137255,\n      0.0235294118,\n      0.807843137254902,\n      0.9921568627,\n      0.5921568627,\n      0.0078431373,\n      0.8117647058823529,\n      0.9921568627,\n      0.6039215686,\n      0.0274509804,\n      0.8156862745098039,\n      0.9921568627,\n      0.6117647059,\n      0.0509803922,\n      0.8196078431372549,\n      0.9921568627,\n      0.6196078431,\n      0.0745098039,\n      0.8235294117647058,\n      0.9921568627,\n      0.631372549,\n      0.0980392157,\n      0.8274509803921568,\n      0.9921568627,\n      0.6392156863,\n      0.1215686275,\n      0.8313725490196079,\n      0.9921568627,\n      0.6470588235,\n      0.1411764706,\n      0.8352941176470589,\n      0.9921568627,\n      0.6588235294,\n      0.1647058824,\n      0.8392156862745098,\n      0.9921568627,\n      0.6666666667,\n      0.1882352941,\n      0.8431372549019608,\n      0.9921568627,\n      0.6784313725,\n      0.2117647059,\n      0.8470588235294118,\n      0.9921568627,\n      0.6862745098,\n      0.2352941176,\n      0.8509803921568627,\n      0.9921568627,\n      0.6941176471,\n      0.2509803922,\n      0.8549019607843137,\n      0.9921568627,\n      0.7058823529,\n      0.2705882353,\n      0.8588235294117647,\n      0.9921568627,\n      0.7137254902,\n      0.2941176471,\n      0.8627450980392157,\n      0.9921568627,\n      0.7215686275,\n      0.3176470588,\n      0.8666666666666667,\n      0.9921568627,\n      0.7333333333,\n      0.3411764706,\n      0.8705882352941177,\n      0.9921568627,\n      0.7411764706,\n      0.3647058824,\n      0.8745098039215686,\n      0.9921568627,\n      0.7490196078,\n      0.3843137255,\n      0.8784313725490196,\n      0.9921568627,\n      0.7529411765,\n      0.4078431373,\n      0.8823529411764706,\n      0.9921568627,\n      0.7607843137,\n      0.431372549,\n      0.8862745098039215,\n      0.9921568627,\n      0.7725490196,\n      0.4549019608,\n      0.8901960784313725,\n      0.9921568627,\n      0.7803921569,\n      0.4784313725,\n      0.8941176470588236,\n      0.9921568627,\n      0.7882352941,\n      0.4980392157,\n      0.8980392156862745,\n      0.9921568627,\n      0.8,\n      0.5215686275,\n      0.9019607843137255,\n      0.9921568627,\n      0.8078431373,\n      0.5450980392,\n      0.9058823529411765,\n      0.9921568627,\n      0.8156862745,\n      0.568627451,\n      0.9098039215686274,\n      0.9921568627,\n      0.8274509804,\n      0.5921568627,\n      0.9137254901960784,\n      0.9921568627,\n      0.8352941176,\n      0.6156862745,\n      0.9176470588235294,\n      0.9921568627,\n      0.8470588235,\n      0.6352941176,\n      0.9215686274509803,\n      0.9921568627,\n      0.8549019608,\n      0.6588235294,\n      0.9254901960784314,\n      0.9921568627,\n      0.862745098,\n      0.6823529412,\n      0.9294117647058824,\n      0.9921568627,\n      0.8745098039,\n      0.7058823529,\n      0.9333333333333333,\n      0.9921568627,\n      0.8823529412,\n      0.7294117647,\n      0.9372549019607843,\n      0.9921568627,\n      0.8901960784,\n      0.7490196078,\n      0.9411764705882354,\n      0.9921568627,\n      0.9019607843,\n      0.7647058824,\n      0.9450980392156864,\n      0.9921568627,\n      0.9098039216,\n      0.7882352941,\n      0.9490196078431372,\n      0.9921568627,\n      0.9215686275,\n      0.8117647059,\n      0.9529411764705882,\n      0.9921568627,\n      0.9294117647,\n      0.8352941176,\n      0.9568627450980394,\n      0.9921568627,\n      0.937254902,\n      0.8588235294,\n      0.9607843137254903,\n      0.9921568627,\n      0.9490196078,\n      0.8784313725,\n      0.9647058823529413,\n      0.9921568627,\n      0.9568627451,\n      0.9019607843,\n      0.9686274509803922,\n      0.9921568627,\n      0.9647058824,\n      0.9254901961,\n      0.9725490196078431,\n      0.9921568627,\n      0.9764705882,\n      0.9490196078,\n      0.9764705882352941,\n      0.9921568627,\n      0.9843137255,\n      0.9725490196,\n      0.9803921568627451,\n      0.9921568627,\n      0.9921568627,\n      0.9921568627,\n      0.984313725490196,\n      0.9921568627,\n      0.9921568627,\n      0.9921568627,\n      0.9882352941176471,\n      0.9921568627,\n      0.9921568627,\n      0.9921568627,\n      0.9921568627450981,\n      0.9921568627,\n      0.9921568627,\n      0.9921568627,\n      0.996078431372549,\n      0.9921568627,\n      0.9921568627,\n      0.9921568627,\n      1.0,\n      0.9921568627,\n      0.9921568627,\n      0.9921568627,\n    ],\n  },\n  {\n    ColorSpace: 'RGB',\n    Name: 'siemens',\n    RGBPoints: [\n      0.0,\n      0.0078431373,\n      0.0039215686,\n      0.1254901961,\n      0.00392156862745098,\n      0.0078431373,\n      0.0039215686,\n      0.1254901961,\n      0.00784313725490196,\n      0.0078431373,\n      0.0039215686,\n      0.1882352941,\n      0.011764705882352941,\n      0.0117647059,\n      0.0039215686,\n      0.2509803922,\n      0.01568627450980392,\n      0.0117647059,\n      0.0039215686,\n      0.3098039216,\n      0.0196078431372549,\n      0.0156862745,\n      0.0039215686,\n      0.3725490196,\n      0.023529411764705882,\n      0.0156862745,\n      0.0039215686,\n      0.3725490196,\n      0.027450980392156862,\n      0.0156862745,\n      0.0039215686,\n      0.3725490196,\n      0.03137254901960784,\n      0.0156862745,\n      0.0039215686,\n      0.3725490196,\n      0.03529411764705882,\n      0.0156862745,\n      0.0039215686,\n      0.3725490196,\n      0.0392156862745098,\n      0.0156862745,\n      0.0039215686,\n      0.3725490196,\n      0.043137254901960784,\n      0.0156862745,\n      0.0039215686,\n      0.3725490196,\n      0.047058823529411764,\n      0.0156862745,\n      0.0039215686,\n      0.3725490196,\n      0.050980392156862744,\n      0.0156862745,\n      0.0039215686,\n      0.3725490196,\n      0.054901960784313725,\n      0.0156862745,\n      0.0039215686,\n      0.3725490196,\n      0.05882352941176471,\n      0.0156862745,\n      0.0039215686,\n      0.3725490196,\n      0.06274509803921569,\n      0.0156862745,\n      0.0039215686,\n      0.3882352941,\n      0.06666666666666667,\n      0.0156862745,\n      0.0039215686,\n      0.4078431373,\n      0.07058823529411765,\n      0.0156862745,\n      0.0039215686,\n      0.4235294118,\n      0.07450980392156863,\n      0.0156862745,\n      0.0039215686,\n      0.4431372549,\n      0.0784313725490196,\n      0.0156862745,\n      0.0039215686,\n      0.462745098,\n      0.08235294117647059,\n      0.0156862745,\n      0.0039215686,\n      0.4784313725,\n      0.08627450980392157,\n      0.0156862745,\n      0.0039215686,\n      0.4980392157,\n      0.09019607843137255,\n      0.0196078431,\n      0.0039215686,\n      0.5137254902,\n      0.09411764705882353,\n      0.0196078431,\n      0.0039215686,\n      0.5333333333,\n      0.09803921568627451,\n      0.0196078431,\n      0.0039215686,\n      0.5529411765,\n      0.10196078431372549,\n      0.0196078431,\n      0.0039215686,\n      0.568627451,\n      0.10588235294117647,\n      0.0196078431,\n      0.0039215686,\n      0.5882352941,\n      0.10980392156862745,\n      0.0196078431,\n      0.0039215686,\n      0.6039215686,\n      0.11372549019607843,\n      0.0196078431,\n      0.0039215686,\n      0.6235294118,\n      0.11764705882352942,\n      0.0196078431,\n      0.0039215686,\n      0.6431372549,\n      0.12156862745098039,\n      0.0235294118,\n      0.0039215686,\n      0.6588235294,\n      0.12549019607843137,\n      0.0235294118,\n      0.0039215686,\n      0.6784313725,\n      0.12941176470588237,\n      0.0235294118,\n      0.0039215686,\n      0.6980392157,\n      0.13333333333333333,\n      0.0235294118,\n      0.0039215686,\n      0.7137254902,\n      0.13725490196078433,\n      0.0235294118,\n      0.0039215686,\n      0.7333333333,\n      0.1411764705882353,\n      0.0235294118,\n      0.0039215686,\n      0.7490196078,\n      0.1450980392156863,\n      0.0235294118,\n      0.0039215686,\n      0.7647058824,\n      0.14901960784313725,\n      0.0235294118,\n      0.0039215686,\n      0.7843137255,\n      0.15294117647058825,\n      0.0274509804,\n      0.0039215686,\n      0.8,\n      0.1568627450980392,\n      0.0274509804,\n      0.0039215686,\n      0.8196078431,\n      0.1607843137254902,\n      0.0274509804,\n      0.0039215686,\n      0.8352941176,\n      0.16470588235294117,\n      0.0274509804,\n      0.0039215686,\n      0.8549019608,\n      0.16862745098039217,\n      0.0274509804,\n      0.0039215686,\n      0.8745098039,\n      0.17254901960784313,\n      0.0274509804,\n      0.0039215686,\n      0.8901960784,\n      0.17647058823529413,\n      0.0274509804,\n      0.0039215686,\n      0.9098039216,\n      0.1803921568627451,\n      0.031372549,\n      0.0039215686,\n      0.9294117647,\n      0.1843137254901961,\n      0.031372549,\n      0.0039215686,\n      0.9254901961,\n      0.18823529411764706,\n      0.0509803922,\n      0.0039215686,\n      0.9098039216,\n      0.19215686274509805,\n      0.0705882353,\n      0.0039215686,\n      0.8901960784,\n      0.19607843137254902,\n      0.0901960784,\n      0.0039215686,\n      0.8705882353,\n      0.2,\n      0.1137254902,\n      0.0039215686,\n      0.8509803922,\n      0.20392156862745098,\n      0.1333333333,\n      0.0039215686,\n      0.831372549,\n      0.20784313725490197,\n      0.1529411765,\n      0.0039215686,\n      0.8117647059,\n      0.21176470588235294,\n      0.1725490196,\n      0.0039215686,\n      0.7921568627,\n      0.21568627450980393,\n      0.1960784314,\n      0.0039215686,\n      0.7725490196,\n      0.2196078431372549,\n      0.2156862745,\n      0.0039215686,\n      0.7529411765,\n      0.2235294117647059,\n      0.2352941176,\n      0.0039215686,\n      0.737254902,\n      0.22745098039215686,\n      0.2509803922,\n      0.0039215686,\n      0.7176470588,\n      0.23137254901960785,\n      0.2745098039,\n      0.0039215686,\n      0.6980392157,\n      0.23529411764705885,\n      0.2941176471,\n      0.0039215686,\n      0.6784313725,\n      0.23921568627450984,\n      0.3137254902,\n      0.0039215686,\n      0.6588235294,\n      0.24313725490196078,\n      0.3333333333,\n      0.0039215686,\n      0.6392156863,\n      0.24705882352941178,\n      0.3568627451,\n      0.0039215686,\n      0.6196078431,\n      0.25098039215686274,\n      0.3764705882,\n      0.0039215686,\n      0.6,\n      0.2549019607843137,\n      0.3960784314,\n      0.0039215686,\n      0.5803921569,\n      0.25882352941176473,\n      0.4156862745,\n      0.0039215686,\n      0.5607843137,\n      0.2627450980392157,\n      0.4392156863,\n      0.0039215686,\n      0.5411764706,\n      0.26666666666666666,\n      0.4588235294,\n      0.0039215686,\n      0.5215686275,\n      0.27058823529411763,\n      0.4784313725,\n      0.0039215686,\n      0.5019607843,\n      0.27450980392156865,\n      0.4980392157,\n      0.0039215686,\n      0.4823529412,\n      0.2784313725490196,\n      0.5215686275,\n      0.0039215686,\n      0.4666666667,\n      0.2823529411764706,\n      0.5411764706,\n      0.0039215686,\n      0.4470588235,\n      0.28627450980392155,\n      0.5607843137,\n      0.0039215686,\n      0.4274509804,\n      0.2901960784313726,\n      0.5803921569,\n      0.0039215686,\n      0.4078431373,\n      0.29411764705882354,\n      0.6039215686,\n      0.0039215686,\n      0.3882352941,\n      0.2980392156862745,\n      0.6235294118,\n      0.0039215686,\n      0.368627451,\n      0.30196078431372547,\n      0.6431372549,\n      0.0039215686,\n      0.3490196078,\n      0.3058823529411765,\n      0.662745098,\n      0.0039215686,\n      0.3294117647,\n      0.30980392156862746,\n      0.6862745098,\n      0.0039215686,\n      0.3098039216,\n      0.3137254901960784,\n      0.7058823529,\n      0.0039215686,\n      0.2901960784,\n      0.3176470588235294,\n      0.7254901961,\n      0.0039215686,\n      0.2705882353,\n      0.3215686274509804,\n      0.7450980392,\n      0.0039215686,\n      0.2509803922,\n      0.3254901960784314,\n      0.7647058824,\n      0.0039215686,\n      0.2352941176,\n      0.32941176470588235,\n      0.7843137255,\n      0.0039215686,\n      0.2156862745,\n      0.3333333333333333,\n      0.8039215686,\n      0.0039215686,\n      0.1960784314,\n      0.33725490196078434,\n      0.8235294118,\n      0.0039215686,\n      0.1764705882,\n      0.3411764705882353,\n      0.8470588235,\n      0.0039215686,\n      0.1568627451,\n      0.34509803921568627,\n      0.8666666667,\n      0.0039215686,\n      0.137254902,\n      0.34901960784313724,\n      0.8862745098,\n      0.0039215686,\n      0.1176470588,\n      0.35294117647058826,\n      0.9058823529,\n      0.0039215686,\n      0.0980392157,\n      0.3568627450980392,\n      0.9294117647,\n      0.0039215686,\n      0.0784313725,\n      0.3607843137254902,\n      0.9490196078,\n      0.0039215686,\n      0.0588235294,\n      0.36470588235294116,\n      0.968627451,\n      0.0039215686,\n      0.0392156863,\n      0.3686274509803922,\n      0.9921568627,\n      0.0039215686,\n      0.0235294118,\n      0.37254901960784315,\n      0.9529411765,\n      0.0039215686,\n      0.0588235294,\n      0.3764705882352941,\n      0.9529411765,\n      0.0078431373,\n      0.0549019608,\n      0.3803921568627451,\n      0.9529411765,\n      0.0156862745,\n      0.0549019608,\n      0.3843137254901961,\n      0.9529411765,\n      0.0235294118,\n      0.0549019608,\n      0.38823529411764707,\n      0.9529411765,\n      0.031372549,\n      0.0549019608,\n      0.39215686274509803,\n      0.9529411765,\n      0.0352941176,\n      0.0549019608,\n      0.396078431372549,\n      0.9529411765,\n      0.0431372549,\n      0.0549019608,\n      0.4,\n      0.9529411765,\n      0.0509803922,\n      0.0549019608,\n      0.403921568627451,\n      0.9529411765,\n      0.0588235294,\n      0.0549019608,\n      0.40784313725490196,\n      0.9529411765,\n      0.062745098,\n      0.0549019608,\n      0.4117647058823529,\n      0.9529411765,\n      0.0705882353,\n      0.0549019608,\n      0.41568627450980394,\n      0.9529411765,\n      0.0784313725,\n      0.0509803922,\n      0.4196078431372549,\n      0.9529411765,\n      0.0862745098,\n      0.0509803922,\n      0.4235294117647059,\n      0.9568627451,\n      0.0941176471,\n      0.0509803922,\n      0.42745098039215684,\n      0.9568627451,\n      0.0980392157,\n      0.0509803922,\n      0.43137254901960786,\n      0.9568627451,\n      0.1058823529,\n      0.0509803922,\n      0.43529411764705883,\n      0.9568627451,\n      0.1137254902,\n      0.0509803922,\n      0.4392156862745098,\n      0.9568627451,\n      0.1215686275,\n      0.0509803922,\n      0.44313725490196076,\n      0.9568627451,\n      0.1254901961,\n      0.0509803922,\n      0.4470588235294118,\n      0.9568627451,\n      0.1333333333,\n      0.0509803922,\n      0.45098039215686275,\n      0.9568627451,\n      0.1411764706,\n      0.0509803922,\n      0.4549019607843137,\n      0.9568627451,\n      0.1490196078,\n      0.0470588235,\n      0.4588235294117647,\n      0.9568627451,\n      0.1568627451,\n      0.0470588235,\n      0.4627450980392157,\n      0.9568627451,\n      0.1607843137,\n      0.0470588235,\n      0.4666666666666667,\n      0.9568627451,\n      0.168627451,\n      0.0470588235,\n      0.4705882352941177,\n      0.9607843137,\n      0.1764705882,\n      0.0470588235,\n      0.4745098039215686,\n      0.9607843137,\n      0.1843137255,\n      0.0470588235,\n      0.4784313725490197,\n      0.9607843137,\n      0.1882352941,\n      0.0470588235,\n      0.48235294117647065,\n      0.9607843137,\n      0.1960784314,\n      0.0470588235,\n      0.48627450980392156,\n      0.9607843137,\n      0.2039215686,\n      0.0470588235,\n      0.49019607843137253,\n      0.9607843137,\n      0.2117647059,\n      0.0470588235,\n      0.49411764705882355,\n      0.9607843137,\n      0.2196078431,\n      0.0431372549,\n      0.4980392156862745,\n      0.9607843137,\n      0.2235294118,\n      0.0431372549,\n      0.5019607843137255,\n      0.9607843137,\n      0.231372549,\n      0.0431372549,\n      0.5058823529411764,\n      0.9607843137,\n      0.2392156863,\n      0.0431372549,\n      0.5098039215686274,\n      0.9607843137,\n      0.2470588235,\n      0.0431372549,\n      0.5137254901960784,\n      0.9607843137,\n      0.2509803922,\n      0.0431372549,\n      0.5176470588235295,\n      0.9647058824,\n      0.2549019608,\n      0.0431372549,\n      0.5215686274509804,\n      0.9647058824,\n      0.262745098,\n      0.0431372549,\n      0.5254901960784314,\n      0.9647058824,\n      0.2705882353,\n      0.0431372549,\n      0.5294117647058824,\n      0.9647058824,\n      0.2745098039,\n      0.0431372549,\n      0.5333333333333333,\n      0.9647058824,\n      0.2823529412,\n      0.0392156863,\n      0.5372549019607843,\n      0.9647058824,\n      0.2901960784,\n      0.0392156863,\n      0.5411764705882353,\n      0.9647058824,\n      0.2980392157,\n      0.0392156863,\n      0.5450980392156862,\n      0.9647058824,\n      0.3058823529,\n      0.0392156863,\n      0.5490196078431373,\n      0.9647058824,\n      0.3098039216,\n      0.0392156863,\n      0.5529411764705883,\n      0.9647058824,\n      0.3176470588,\n      0.0392156863,\n      0.5568627450980392,\n      0.9647058824,\n      0.3254901961,\n      0.0392156863,\n      0.5607843137254902,\n      0.9647058824,\n      0.3333333333,\n      0.0392156863,\n      0.5647058823529412,\n      0.9647058824,\n      0.337254902,\n      0.0392156863,\n      0.5686274509803921,\n      0.968627451,\n      0.3450980392,\n      0.0392156863,\n      0.5725490196078431,\n      0.968627451,\n      0.3529411765,\n      0.0352941176,\n      0.5764705882352941,\n      0.968627451,\n      0.3607843137,\n      0.0352941176,\n      0.5803921568627451,\n      0.968627451,\n      0.368627451,\n      0.0352941176,\n      0.5843137254901961,\n      0.968627451,\n      0.3725490196,\n      0.0352941176,\n      0.5882352941176471,\n      0.968627451,\n      0.3803921569,\n      0.0352941176,\n      0.592156862745098,\n      0.968627451,\n      0.3882352941,\n      0.0352941176,\n      0.596078431372549,\n      0.968627451,\n      0.3960784314,\n      0.0352941176,\n      0.6,\n      0.968627451,\n      0.4,\n      0.0352941176,\n      0.6039215686274509,\n      0.968627451,\n      0.4078431373,\n      0.0352941176,\n      0.6078431372549019,\n      0.968627451,\n      0.4156862745,\n      0.0352941176,\n      0.611764705882353,\n      0.968627451,\n      0.4235294118,\n      0.031372549,\n      0.615686274509804,\n      0.9725490196,\n      0.431372549,\n      0.031372549,\n      0.6196078431372549,\n      0.9725490196,\n      0.4352941176,\n      0.031372549,\n      0.6235294117647059,\n      0.9725490196,\n      0.4431372549,\n      0.031372549,\n      0.6274509803921569,\n      0.9725490196,\n      0.4509803922,\n      0.031372549,\n      0.6313725490196078,\n      0.9725490196,\n      0.4588235294,\n      0.031372549,\n      0.6352941176470588,\n      0.9725490196,\n      0.462745098,\n      0.031372549,\n      0.6392156862745098,\n      0.9725490196,\n      0.4705882353,\n      0.031372549,\n      0.6431372549019608,\n      0.9725490196,\n      0.4784313725,\n      0.031372549,\n      0.6470588235294118,\n      0.9725490196,\n      0.4862745098,\n      0.031372549,\n      0.6509803921568628,\n      0.9725490196,\n      0.4941176471,\n      0.0274509804,\n      0.6549019607843137,\n      0.9725490196,\n      0.4980392157,\n      0.0274509804,\n      0.6588235294117647,\n      0.9725490196,\n      0.5058823529,\n      0.0274509804,\n      0.6627450980392157,\n      0.9764705882,\n      0.5137254902,\n      0.0274509804,\n      0.6666666666666666,\n      0.9764705882,\n      0.5215686275,\n      0.0274509804,\n      0.6705882352941176,\n      0.9764705882,\n      0.5254901961,\n      0.0274509804,\n      0.6745098039215687,\n      0.9764705882,\n      0.5333333333,\n      0.0274509804,\n      0.6784313725490196,\n      0.9764705882,\n      0.5411764706,\n      0.0274509804,\n      0.6823529411764706,\n      0.9764705882,\n      0.5490196078,\n      0.0274509804,\n      0.6862745098039216,\n      0.9764705882,\n      0.5529411765,\n      0.0274509804,\n      0.6901960784313725,\n      0.9764705882,\n      0.5607843137,\n      0.0235294118,\n      0.6941176470588235,\n      0.9764705882,\n      0.568627451,\n      0.0235294118,\n      0.6980392156862745,\n      0.9764705882,\n      0.5764705882,\n      0.0235294118,\n      0.7019607843137254,\n      0.9764705882,\n      0.5843137255,\n      0.0235294118,\n      0.7058823529411765,\n      0.9764705882,\n      0.5882352941,\n      0.0235294118,\n      0.7098039215686275,\n      0.9764705882,\n      0.5960784314,\n      0.0235294118,\n      0.7137254901960784,\n      0.9803921569,\n      0.6039215686,\n      0.0235294118,\n      0.7176470588235294,\n      0.9803921569,\n      0.6117647059,\n      0.0235294118,\n      0.7215686274509804,\n      0.9803921569,\n      0.6156862745,\n      0.0235294118,\n      0.7254901960784313,\n      0.9803921569,\n      0.6235294118,\n      0.0235294118,\n      0.7294117647058823,\n      0.9803921569,\n      0.631372549,\n      0.0196078431,\n      0.7333333333333333,\n      0.9803921569,\n      0.6392156863,\n      0.0196078431,\n      0.7372549019607844,\n      0.9803921569,\n      0.6470588235,\n      0.0196078431,\n      0.7411764705882353,\n      0.9803921569,\n      0.6509803922,\n      0.0196078431,\n      0.7450980392156863,\n      0.9803921569,\n      0.6588235294,\n      0.0196078431,\n      0.7490196078431373,\n      0.9803921569,\n      0.6666666667,\n      0.0196078431,\n      0.7529411764705882,\n      0.9803921569,\n      0.6745098039,\n      0.0196078431,\n      0.7568627450980392,\n      0.9803921569,\n      0.6784313725,\n      0.0196078431,\n      0.7607843137254902,\n      0.9843137255,\n      0.6862745098,\n      0.0196078431,\n      0.7647058823529411,\n      0.9843137255,\n      0.6941176471,\n      0.0196078431,\n      0.7686274509803922,\n      0.9843137255,\n      0.7019607843,\n      0.0156862745,\n      0.7725490196078432,\n      0.9843137255,\n      0.7098039216,\n      0.0156862745,\n      0.7764705882352941,\n      0.9843137255,\n      0.7137254902,\n      0.0156862745,\n      0.7803921568627451,\n      0.9843137255,\n      0.7215686275,\n      0.0156862745,\n      0.7843137254901961,\n      0.9843137255,\n      0.7294117647,\n      0.0156862745,\n      0.788235294117647,\n      0.9843137255,\n      0.737254902,\n      0.0156862745,\n      0.792156862745098,\n      0.9843137255,\n      0.7411764706,\n      0.0156862745,\n      0.796078431372549,\n      0.9843137255,\n      0.7490196078,\n      0.0156862745,\n      0.8,\n      0.9843137255,\n      0.7529411765,\n      0.0156862745,\n      0.803921568627451,\n      0.9843137255,\n      0.7607843137,\n      0.0156862745,\n      0.807843137254902,\n      0.9882352941,\n      0.768627451,\n      0.0156862745,\n      0.8117647058823529,\n      0.9882352941,\n      0.768627451,\n      0.0156862745,\n      0.8156862745098039,\n      0.9843137255,\n      0.7843137255,\n      0.0117647059,\n      0.8196078431372549,\n      0.9843137255,\n      0.8,\n      0.0117647059,\n      0.8235294117647058,\n      0.9843137255,\n      0.8156862745,\n      0.0117647059,\n      0.8274509803921568,\n      0.9803921569,\n      0.831372549,\n      0.0117647059,\n      0.8313725490196079,\n      0.9803921569,\n      0.8431372549,\n      0.0117647059,\n      0.8352941176470589,\n      0.9803921569,\n      0.8588235294,\n      0.0078431373,\n      0.8392156862745098,\n      0.9803921569,\n      0.8745098039,\n      0.0078431373,\n      0.8431372549019608,\n      0.9764705882,\n      0.8901960784,\n      0.0078431373,\n      0.8470588235294118,\n      0.9764705882,\n      0.9058823529,\n      0.0078431373,\n      0.8509803921568627,\n      0.9764705882,\n      0.9176470588,\n      0.0078431373,\n      0.8549019607843137,\n      0.9764705882,\n      0.9333333333,\n      0.0039215686,\n      0.8588235294117647,\n      0.9725490196,\n      0.9490196078,\n      0.0039215686,\n      0.8627450980392157,\n      0.9725490196,\n      0.9647058824,\n      0.0039215686,\n      0.8666666666666667,\n      0.9725490196,\n      0.9803921569,\n      0.0039215686,\n      0.8705882352941177,\n      0.9725490196,\n      0.9960784314,\n      0.0039215686,\n      0.8745098039215686,\n      0.9725490196,\n      0.9960784314,\n      0.0039215686,\n      0.8784313725490196,\n      0.9725490196,\n      0.9960784314,\n      0.0352941176,\n      0.8823529411764706,\n      0.9725490196,\n      0.9960784314,\n      0.0666666667,\n      0.8862745098039215,\n      0.9725490196,\n      0.9960784314,\n      0.0980392157,\n      0.8901960784313725,\n      0.9725490196,\n      0.9960784314,\n      0.1294117647,\n      0.8941176470588236,\n      0.9725490196,\n      0.9960784314,\n      0.1647058824,\n      0.8980392156862745,\n      0.9764705882,\n      0.9960784314,\n      0.1960784314,\n      0.9019607843137255,\n      0.9764705882,\n      0.9960784314,\n      0.2274509804,\n      0.9058823529411765,\n      0.9764705882,\n      0.9960784314,\n      0.2549019608,\n      0.9098039215686274,\n      0.9764705882,\n      0.9960784314,\n      0.2901960784,\n      0.9137254901960784,\n      0.9764705882,\n      0.9960784314,\n      0.3215686275,\n      0.9176470588235294,\n      0.9803921569,\n      0.9960784314,\n      0.3529411765,\n      0.9215686274509803,\n      0.9803921569,\n      0.9960784314,\n      0.3843137255,\n      0.9254901960784314,\n      0.9803921569,\n      0.9960784314,\n      0.4156862745,\n      0.9294117647058824,\n      0.9803921569,\n      0.9960784314,\n      0.4509803922,\n      0.9333333333333333,\n      0.9803921569,\n      0.9960784314,\n      0.4823529412,\n      0.9372549019607843,\n      0.9843137255,\n      0.9960784314,\n      0.5137254902,\n      0.9411764705882354,\n      0.9843137255,\n      0.9960784314,\n      0.5450980392,\n      0.9450980392156864,\n      0.9843137255,\n      0.9960784314,\n      0.5803921569,\n      0.9490196078431372,\n      0.9843137255,\n      0.9960784314,\n      0.6117647059,\n      0.9529411764705882,\n      0.9843137255,\n      0.9960784314,\n      0.6431372549,\n      0.9568627450980394,\n      0.9882352941,\n      0.9960784314,\n      0.6745098039,\n      0.9607843137254903,\n      0.9882352941,\n      0.9960784314,\n      0.7058823529,\n      0.9647058823529413,\n      0.9882352941,\n      0.9960784314,\n      0.7411764706,\n      0.9686274509803922,\n      0.9882352941,\n      0.9960784314,\n      0.768627451,\n      0.9725490196078431,\n      0.9882352941,\n      0.9960784314,\n      0.8,\n      0.9764705882352941,\n      0.9921568627,\n      0.9960784314,\n      0.831372549,\n      0.9803921568627451,\n      0.9921568627,\n      0.9960784314,\n      0.8666666667,\n      0.984313725490196,\n      0.9921568627,\n      0.9960784314,\n      0.8980392157,\n      0.9882352941176471,\n      0.9921568627,\n      0.9960784314,\n      0.9294117647,\n      0.9921568627450981,\n      0.9921568627,\n      0.9960784314,\n      0.9607843137,\n      0.996078431372549,\n      0.9960784314,\n      0.9960784314,\n      0.9607843137,\n      1.0,\n      0.9960784314,\n      0.9960784314,\n      0.9607843137,\n    ],\n  },\n];\n","import {\n  addTool,\n  RectangleROIStartEndThresholdTool,\n} from '@cornerstonejs/tools';\nimport { utilities } from '@cornerstonejs/core';\n\nimport measurementServiceMappingsFactory from './utils/measurementServiceMappings/measurementServiceMappingsFactory';\nimport colormaps from './utils/colormaps';\n\nconst { registerColormap } = utilities.colormap;\n\nconst CORNERSTONE_3D_TOOLS_SOURCE_NAME = 'Cornerstone3DTools';\nconst CORNERSTONE_3D_TOOLS_SOURCE_VERSION = '0.1';\n/**\n *\n * @param {Object} servicesManager\n * @param {Object} configuration\n * @param {Object|Array} configuration.csToolsConfig\n */\nexport default function init({ servicesManager, extensionManager }) {\n  const {\n    measurementService,\n    displaySetService,\n    cornerstoneViewportService,\n  } = servicesManager.services;\n\n  addTool(RectangleROIStartEndThresholdTool);\n\n  const { RectangleROIStartEndThreshold } = measurementServiceMappingsFactory(\n    measurementService,\n    displaySetService,\n    cornerstoneViewportService\n  );\n\n  const csTools3DVer1MeasurementSource = measurementService.getSource(\n    CORNERSTONE_3D_TOOLS_SOURCE_NAME,\n    CORNERSTONE_3D_TOOLS_SOURCE_VERSION\n  );\n\n  measurementService.addMapping(\n    csTools3DVer1MeasurementSource,\n    'RectangleROIStartEndThreshold',\n    RectangleROIStartEndThreshold.matchingCriteria,\n    RectangleROIStartEndThreshold.toAnnotation,\n    RectangleROIStartEndThreshold.toMeasurement\n  );\n\n  colormaps.forEach(registerColormap);\n}\n","import * as csTools from '@cornerstonejs/tools';\n\nfunction getRoiStats(referencedVolume, annotations) {\n  // roiStats\n  const { imageData } = referencedVolume;\n  const values = imageData\n    .getPointData()\n    .getScalars()\n    .getData();\n\n  // Todo: add support for other strategies\n  const { fn, baseValue } = _getStrategyFn('max');\n  let value = baseValue;\n\n  const boundsIJK = csTools.utilities.rectangleROITool.getBoundsIJKFromRectangleAnnotations(\n    annotations,\n    referencedVolume\n  );\n\n  const [[iMin, iMax], [jMin, jMax], [kMin, kMax]] = boundsIJK;\n\n  for (let i = iMin; i <= iMax; i++) {\n    for (let j = jMin; j <= jMax; j++) {\n      for (let k = kMin; k <= kMax; k++) {\n        const offset = imageData.computeOffsetIndex([i, j, k]);\n        value = fn(values[offset], value);\n      }\n    }\n  }\n  return value;\n}\n\nfunction getThresholdValues(\n  annotationUIDs,\n  referencedVolumes,\n  config\n): { ptLower: number; ptUpper: number; ctLower: number; ctUpper: number } {\n  if (config.strategy === 'range') {\n    return {\n      ptLower: Number(config.ptLower),\n      ptUpper: Number(config.ptUpper),\n      ctLower: Number(config.ctLower),\n      ctUpper: Number(config.ctUpper),\n    };\n  }\n\n  const { weight } = config;\n  const annotations = annotationUIDs.map(annotationUID =>\n    csTools.annotation.state.getAnnotation(annotationUID)\n  );\n\n  const ptValue = getRoiStats(referencedVolumes[0], annotations);\n\n  return {\n    ctLower: -Infinity,\n    ctUpper: +Infinity,\n    ptLower: weight * ptValue,\n    ptUpper: +Infinity,\n  };\n}\n\nfunction _getStrategyFn(\n  statistic\n): { fn: (a: number, b: number) => number; baseValue: number } {\n  const baseValue = -Infinity;\n  const fn = (number, maxValue) => {\n    if (number > maxValue) {\n      maxValue = number;\n    }\n    return maxValue;\n  };\n  return { fn, baseValue };\n}\n\nexport default getThresholdValues;\n","import { Types } from '@cornerstonejs/core';\nimport { utilities } from '@cornerstonejs/tools';\nimport { vec3 } from 'gl-matrix';\n\ntype AnnotationsForThresholding = {\n  data: {\n    handles: {\n      points: Types.Point3[];\n    };\n    cachedStats?: {\n      projectionPoints?: Types.Point3[][];\n    };\n  };\n};\n\n/**\n * This method calculates the SUV peak on a segmented ROI from a reference PET\n * volume. If a rectangle annotation is provided, the peak is calculated within that\n * rectangle. Otherwise, the calculation is performed on the entire volume which\n * will be slower but same result.\n * @param viewport Viewport to use for the calculation\n * @param labelmap Labelmap from which the mask is taken\n * @param referenceVolume PET volume to use for SUV calculation\n * @param toolData [Optional] list of toolData to use for SUV calculation\n * @param segmentIndex The index of the segment to use for masking\n * @returns\n */\nfunction calculateSuvPeak(\n  labelmap: Types.IImageVolume,\n  referenceVolume: Types.IImageVolume,\n  annotations?: AnnotationsForThresholding[],\n  segmentIndex = 1\n): {\n  max: number;\n  maxIJK: Types.Point3;\n  maxLPS: Types.Point3;\n  mean: number;\n} {\n  if (referenceVolume.metadata.Modality !== 'PT') {\n    return;\n  }\n\n  if (labelmap.scalarData.length !== referenceVolume.scalarData.length) {\n    throw new Error(\n      'labelmap and referenceVolume must have the same number of pixels'\n    );\n  }\n\n  const {\n    scalarData: labelmapData,\n    dimensions,\n    imageData: labelmapImageData,\n  } = labelmap;\n\n  const {\n    scalarData: referenceVolumeData,\n    imageData: referenceVolumeImageData,\n  } = referenceVolume;\n\n  let boundsIJK;\n  // Todo: using the first annotation for now\n  if (annotations && annotations[0].data?.cachedStats) {\n    const { projectionPoints } = annotations[0].data.cachedStats;\n    const pointsToUse = [].concat(...projectionPoints); // cannot use flat() because of typescript compiler right now\n\n    const rectangleCornersIJK = pointsToUse.map(world => {\n      const ijk = vec3.fromValues(0, 0, 0);\n      referenceVolumeImageData.worldToIndex(world, ijk);\n      return ijk as Types.Point3;\n    });\n\n    boundsIJK = utilities.boundingBox.getBoundingBoxAroundShape(\n      rectangleCornersIJK,\n      dimensions\n    );\n  }\n\n  let max = 0;\n  let maxIJK = [0, 0, 0];\n  let maxLPS = [0, 0, 0];\n\n  const callback = ({ pointIJK, pointLPS }) => {\n    const offset = referenceVolumeImageData.computeOffsetIndex(pointIJK);\n    const value = labelmapData[offset];\n\n    if (value !== segmentIndex) {\n      return;\n    }\n\n    const referenceValue = referenceVolumeData[offset];\n\n    if (referenceValue > max) {\n      max = referenceValue;\n      maxIJK = pointIJK;\n      maxLPS = pointLPS;\n    }\n  };\n\n  utilities.pointInShapeCallback(\n    labelmapImageData,\n    () => true,\n    callback,\n    boundsIJK\n  );\n\n  const direction = labelmapImageData\n    .getDirection()\n    .slice(0, 3) as Types.Point3;\n\n  /**\n   * 2. Find the bottom and top of the great circle for the second sphere (1cc sphere)\n   * V = (4/3)πr3\n   */\n  const radius = Math.pow(1 / ((4 / 3) * Math.PI), 1 / 3) * 10;\n  const diameter = radius * 2;\n\n  const secondaryCircleWorld = vec3.create();\n  const bottomWorld = vec3.create();\n  const topWorld = vec3.create();\n  referenceVolumeImageData.indexToWorld(<vec3>maxIJK, secondaryCircleWorld);\n  vec3.scaleAndAdd(bottomWorld, secondaryCircleWorld, direction, -diameter / 2);\n  vec3.scaleAndAdd(topWorld, secondaryCircleWorld, direction, diameter / 2);\n  const suvPeakCirclePoints = [bottomWorld, topWorld] as [\n    Types.Point3,\n    Types.Point3\n  ];\n\n  /**\n   * 3. Find the Mean and Max of the 1cc sphere centered on the suv Max of the previous\n   * sphere\n   */\n  let count = 0;\n  let acc = 0;\n  const suvPeakMeanCallback = ({ value }) => {\n    acc += value;\n    count += 1;\n  };\n\n  utilities.pointInSurroundingSphereCallback(\n    referenceVolumeImageData,\n    suvPeakCirclePoints,\n    suvPeakMeanCallback\n  );\n\n  const mean = acc / count;\n\n  return {\n    max,\n    maxIJK,\n    maxLPS,\n    mean,\n  };\n}\n\nexport default calculateSuvPeak;\n","import { Types } from '@cornerstonejs/core';\nimport { utilities } from '@cornerstonejs/tools';\n\n/**\n * Given a list of labelmaps (with the possibility of overlapping regions),\n * and a referenceVolume, it calculates the total metabolic tumor volume (TMTV)\n * by flattening and rasterizing each segment into a single labelmap and summing\n * the total number of volume voxels. It should be noted that for this calculation\n * we do not double count voxels that are part of multiple labelmaps.\n * @param {} labelmaps\n * @param {number} segmentIndex\n * @returns {number} TMTV in ml\n */\nfunction calculateTMTV(\n  labelmaps: Array<Types.IImageVolume>,\n  segmentIndex = 1\n): number {\n  const volumeId = 'mergedLabelmap';\n\n  const mergedLabelmap = utilities.segmentation.createMergedLabelmapForIndex(\n    labelmaps,\n    segmentIndex,\n    volumeId\n  );\n\n  const { imageData, spacing } = mergedLabelmap;\n  const values = imageData\n    .getPointData()\n    .getScalars()\n    .getData();\n\n  // count non-zero values inside the outputData, this would\n  // consider the overlapping regions to be only counted once\n  const numVoxels = values.reduce((acc, curr) => {\n    if (curr > 0) {\n      return acc + 1;\n    }\n    return acc;\n  }, 0);\n\n  return 1e-3 * numVoxels * spacing[0] * spacing[1] * spacing[2];\n}\n\nexport default calculateTMTV;\n","// comment\nclass RectangleROIStartEndThreshold {\n  constructor() {}\n\n  static getContourSequence(toolData, metadataProvider) {\n    const { data } = toolData;\n    const { projectionPoints, projectionPointsImageIds } = data.cachedStats;\n\n    return projectionPoints.map((point, index) => {\n      const ContourData = getPointData(point);\n      const ContourImageSequence = getContourImageSequence(\n        projectionPointsImageIds[index],\n        metadataProvider\n      );\n\n      return {\n        NumberOfContourPoints: ContourData.length / 3,\n        ContourImageSequence,\n        ContourGeometricType: 'CLOSED_PLANAR',\n        ContourData,\n      };\n    });\n  }\n}\n\nRectangleROIStartEndThreshold.toolName = 'RectangleROIStartEndThreshold';\n\nfunction getPointData(points) {\n  // Since this is a closed contour, the order of the points is important.\n  // re-order the points to be in the correct order clockwise\n  // Spread to make sure Float32Arrays are converted to arrays\n  const orderedPoints = [\n    ...points[0],\n    ...points[1],\n    ...points[3],\n    ...points[2],\n  ];\n  const pointsArray = orderedPoints.flat();\n\n  // reduce the precision of the points to 2 decimal places\n  const pointsArrayWithPrecision = pointsArray.map(point => {\n    return point.toFixed(2);\n  });\n\n  return pointsArrayWithPrecision;\n}\n\nfunction getContourImageSequence(imageId, metadataProvider) {\n  const sopCommon = metadataProvider.get('sopCommonModule', imageId);\n\n  return {\n    ReferencedSOPClassUID: sopCommon.sopClassUID,\n    ReferencedSOPInstanceUID: sopCommon.sopInstanceUID,\n  };\n}\nexport default RectangleROIStartEndThreshold;\n","import RectangleROIStartEndThreshold from './RectangleROIStartEndThreshold';\n\nfunction validateAnnotation(annotation) {\n  if (!annotation?.data) {\n    throw new Error('Tool data is empty');\n  }\n\n  if (!annotation.metadata || annotation.metadata.referenceImageId) {\n    throw new Error('Tool data is not associated with any imageId');\n  }\n}\n\nclass AnnotationToPointData {\n  constructor() {}\n\n  static convert(annotation, index, metadataProvider) {\n    validateAnnotation(annotation);\n\n    const { toolName } = annotation.metadata;\n    const toolClass = AnnotationToPointData.TOOL_NAMES[toolName];\n\n    if (!toolClass) {\n      throw new Error(\n        `Unknown tool type: ${toolName}, cannot convert to RTSSReport`\n      );\n    }\n\n    // Each toolData should become a list of contours, ContourSequence\n    // contains a list of contours with their pointData, their geometry\n    // type and their length.\n    const ContourSequence = toolClass.getContourSequence(\n      annotation,\n      metadataProvider\n    );\n\n    // Todo: random rgb color for now, options should be passed in\n    const color = [\n      Math.floor(Math.random() * 255),\n      Math.floor(Math.random() * 255),\n      Math.floor(Math.random() * 255),\n    ];\n\n    return {\n      ReferencedROINumber: index + 1,\n      ROIDisplayColor: color,\n      ContourSequence,\n    };\n  }\n\n  static register(toolClass) {\n    AnnotationToPointData.TOOL_NAMES[toolClass.toolName] = toolClass;\n  }\n}\n\nAnnotationToPointData.TOOL_NAMES = {};\nAnnotationToPointData.register(RectangleROIStartEndThreshold);\n\nexport default AnnotationToPointData;\n","import AnnotationToPointData from './measurements/AnnotationToPointData';\nimport dcmjs from 'dcmjs';\nimport { DicomMetadataStore } from '@ohif/core';\n\nconst { DicomMetaDictionary } = dcmjs.data;\n\nexport default class RTSSReport {\n  constructor() {}\n\n  /**\n   * Convert handles to RTSSReport report object containing the dcmjs dicom dataset.\n   *\n   * Note: The tool data needs to be formatted in a specific way, and currently\n   * it is limited to the RectangleROIStartEndTool in the Cornerstone.\n   *\n   * @param annotations Array of Cornerstone tool annotation data\n   * @param metadataProvider Metadata provider\n   * @param options report generation options\n   * @returns Report object containing the dataset\n   */\n  static generateReport(annotations, metadataProvider, options) {\n    let dataset = initializeDataset(annotations, metadataProvider);\n\n    annotations.forEach((annotation, index) => {\n      const ContourSequence = AnnotationToPointData.convert(\n        annotation,\n        index,\n        metadataProvider,\n        options\n      );\n\n      dataset.StructureSetROISequence.push(\n        getStructureSetModule(annotation, index, metadataProvider)\n      );\n\n      dataset.ROIContourSequence.push(ContourSequence);\n      dataset.RTROIObservationsSequence.push(\n        getRTROIObservationsSequence(annotation, index, metadataProvider)\n      );\n\n      // ReferencedSeriesSequence\n      // Todo: handle more than one series\n      dataset.ReferencedSeriesSequence = getReferencedSeriesSequence(\n        annotation,\n        index,\n        metadataProvider\n      );\n\n      // ReferencedFrameOfReferenceSequence\n      dataset.ReferencedFrameOfReferenceSequence = getReferencedFrameOfReferenceSequence(\n        annotation,\n        metadataProvider,\n        dataset\n      );\n    });\n\n    const fileMetaInformationVersionArray = new Uint8Array(2);\n    fileMetaInformationVersionArray[1] = 1;\n\n    const _meta = {\n      FileMetaInformationVersion: {\n        Value: [fileMetaInformationVersionArray.buffer],\n        vr: 'OB',\n      },\n      TransferSyntaxUID: {\n        Value: ['1.2.840.10008.1.2.1'],\n        vr: 'UI',\n      },\n      ImplementationClassUID: {\n        Value: [DicomMetaDictionary.uid()], // TODO: could be git hash or other valid id\n        vr: 'UI',\n      },\n      ImplementationVersionName: {\n        Value: ['dcmjs'],\n        vr: 'SH',\n      },\n    };\n\n    dataset._meta = _meta;\n\n    return dataset;\n  }\n\n  /**\n   * Generate Cornerstone tool state from dataset\n   * @param {object} dataset dataset\n   * @param {object} hooks\n   * @param {function} hooks.getToolClass Function to map dataset to a tool class\n   * @returns\n   */\n  static generateToolState(dataset, hooks = {}) {\n    // Todo\n    console.warn('RTSSReport.generateToolState not implemented');\n  }\n}\n\nfunction initializeDataset(annotations, metadataProvider) {\n  const rtSOPInstanceUID = DicomMetaDictionary.uid();\n\n  // get the first annotation data\n  const {\n    referencedImageId: imageId,\n    FrameOfReferenceUID,\n  } = annotations[0].metadata;\n\n  const { studyInstanceUID } = metadataProvider.get(\n    'generalSeriesModule',\n    imageId\n  );\n\n  const patientModule = getPatientModule(imageId, metadataProvider);\n  const rtSeriesModule = getRTSeriesModule(imageId, metadataProvider);\n\n  return {\n    StructureSetROISequence: [],\n    ROIContourSequence: [],\n    RTROIObservationsSequence: [],\n    ReferencedSeriesSequence: [],\n    ReferencedFrameOfReferenceSequence: [],\n    ...patientModule,\n    ...rtSeriesModule,\n    StudyInstanceUID: studyInstanceUID,\n    SOPClassUID: '1.2.840.10008.5.1.4.1.1.481.3', // RT Structure Set Storage\n    SOPInstanceUID: rtSOPInstanceUID,\n    Manufacturer: 'dcmjs',\n    Modality: 'RTSTRUCT',\n    FrameOfReferenceUID,\n    PositionReferenceIndicator: '',\n    StructureSetLabel: '',\n    StructureSetName: '',\n    ReferringPhysicianName: '',\n    OperatorsName: '',\n    StructureSetDate: DicomMetaDictionary.date(),\n    StructureSetTime: DicomMetaDictionary.time(),\n  };\n}\n\nfunction getPatientModule(imageId, metadataProvider) {\n  const generalSeriesModule = metadataProvider.get(\n    'generalSeriesModule',\n    imageId\n  );\n  const generalStudyModule = metadataProvider.get(\n    'generalStudyModule',\n    imageId\n  );\n  const patientStudyModule = metadataProvider.get(\n    'patientStudyModule',\n    imageId\n  );\n  const patientModule = metadataProvider.get('patientModule', imageId);\n  const patientDemographicModule = metadataProvider.get(\n    'patientDemographicModule',\n    imageId\n  );\n\n  return {\n    Modality: generalSeriesModule.modality,\n    PatientID: patientModule.patientId,\n    PatientName: patientModule.patientName,\n    PatientBirthDate: '',\n    PatientAge: patientStudyModule.patientAge,\n    PatientSex: patientDemographicModule.patientSex,\n    PatientWeight: patientStudyModule.patientWeight,\n    StudyDate: generalStudyModule.studyDate,\n    StudyTime: generalStudyModule.studyTime,\n    StudyID: 'ToDo',\n    AccessionNumber: generalStudyModule.accessionNumber,\n  };\n}\n\nfunction getReferencedFrameOfReferenceSequence(\n  toolData,\n  metadataProvider,\n  dataset\n) {\n  const { referencedImageId: imageId, FrameOfReferenceUID } = toolData.metadata;\n  const instance = metadataProvider.get('instance', imageId);\n  const { SeriesInstanceUID } = instance;\n\n  const { ReferencedSeriesSequence } = dataset;\n\n  return [\n    {\n      FrameOfReferenceUID,\n      RTReferencedStudySequence: [\n        {\n          ReferencedSOPClassUID: dataset.SOPClassUID,\n          ReferencedSOPInstanceUID: dataset.SOPInstanceUID,\n          RTReferencedSeriesSequence: [\n            {\n              SeriesInstanceUID,\n              ContourImageSequence: [\n                ...ReferencedSeriesSequence[0].ReferencedInstanceSequence,\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ];\n}\n\nfunction getReferencedSeriesSequence(toolData, index, metadataProvider) {\n  // grab imageId from toolData\n  const { referencedImageId: imageId } = toolData.metadata;\n  const instance = metadataProvider.get('instance', imageId);\n  const { SeriesInstanceUID, StudyInstanceUID } = instance;\n\n  const ReferencedSeriesSequence = [];\n  if (SeriesInstanceUID) {\n    const series = DicomMetadataStore.getSeries(\n      StudyInstanceUID,\n      SeriesInstanceUID\n    );\n\n    const ReferencedSeries = {\n      SeriesInstanceUID,\n      ReferencedInstanceSequence: [],\n    };\n\n    series.instances.forEach(instance => {\n      const { SOPInstanceUID, SOPClassUID } = instance;\n      ReferencedSeries.ReferencedInstanceSequence.push({\n        ReferencedSOPClassUID: SOPClassUID,\n        ReferencedSOPInstanceUID: SOPInstanceUID,\n      });\n    });\n\n    ReferencedSeriesSequence.push(ReferencedSeries);\n  }\n\n  return ReferencedSeriesSequence;\n}\n\nfunction getRTSeriesModule(imageId, metadataProvider) {\n  return {\n    SeriesInstanceUID: DicomMetaDictionary.uid(), // generate a new series instance uid\n    SeriesNumber: '99', // Todo:: what should be the series number?\n  };\n}\n\nfunction getStructureSetModule(toolData, index, metadataProvider) {\n  const { FrameOfReferenceUID } = toolData.metadata;\n\n  return {\n    ROINumber: index + 1,\n    ROIName: `Todo: name ${index + 1}`,\n    ROIDescription: `Todo: description ${index + 1}`,\n    ROIGenerationAlgorithm: 'Todo: algorithm',\n    ReferencedFrameOfReferenceUID: FrameOfReferenceUID,\n  };\n}\n\nfunction getRTROIObservationsSequence(toolData, index, metadataProvider) {\n  return {\n    ObservationNumber: index + 1,\n    ReferencedROINumber: index + 1,\n    RTROIInterpretedType: 'Todo: type',\n    ROIInterpreter: 'Todo: interpreter',\n  };\n}\n","import RTSSReport from './RTSSReport';\nimport dcmjs from 'dcmjs';\nimport { classes } from '@ohif/core';\n\nconst { datasetToBlob } = dcmjs.data;\nconst metadataProvider = classes.MetadataProvider;\n\nexport default function dicomRTAnnotationExport(annotations) {\n  const dataset = RTSSReport.generateReport(annotations, metadataProvider);\n  const reportBlob = datasetToBlob(dataset);\n\n  //Create a URL for the binary.\n  var objectUrl = URL.createObjectURL(reportBlob);\n  window.location.assign(objectUrl);\n}\n","import dicomRTAnnotationExport from './dicomRTAnnotationExport';\n\nexport default dicomRTAnnotationExport;\n","import { vec3 } from 'gl-matrix';\nimport OHIF from '@ohif/core';\nimport * as cs from '@cornerstonejs/core';\nimport * as csTools from '@cornerstonejs/tools';\nimport { classes } from '@ohif/core';\nimport getThresholdValues from './utils/getThresholdValue';\nimport calculateSuvPeak from './utils/calculateSUVPeak';\nimport calculateTMTV from './utils/calculateTMTV';\nimport createAndDownloadTMTVReport from './utils/createAndDownloadTMTVReport';\n\nimport dicomRTAnnotationExport from './utils/dicomRTAnnotationExport/RTStructureSet';\n\nconst metadataProvider = classes.MetadataProvider;\nconst RECTANGLE_ROI_THRESHOLD_MANUAL = 'RectangleROIStartEndThreshold';\nconst LABELMAP = csTools.Enums.SegmentationRepresentations.Labelmap;\n\nconst commandsModule = ({\n  servicesManager,\n  commandsManager,\n  extensionManager,\n}) => {\n  const {\n    viewportGridService,\n    uiNotificationService,\n    displaySetService,\n    hangingProtocolService,\n    toolGroupService,\n    cornerstoneViewportService,\n    segmentationService,\n  } = servicesManager.services;\n\n  const utilityModule = extensionManager.getModuleEntry(\n    '@ohif/extension-cornerstone.utilityModule.common'\n  );\n\n  const { getEnabledElement } = utilityModule.exports;\n\n  function _getActiveViewportsEnabledElement() {\n    const { activeViewportIndex } = viewportGridService.getState();\n    const { element } = getEnabledElement(activeViewportIndex) || {};\n    const enabledElement = cs.getEnabledElement(element);\n    return enabledElement;\n  }\n\n  function _getMatchedViewportsToolGroupIds() {\n    const { viewportMatchDetails } = hangingProtocolService.getMatchDetails();\n    const toolGroupIds = [];\n    viewportMatchDetails.forEach((value, key) => {\n      const { viewportOptions } = value;\n      const { toolGroupId } = viewportOptions;\n      if (toolGroupIds.indexOf(toolGroupId) === -1) {\n        toolGroupIds.push(toolGroupId);\n      }\n    });\n\n    return toolGroupIds;\n  }\n\n  const actions = {\n    getMatchingPTDisplaySet: ({ viewportMatchDetails }) => {\n      // Todo: this is assuming that the hanging protocol has successfully matched\n      // the correct PT. For future, we should have a way to filter out the PTs\n      // that are in the viewer layout (but then we have the problem of the attenuation\n      // corrected PT vs the non-attenuation correct PT)\n\n      let ptDisplaySet = null;\n      for (const [viewportIndex, viewportDetails] of viewportMatchDetails) {\n        const { displaySetsInfo } = viewportDetails;\n        const displaySets = displaySetsInfo.map(({ displaySetInstanceUID }) =>\n          displaySetService.getDisplaySetByUID(displaySetInstanceUID)\n        );\n\n        if (!displaySets || displaySets.length === 0) {\n          continue;\n        }\n\n        ptDisplaySet = displaySets.find(\n          displaySet => displaySet.Modality === 'PT'\n        );\n\n        if (ptDisplaySet) {\n          break;\n        }\n      }\n\n      return ptDisplaySet;\n    },\n    getPTMetadata: ({ ptDisplaySet }) => {\n      const dataSource = extensionManager.getDataSources()[0];\n      const imageIds = dataSource.getImageIdsForDisplaySet(ptDisplaySet);\n\n      const firstImageId = imageIds[0];\n      const instance = metadataProvider.get('instance', firstImageId);\n      if (instance.Modality !== 'PT') {\n        return;\n      }\n\n      const metadata = {\n        SeriesTime: instance.SeriesTime,\n        Modality: instance.Modality,\n        PatientSex: instance.PatientSex,\n        PatientWeight: instance.PatientWeight,\n        RadiopharmaceuticalInformationSequence: {\n          RadionuclideTotalDose:\n            instance.RadiopharmaceuticalInformationSequence[0]\n              .RadionuclideTotalDose,\n          RadionuclideHalfLife:\n            instance.RadiopharmaceuticalInformationSequence[0]\n              .RadionuclideHalfLife,\n          RadiopharmaceuticalStartTime:\n            instance.RadiopharmaceuticalInformationSequence[0]\n              .RadiopharmaceuticalStartTime,\n          RadiopharmaceuticalStartDateTime:\n            instance.RadiopharmaceuticalInformationSequence[0]\n              .RadiopharmaceuticalStartDateTime,\n        },\n      };\n\n      return metadata;\n    },\n    createNewLabelmapFromPT: async () => {\n      // Create a segmentation of the same resolution as the source data\n      // using volumeLoader.createAndCacheDerivedVolume.\n      const { viewportMatchDetails } = hangingProtocolService.getMatchDetails();\n      const ptDisplaySet = actions.getMatchingPTDisplaySet({\n        viewportMatchDetails,\n      });\n\n      if (!ptDisplaySet) {\n        uiNotificationService.error('No matching PT display set found');\n        return;\n      }\n\n      const segmentationId = await segmentationService.createSegmentationForDisplaySet(\n        ptDisplaySet.displaySetInstanceUID\n      );\n\n      // Add Segmentation to all toolGroupIds in the viewer\n      const toolGroupIds = _getMatchedViewportsToolGroupIds();\n\n      const representationType = LABELMAP;\n\n      for (const toolGroupId of toolGroupIds) {\n        const hydrateSegmentation = true;\n        await segmentationService.addSegmentationRepresentationToToolGroup(\n          toolGroupId,\n          segmentationId,\n          hydrateSegmentation,\n          representationType\n        );\n\n        segmentationService.setActiveSegmentationForToolGroup(\n          segmentationId,\n          toolGroupId\n        );\n      }\n\n      return segmentationId;\n    },\n    setSegmentationActiveForToolGroups: ({ segmentationId }) => {\n      const toolGroupIds = _getMatchedViewportsToolGroupIds();\n\n      toolGroupIds.forEach(toolGroupId => {\n        segmentationService.setActiveSegmentationForToolGroup(\n          segmentationId,\n          toolGroupId\n        );\n      });\n    },\n    thresholdSegmentationByRectangleROITool: ({ segmentationId, config }) => {\n      const segmentation = csTools.segmentation.state.getSegmentation(\n        segmentationId\n      );\n\n      const { representationData } = segmentation;\n      const {\n        displaySetMatchDetails: matchDetails,\n      } = hangingProtocolService.getMatchDetails();\n      const volumeLoaderScheme = 'cornerstoneStreamingImageVolume'; // Loader id which defines which volume loader to use\n\n      const ctDisplaySet = matchDetails.get('ctDisplaySet');\n      const ctVolumeId = `${volumeLoaderScheme}:${ctDisplaySet.displaySetInstanceUID}`; // VolumeId with loader id + volume id\n\n      const { volumeId: segVolumeId } = representationData[LABELMAP];\n      const { referencedVolumeId } = cs.cache.getVolume(segVolumeId);\n\n      const labelmapVolume = cs.cache.getVolume(segmentationId);\n      const referencedVolume = cs.cache.getVolume(referencedVolumeId);\n      const ctReferencedVolume = cs.cache.getVolume(ctVolumeId);\n\n      if (!referencedVolume) {\n        throw new Error('No Reference volume found');\n      }\n\n      if (!labelmapVolume) {\n        throw new Error('No Reference labelmap found');\n      }\n\n      const annotationUIDs = csTools.annotation.selection.getAnnotationsSelectedByToolName(\n        RECTANGLE_ROI_THRESHOLD_MANUAL\n      );\n\n      if (annotationUIDs.length === 0) {\n        uiNotificationService.show({\n          title: 'Commands Module',\n          message: 'No ROIThreshold Tool is Selected',\n          type: 'error',\n        });\n        return;\n      }\n\n      const { ptLower, ptUpper, ctLower, ctUpper } = getThresholdValues(\n        annotationUIDs,\n        [referencedVolume, ctReferencedVolume],\n        config\n      );\n\n      return csTools.utilities.segmentation.rectangleROIThresholdVolumeByRange(\n        annotationUIDs,\n        labelmapVolume,\n        [\n          { volume: referencedVolume, lower: ptLower, upper: ptUpper },\n          { volume: ctReferencedVolume, lower: ctLower, upper: ctUpper },\n        ],\n        { overwrite: true }\n      );\n    },\n    calculateSuvPeak: ({ labelmap }) => {\n      const { referencedVolumeId } = labelmap;\n\n      const referencedVolume = cs.cache.getVolume(referencedVolumeId);\n\n      const annotationUIDs = csTools.annotation.selection.getAnnotationsSelectedByToolName(\n        RECTANGLE_ROI_THRESHOLD_MANUAL\n      );\n\n      const annotations = annotationUIDs.map(annotationUID =>\n        csTools.annotation.state.getAnnotation(annotationUID)\n      );\n\n      const suvPeak = calculateSuvPeak(labelmap, referencedVolume, annotations);\n      return {\n        suvPeak: suvPeak.mean,\n        suvMax: suvPeak.max,\n        suvMaxIJK: suvPeak.maxIJK,\n        suvMaxLPS: suvPeak.maxLPS,\n      };\n    },\n    getLesionStats: ({ labelmap, segmentIndex = 1 }) => {\n      const { scalarData, spacing } = labelmap;\n\n      const { scalarData: referencedScalarData } = cs.cache.getVolume(\n        labelmap.referencedVolumeId\n      );\n\n      let segmentationMax = -Infinity;\n      let segmentationMin = Infinity;\n      let segmentationValues = [];\n\n      let voxelCount = 0;\n      for (let i = 0; i < scalarData.length; i++) {\n        if (scalarData[i] === segmentIndex) {\n          const value = referencedScalarData[i];\n          segmentationValues.push(value);\n          if (value > segmentationMax) {\n            segmentationMax = value;\n          }\n          if (value < segmentationMin) {\n            segmentationMin = value;\n          }\n          voxelCount++;\n        }\n      }\n\n      const stats = {\n        minValue: segmentationMin,\n        maxValue: segmentationMax,\n        meanValue: segmentationValues.reduce((a, b) => a + b, 0) / voxelCount,\n        stdValue: Math.sqrt(\n          segmentationValues.reduce((a, b) => a + b * b, 0) / voxelCount -\n            segmentationValues.reduce((a, b) => a + b, 0) / voxelCount ** 2\n        ),\n        volume: voxelCount * spacing[0] * spacing[1] * spacing[2] * 1e-3,\n      };\n\n      return stats;\n    },\n    calculateLesionGlycolysis: ({ lesionStats }) => {\n      const { meanValue, volume } = lesionStats;\n\n      return {\n        lesionGlyoclysisStats: volume * meanValue,\n      };\n    },\n    calculateTMTV: ({ segmentations }) => {\n      const labelmaps = segmentations.map(s =>\n        segmentationService.getLabelmapVolume(s.id)\n      );\n\n      if (!labelmaps.length) {\n        return;\n      }\n\n      return calculateTMTV(labelmaps);\n    },\n    exportTMTVReportCSV: ({ segmentations, tmtv, config }) => {\n      const segReport = commandsManager.runCommand('getSegmentationCSVReport', {\n        segmentations,\n      });\n\n      const tlg = actions.getTotalLesionGlycolysis({ segmentations });\n      const additionalReportRows = [\n        { key: 'Total Metabolic Tumor Volume', value: { tmtv } },\n        { key: 'Total Lesion Glycolysis', value: { tlg: tlg.toFixed(4) } },\n        { key: 'Threshold Configuration', value: { ...config } },\n      ];\n\n      createAndDownloadTMTVReport(segReport, additionalReportRows);\n    },\n    getTotalLesionGlycolysis: ({ segmentations }) => {\n      const labelmapVolumes = segmentations.map(s =>\n        segmentationService.getLabelmapVolume(s.id)\n      );\n\n      let mergedLabelmap;\n      // merge labelmap will through an error if labels maps are not the same size\n      // or same direction or ....\n      try {\n        mergedLabelmap = csTools.utilities.segmentation.createMergedLabelmapForIndex(\n          labelmapVolumes\n        );\n      } catch (e) {\n        console.error('commandsModule::getTotalLesionGlycolysis', e);\n        return;\n      }\n\n      // grabbing the first labelmap referenceVolume since it will be the same for all\n      const { referencedVolumeId, spacing } = labelmapVolumes[0];\n\n      if (!referencedVolumeId) {\n        console.error(\n          'commandsModule::getTotalLesionGlycolysis:No referencedVolumeId found'\n        );\n      }\n\n      const ptVolume = cs.cache.getVolume(referencedVolumeId);\n      const mergedLabelData = mergedLabelmap.scalarData;\n\n      if (mergedLabelData.length !== ptVolume.scalarData.length) {\n        console.error(\n          'commandsModule::getTotalLesionGlycolysis:Labelmap and ptVolume are not the same size'\n        );\n      }\n\n      let suv = 0;\n      let totalLesionVoxelCount = 0;\n      for (let i = 0; i < mergedLabelData.length; i++) {\n        // if not background\n        if (mergedLabelData[i] !== 0) {\n          suv += ptVolume.scalarData[i];\n          totalLesionVoxelCount += 1;\n        }\n      }\n\n      // Average SUV for the merged labelmap\n      const averageSuv = suv / totalLesionVoxelCount;\n\n      // total Lesion Glycolysis [suv * ml]\n      return (\n        averageSuv *\n        totalLesionVoxelCount *\n        spacing[0] *\n        spacing[1] *\n        spacing[2] *\n        1e-3\n      );\n    },\n    setStartSliceForROIThresholdTool: () => {\n      const { viewport } = _getActiveViewportsEnabledElement();\n      const { focalPoint, viewPlaneNormal } = viewport.getCamera();\n\n      const selectedAnnotationUIDs = csTools.annotation.selection.getAnnotationsSelectedByToolName(\n        RECTANGLE_ROI_THRESHOLD_MANUAL\n      );\n\n      const annotationUID = selectedAnnotationUIDs[0];\n\n      const annotation = csTools.annotation.state.getAnnotation(annotationUID);\n\n      const { handles } = annotation.data;\n      const { points } = handles;\n\n      // get the current slice Index\n      const sliceIndex = viewport.getCurrentImageIdIndex();\n      annotation.data.startSlice = sliceIndex;\n\n      // distance between camera focal point and each point on the rectangle\n      const newPoints = points.map(point => {\n        const distance = vec3.create();\n        vec3.subtract(distance, focalPoint, point);\n        // distance in the direction of the viewPlaneNormal\n        const distanceInViewPlane = vec3.dot(distance, viewPlaneNormal);\n        // new point is current point minus distanceInViewPlane\n        const newPoint = vec3.create();\n        vec3.scaleAndAdd(newPoint, point, viewPlaneNormal, distanceInViewPlane);\n\n        return newPoint;\n        //\n      });\n\n      handles.points = newPoints;\n      // IMPORTANT: invalidate the toolData for the cached stat to get updated\n      // and re-calculate the projection points\n      annotation.invalidated = true;\n      viewport.render();\n    },\n    setEndSliceForROIThresholdTool: () => {\n      const { viewport } = _getActiveViewportsEnabledElement();\n\n      const selectedAnnotationUIDs = csTools.annotation.selection.getAnnotationsSelectedByToolName(\n        RECTANGLE_ROI_THRESHOLD_MANUAL\n      );\n\n      const annotationUID = selectedAnnotationUIDs[0];\n\n      const annotation = csTools.annotation.state.getAnnotation(annotationUID);\n\n      // get the current slice Index\n      const sliceIndex = viewport.getCurrentImageIdIndex();\n      annotation.data.endSlice = sliceIndex;\n\n      // IMPORTANT: invalidate the toolData for the cached stat to get updated\n      // and re-calculate the projection points\n      annotation.invalidated = true;\n\n      viewport.render();\n    },\n    createTMTVRTReport: () => {\n      // get all Rectangle ROI annotation\n      const stateManager = csTools.annotation.state.getAnnotationManager();\n\n      const annotations = [];\n\n      Object.keys(stateManager.annotations).forEach(frameOfReferenceUID => {\n        const forAnnotations = stateManager.annotations[frameOfReferenceUID];\n        const ROIAnnotations = forAnnotations[RECTANGLE_ROI_THRESHOLD_MANUAL];\n        annotations.push(...ROIAnnotations);\n      });\n\n      commandsManager.runCommand('exportRTReportForAnnotations', {\n        annotations,\n      });\n    },\n    getSegmentationCSVReport: ({ segmentations }) => {\n      if (!segmentations || !segmentations.length) {\n        segmentations = segmentationService.getSegmentations();\n      }\n\n      let report = {};\n\n      for (const segmentation of segmentations) {\n        const { id, label, cachedStats: data } = segmentation;\n\n        const segReport = { id, label };\n\n        if (!data) {\n          report[id] = segReport;\n          continue;\n        }\n\n        Object.keys(data).forEach(key => {\n          if (typeof data[key] !== 'object') {\n            segReport[key] = data[key];\n          } else {\n            Object.keys(data[key]).forEach(subKey => {\n              const newKey = `${key}_${subKey}`;\n              segReport[newKey] = data[key][subKey];\n            });\n          }\n        });\n\n        const labelmapVolume = segmentationService.getLabelmapVolume(id);\n\n        if (!labelmapVolume) {\n          report[id] = segReport;\n          continue;\n        }\n\n        const referencedVolumeId = labelmapVolume.referencedVolumeId;\n        segReport.referencedVolumeId = referencedVolumeId;\n\n        const referencedVolume = segmentationService.getLabelmapVolume(\n          referencedVolumeId\n        );\n\n        if (!referencedVolume) {\n          report[id] = segReport;\n          continue;\n        }\n\n        if (!referencedVolume.imageIds || !referencedVolume.imageIds.length) {\n          report[id] = segReport;\n          continue;\n        }\n\n        const firstImageId = referencedVolume.imageIds[0];\n        const instance = OHIF.classes.MetadataProvider.get(\n          'instance',\n          firstImageId\n        );\n\n        if (!instance) {\n          report[id] = segReport;\n          continue;\n        }\n\n        report[id] = {\n          ...segReport,\n          PatientID: instance.PatientID,\n          PatientName: instance.PatientName.Alphabetic,\n          StudyInstanceUID: instance.StudyInstanceUID,\n          SeriesInstanceUID: instance.SeriesInstanceUID,\n          StudyDate: instance.StudyDate,\n        };\n      }\n\n      return report;\n    },\n    exportRTReportForAnnotations: ({ annotations }) => {\n      dicomRTAnnotationExport(annotations);\n    },\n    setFusionPTColormap: ({ toolGroupId, colormap }) => {\n      const toolGroup = toolGroupService.getToolGroup(toolGroupId);\n      const { viewportMatchDetails } = hangingProtocolService.getMatchDetails();\n\n      const ptDisplaySet = actions.getMatchingPTDisplaySet({\n        viewportMatchDetails,\n      });\n\n      if (!ptDisplaySet) {\n        return;\n      }\n\n      const fusionViewportIds = toolGroup.getViewportIds();\n\n      let viewports = [];\n      fusionViewportIds.forEach(viewportId => {\n        const viewportInfo = cornerstoneViewportService.getViewportInfo(\n          viewportId\n        );\n\n        const viewportIndex = viewportInfo.getViewportIndex();\n        commandsManager.runCommand('setViewportColormap', {\n          viewportIndex,\n          displaySetInstanceUID: ptDisplaySet.displaySetInstanceUID,\n          colormap: {\n            name: colormap,\n            // TODO: This opacity mapping matches that in hpViewports, but\n            // ideally making this editable in a side panel would be useful\n            opacity: [\n              { value: 0, opacity: 0 },\n              { value: 0.1, opacity: 0.9 },\n              { value: 1, opacity: 0.95 },\n            ],\n          },\n        });\n\n        viewports.push(\n          cornerstoneViewportService.getCornerstoneViewport(viewportId)\n        );\n      });\n\n      viewports.forEach(viewport => {\n        viewport.render();\n      });\n    },\n  };\n\n  const definitions = {\n    setEndSliceForROIThresholdTool: {\n      commandFn: actions.setEndSliceForROIThresholdTool,\n      storeContexts: [],\n      options: {},\n    },\n    setStartSliceForROIThresholdTool: {\n      commandFn: actions.setStartSliceForROIThresholdTool,\n      storeContexts: [],\n      options: {},\n    },\n    getMatchingPTDisplaySet: {\n      commandFn: actions.getMatchingPTDisplaySet,\n      storeContexts: [],\n      options: {},\n    },\n    getPTMetadata: {\n      commandFn: actions.getPTMetadata,\n      storeContexts: [],\n      options: {},\n    },\n    createNewLabelmapFromPT: {\n      commandFn: actions.createNewLabelmapFromPT,\n      storeContexts: [],\n      options: {},\n    },\n    setSegmentationActiveForToolGroups: {\n      commandFn: actions.setSegmentationActiveForToolGroups,\n      storeContexts: [],\n      options: {},\n    },\n    thresholdSegmentationByRectangleROITool: {\n      commandFn: actions.thresholdSegmentationByRectangleROITool,\n      storeContexts: [],\n      options: {},\n    },\n    getTotalLesionGlycolysis: {\n      commandFn: actions.getTotalLesionGlycolysis,\n      storeContexts: [],\n      options: {},\n    },\n    calculateSuvPeak: {\n      commandFn: actions.calculateSuvPeak,\n      storeContexts: [],\n      options: {},\n    },\n    getLesionStats: {\n      commandFn: actions.getLesionStats,\n      storeContexts: [],\n      options: {},\n    },\n    calculateTMTV: {\n      commandFn: actions.calculateTMTV,\n      storeContexts: [],\n      options: {},\n    },\n    exportTMTVReportCSV: {\n      commandFn: actions.exportTMTVReportCSV,\n      storeContexts: [],\n      options: {},\n    },\n    createTMTVRTReport: {\n      commandFn: actions.createTMTVRTReport,\n      storeContexts: [],\n      options: {},\n    },\n    getSegmentationCSVReport: {\n      commandFn: actions.getSegmentationCSVReport,\n      storeContexts: [],\n      options: {},\n    },\n    exportRTReportForAnnotations: {\n      commandFn: actions.exportRTReportForAnnotations,\n      storeContexts: [],\n      options: {},\n    },\n    setFusionPTColormap: {\n      commandFn: actions.setFusionPTColormap,\n      storeContexts: [],\n      options: {},\n    },\n  };\n\n  return {\n    actions,\n    definitions,\n    defaultContext: 'TMTV:CORNERSTONE',\n  };\n};\n\nexport default commandsModule;\n","export default function createAndDownloadTMTVReport(\n  segReport,\n  additionalReportRows\n) {\n  const firstReport = segReport[Object.keys(segReport)[0]];\n  const columns = Object.keys(firstReport);\n  const csv = [columns.join(',')];\n\n  Object.values(segReport).forEach(segmentation => {\n    const row = [];\n    columns.forEach(column => {\n      // if it is array then we need to replace , with space to avoid csv parsing error\n      row.push(\n        Array.isArray(segmentation[column])\n          ? segmentation[column].join(' ')\n          : segmentation[column]\n      );\n    });\n    csv.push(row.join(','));\n  });\n\n  csv.push('');\n  csv.push('');\n  csv.push('');\n\n  csv.push(`Patient ID,${firstReport.PatientID}`);\n  csv.push(`Study Date,${firstReport.StudyDate}`);\n  csv.push('');\n  additionalReportRows.forEach(({ key, value: values }) => {\n    const temp = [];\n    temp.push(`${key}`);\n    Object.keys(values).forEach(k => {\n      temp.push(`${k}`);\n      temp.push(`${values[k]}`);\n    });\n\n    csv.push(temp.join(','));\n  });\n\n  const blob = new Blob([csv.join('\\n')], {\n    type: 'text/csv;charset=utf-8',\n  });\n\n  const url = URL.createObjectURL(blob);\n\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `${firstReport.PatientID}_tmtv.csv`;\n  a.click();\n}\n","import { id } from './id';\nimport getHangingProtocolModule from './getHangingProtocolModule';\nimport getPanelModule from './getPanelModule';\nimport init from './init';\nimport commandsModule from './commandsModule';\n\n/**\n *\n */\nconst tmtvExtension = {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id,\n  preRegistration({\n    servicesManager,\n    commandsManager,\n    extensionManager,\n    configuration = {},\n  }) {\n    init({ servicesManager, commandsManager, extensionManager, configuration });\n  },\n  getPanelModule,\n  getHangingProtocolModule,\n  getCommandsModule({ servicesManager, commandsManager, extensionManager }) {\n    return commandsModule({\n      servicesManager,\n      commandsManager,\n      extensionManager,\n    });\n  },\n};\n\nexport default tmtvExtension;\n"],"names":["id","packageJson","ctAXIAL","viewportOptions","viewportId","viewportType","orientation","toolGroupId","initialImageOptions","preset","syncGroups","type","source","target","displaySets","ctSAGITTAL","ctCORONAL","ptAXIAL","background","options","voi","custom","voiInverted","ptSAGITTAL","ptCORONAL","fusionAXIAL","colormap","name","opacity","value","fusionSAGITTAL","fusionCORONAL","mipSAGITTAL","customViewportProps","hideOverlays","blendMode","slabThickness","ptCT","locked","hasUpdatedPriorsInformation","createdDate","modifiedDate","availableTo","editableBy","imageLoadStrategy","protocolMatchingRules","attribute","constraint","contains","displaySetSelectors","ctDisplaySet","seriesMatchingRules","equals","required","ptDisplaySet","weight","doesNotContain","stages","viewportStructure","layoutType","properties","rows","columns","layoutOptions","x","y","width","height","viewports","numberOfPriorsReferenced","protocol","DEFAULT_MEATADATA","PatientWeight","PatientSex","SeriesTime","RadiopharmaceuticalInformationSequence","RadionuclideTotalDose","RadionuclideHalfLife","RadiopharmaceuticalStartTime","PanelPetSUV","_ref","servicesManager","commandsManager","t","useTranslation","displaySetService","toolGroupService","toolbarService","hangingProtocolService","services","metadata","setMetadata","useState","setPtDisplaySet","handleMetadataChange","prevState","newState","Object","keys","forEach","key","getMatchingPTDisplaySet","viewportMatchDetails","runCommand","useEffect","getActiveDisplaySets","getMatchDetails","length","displaySetInfo","unsubscribe","subscribe","EVENTS","PROTOCOL_CHANGED","_ref2","React","className","Input","label","labelClassName","onChange","e","Button","onClick","Error","getToolGroupIds","toggledState","state","toggles","_broadcastEvent","TOOL_BAR_STATE_MODIFIED","DicomMetadataStore","updateMetadataForSeries","StudyInstanceUID","SeriesInstanceUID","setDisplaySetMetadataInvalidated","displaySetInstanceUID","propTypes","PropTypes","measurementService","getMeasurements","isRequired","VALUE_TYPES","segmentationService","uiDialogService","segmentation","getSegmentation","onSubmitHandler","action","addOrUpdateSegmentation","dismiss","create","centralize","isDraggable","showOverlay","content","Dialog","contentProps","title","noCloseButton","body","_ref3","setValue","autoFocus","containerClassName","event","persist","onKeyPress","actions","text","ButtonEnums","secondary","primary","onSubmit","segmentations","tmtvValue","config","ButtonGroup","color","size","LegacyButton","disabled","tmtv","ROI_STAT","placeHolder","dispatch","Select","closeMenuOnSelect","placeholder","find","option","strategy","payload","variant","colSpan","Label","ctLower","ctUpper","ptLower","ptUpper","DEFAULT_STRATEGY","reducer","PanelRoiThresholdSegmentation","showConfig","setShowConfig","labelmapLoading","setLabelmapLoading","selectedSegmentationId","setSelectedSegmentationId","setSegmentations","getSegmentations","useReducer","setTmtvValue","useCallback","commandName","commandOptions","arguments","undefined","handleTMTVCalculation","toFixed","handleROIThresholding","labelmap","segmentationId","lesionStats","suvPeak","lesionGlyoclysisStats","volume","meanValue","cachedStats","assign","displayText","added","SEGMENTATION_ADDED","updated","SEGMENTATION_UPDATED","subscriptions","evt","push","unsub","SEGMENTATION_REMOVED","setTimeout","then","ROIThresholdConfiguration","SegmentationTable","activeSegmentationId","onToggleVisibility","toggleSegmentationVisibility","onToggleVisibilityAll","ids","map","onDelete","remove","onEdit","segmentationEditHandler","ExportReports","window","open","Icon","extensionManager","iconName","iconLabel","component","wrappedPanelPetSuv","wrappedROIThresholdSeg","PanelROIThresholdSegmentation","getSOPInstanceAttributes","imageId","instance","metaData","SOPInstanceUID","frameNumber","_getUIDFromImageID","toAnnotation","measurement","definition","toMeasurement","csToolsEventDetail","cornerstoneViewportService","annotation","data","annotationUID","console","warn","toolName","referencedImageId","FrameOfReferenceUID","SUPPORTED_TOOLS","includes","displaySet","getDisplaySetForSOPInstanceUID","getDisplaySetsForSeries","uid","referenceSeriesUID","referenceStudyUID","measurementServiceMappingsFactory","RectangleROIStartEndThreshold","csToolsAnnotation","matchingCriteria","valueType","ROI_THRESHOLD_MANUAL","ColorSpace","Name","RGBPoints","registerColormap","utilities","getRoiStats","referencedVolume","annotations","imageData","values","getPointData","getScalars","getData","fn","baseValue","statistic","Infinity","number","maxValue","_getStrategyFn","boundsIJK","csTools","iMin","iMax","jMin","jMax","kMin","kMax","i","j","k","computeOffsetIndex","annotationUIDs","referencedVolumes","Number","referenceVolume","segmentIndex","Modality","scalarData","labelmapData","dimensions","labelmapImageData","referenceVolumeData","referenceVolumeImageData","projectionPoints","rectangleCornersIJK","concat","world","ijk","vec3","worldToIndex","max","maxIJK","maxLPS","pointIJK","pointLPS","offset","referenceValue","direction","getDirection","slice","diameter","Math","pow","PI","secondaryCircleWorld","bottomWorld","topWorld","indexToWorld","suvPeakCirclePoints","count","acc","mean","labelmaps","mergedLabelmap","spacing","reduce","curr","constructor","static","toolData","metadataProvider","projectionPointsImageIds","point","index","ContourData","points","orderedPoints","pointsArrayWithPrecision","flat","ContourImageSequence","sopCommon","get","ReferencedSOPClassUID","sopClassUID","ReferencedSOPInstanceUID","sopInstanceUID","getContourImageSequence","NumberOfContourPoints","ContourGeometricType","AnnotationToPointData","referenceImageId","validateAnnotation","toolClass","TOOL_NAMES","ContourSequence","getContourSequence","ReferencedROINumber","ROIDisplayColor","floor","random","register","DicomMetaDictionary","dcmjs","RTSSReport","dataset","rtSOPInstanceUID","studyInstanceUID","patientModule","generalSeriesModule","generalStudyModule","patientStudyModule","patientDemographicModule","modality","PatientID","patientId","PatientName","patientName","PatientBirthDate","PatientAge","patientAge","patientSex","patientWeight","StudyDate","studyDate","StudyTime","studyTime","StudyID","AccessionNumber","accessionNumber","getPatientModule","rtSeriesModule","SeriesNumber","StructureSetROISequence","ROIContourSequence","RTROIObservationsSequence","ReferencedSeriesSequence","ReferencedFrameOfReferenceSequence","SOPClassUID","Manufacturer","PositionReferenceIndicator","StructureSetLabel","StructureSetName","ReferringPhysicianName","OperatorsName","StructureSetDate","date","StructureSetTime","time","initializeDataset","convert","ROINumber","ROIName","ROIDescription","ROIGenerationAlgorithm","ReferencedFrameOfReferenceUID","getStructureSetModule","ObservationNumber","RTROIInterpretedType","ROIInterpreter","getRTROIObservationsSequence","series","getSeries","ReferencedSeries","ReferencedInstanceSequence","instances","getReferencedSeriesSequence","RTReferencedStudySequence","RTReferencedSeriesSequence","getReferencedFrameOfReferenceSequence","fileMetaInformationVersionArray","Uint8Array","_meta","FileMetaInformationVersion","Value","buffer","vr","TransferSyntaxUID","ImplementationClassUID","ImplementationVersionName","datasetToBlob","classes","MetadataProvider","generateReport","reportBlob","objectUrl","URL","createObjectURL","location","RECTANGLE_ROI_THRESHOLD_MANUAL","LABELMAP","Labelmap","viewportGridService","uiNotificationService","utilityModule","getModuleEntry","getEnabledElement","exports","_getActiveViewportsEnabledElement","activeViewportIndex","getState","element","cs","_getMatchedViewportsToolGroupIds","toolGroupIds","indexOf","viewportIndex","viewportDetails","displaySetsInfo","getDisplaySetByUID","getPTMetadata","_ref4","firstImageId","getDataSources","getImageIdsForDisplaySet","RadiopharmaceuticalStartDateTime","createNewLabelmapFromPT","async","error","createSegmentationForDisplaySet","representationType","hydrateSegmentation","addSegmentationRepresentationToToolGroup","setActiveSegmentationForToolGroup","setSegmentationActiveForToolGroups","_ref5","thresholdSegmentationByRectangleROITool","_ref6","representationData","displaySetMatchDetails","matchDetails","ctVolumeId","volumeId","segVolumeId","referencedVolumeId","getVolume","labelmapVolume","ctReferencedVolume","show","message","getThresholdValues","lower","upper","overwrite","calculateSuvPeak","_ref7","suvMax","suvMaxIJK","suvMaxLPS","getLesionStats","_ref8","referencedScalarData","segmentationMax","segmentationMin","segmentationValues","voxelCount","minValue","a","b","stdValue","sqrt","calculateLesionGlycolysis","_ref9","calculateTMTV","_ref10","s","getLabelmapVolume","exportTMTVReportCSV","_ref11","segReport","additionalReportRows","firstReport","csv","join","row","column","Array","isArray","temp","blob","Blob","url","document","createElement","href","download","click","createAndDownloadTMTVReport","tlg","getTotalLesionGlycolysis","_ref12","labelmapVolumes","ptVolume","mergedLabelData","suv","totalLesionVoxelCount","setStartSliceForROIThresholdTool","viewport","focalPoint","viewPlaneNormal","getCamera","handles","sliceIndex","getCurrentImageIdIndex","startSlice","newPoints","distance","distanceInViewPlane","newPoint","invalidated","render","setEndSliceForROIThresholdTool","endSlice","createTMTVRTReport","stateManager","frameOfReferenceUID","ROIAnnotations","getSegmentationCSVReport","_ref13","report","subKey","imageIds","OHIF","Alphabetic","exportRTReportForAnnotations","_ref14","dicomRTAnnotationExport","setFusionPTColormap","_ref15","toolGroup","getToolGroup","fusionViewportIds","getViewportIds","getViewportInfo","getViewportIndex","getCornerstoneViewport","definitions","commandFn","storeContexts","defaultContext","tmtvExtension","preRegistration","configuration","addTool","RectangleROIStartEndThresholdTool","csTools3DVer1MeasurementSource","getSource","addMapping","colormaps","init","getPanelModule","getHangingProtocolModule","getCommandsModule","commandsModule"],"sourceRoot":""}